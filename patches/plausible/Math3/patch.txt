Math3 -  FL is ranked in the 3 position(s) with a suspicious value: 0.5

Number of failing tests: 1 
Buggy Location: 823

Iteration: 0, Diagnostic: [FE] ArrayIndexOutOfBoundsException Repair Action: replace 
 - final double[] prodHigh = new double[len]; 
 + final double[] prodHigh = new double[len - 1];
Iteration: 1, Diagnostic: [FE] ArrayIndexOutOfBoundsException Repair Action: replace 
 - final double[] prodHigh = new double[len - 1]; 
 + final double[] prodHigh = new double[len * 1];
Iteration: 2, Repair Action: replace 
 - final double[] prodHigh = new double[len * 1]; 
 + final double[] prodHigh = new double[len * 2]; 
 ----------------------------------------------------------------------------------------------------
Math3 -  FL is ranked in the 3 position(s) with a suspicious value: 0.5

Number of failing tests: 1 
Buggy Location: 823

Iteration: 0, Diagnostic: [FE] ArrayIndexOutOfBoundsException Repair Action: replace 
 - final double[] prodHigh = new double[len]; 
 + final double[] prodHigh = new double[len - 1];
Iteration: 1, Diagnostic: [FE] ArrayIndexOutOfBoundsException Repair Action: replace 
 - final double[] prodHigh = new double[len - 1]; 
 + final double[] prodHigh = new double[len * 1];
Iteration: 2, Repair Action: replace 
 - final double[] prodHigh = new double[len * 1]; 
 + final double[] prodHigh = new double[len * 4]; 
 ----------------------------------------------------------------------------------------------------
Math3 -  FL is ranked in the 3 position(s) with a suspicious value: 0.5

Number of failing tests: 1 
Buggy Location: 823

Iteration: 0, Diagnostic: [CE] variable prodHigh is already defined in method linearCombination(double[],double[]) Repair Action: add 
 +  final double[] prodHigh = new double[len];
Iteration: 1, Repair Action: replace 
 -  final double[] prodHigh = new double[len]; 
 + final double[] prodHigh = new double[len + len]; 
 ----------------------------------------------------------------------------------------------------
Math3 -  FL is ranked in the 3 position(s) with a suspicious value: 0.5


Number of failing tests: 1 
Buggy Location: 823
Patch Found in iteration 0 
Repair Action: replace 
 - final  double[]  prodHigh  =  new  double[len];  
 + final  double[]  prodHigh  =  new  double[len  +  1]; 