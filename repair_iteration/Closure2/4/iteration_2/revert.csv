projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=Collections.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newHashSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNodeTraversal());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivate
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newArrayHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String,ObjectType>currentProperties=newLinkedList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(2);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newLinkedHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties);currentProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties);currentProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660LinkedHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660LinkedList<String,ObjectType>currentProperties=newLinkedList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains(functionPrivateName))){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains(functionPrivateName))){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.size()>0)){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.size()>0)){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.isEmpty())){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.isEmpty())){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newLinkedList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalCollection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=Collections.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(2);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkState(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalLinkedHashSet<String,ObjectType>currentProperties=newLinkedHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newHashSet<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String>currentProperties=newArrayList<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newLinkedHashSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newTreeSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newFunctionNodeTraversal());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Traversal.traverse(compiler,n,newFunctionNodeTraversal());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,null,newFunctionNodeTraversal());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ConstructorTraversal.traverse(compiler,n,newFunctionNodeTraversal());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(true));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newFunctionNode(true));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Traversal.traverse(compiler,n,newFunctionNode(true));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Constructor.traverse(compiler,n,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.traverse(compiler,n,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(3);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(5);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ConstructorTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Constructor.traverse(compiler,n,newFunctionNode(functionPrivateName));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newArrayHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660AnnotatedMap.Entry<String,ObjectType>currentProperties=newAnnotatedMap();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newLinkedList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalLinkedHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(8);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.EXPR_RESULT);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION,t.getModule());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:functionType.getExtendedInterfaces()){currentProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION||n.getType()==Token.EXPR_RESULT){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains(functionPrivateName))){checkInterfaceConflictProperties(t,n,functionPrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains(functionPrivateName))){currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.size()>0)){checkInterfaceConflictProperties(t,n,functionPrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains(functionPrivateName))){checkInterfaceConflictProperties(t,n,functionPrivateName,properties);currentProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660LinkedHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660LinkedHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=Collections.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=Collections.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=Collections.synchronizedSet(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=Sets.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=Collections.synchronizedMap(newTreeMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collections.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=Collections.synchronizedMap(newLinkedHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this.functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,currentProperties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,functionPrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,state.getSourceName(),currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName),t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName,currentProperties));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName,null));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName,functionType));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName,true));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName),false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:functionType.getExtendedInterfaces()){currentProperties.clear();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:functionType.getExtendedInterfaces()){currentProperties.clear();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE)+1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE),true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE),false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660n.setJSType(getNativeType(UNKNOWN_TYPE),getFunctionPrivateName());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.size()>0)){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains("function"))){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains("function"))){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkState(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME,t.getModule());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()!=Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME,t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME,t.getSourceName());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeVariants(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeVariants(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeFunctions());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(this,functionPrivateName));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newFunctionNode(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Traversal.traverse(compiler,n,newFunctionNode(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ConstructorTraversal.traverse(compiler,n,newFunctionNode(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("Function"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("Function:"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("FunctionName"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("FunctionfunctionPrivate"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("Functionobject"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashSet<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashSet<String,ObjectType>currentProperties=newLinkedHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkState(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkState(n.getType()==Token.NAME){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkState(n.getType()==Token.NAME);finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Context.checkState(n.getType()==Token.NAME){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Constructor<String,ObjectType>currentProperties=newConstructorMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(2);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Constructor<?>,ObjectType>currentProperties=newConstructorMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Constructor<?>,ObjectType>currentProperties=newConstructorHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(2);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newLinkedHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this.functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,sourceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newArrayHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>(2);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionPrivateName!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionPrivateName!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String>currentProperties=newHashSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String>currentProperties=newArrayList<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String>currentProperties=newArrayList<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finallyQualifiedName<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finallyQualifiedMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finallyQualifiedMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finallyQualifiedName<String,ObjectType>currentProperties=newlyQualifiedName(String.class);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(functionPrivateName.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionObjectCall(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660List<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(5);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(8);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(this),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(this),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,null,newFunctionNode(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newjava.util.ArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,functionPrivateName,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,newFunctionNode(functionPrivateName),true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newClass<?>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newPreconditions());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newLinkedHashMap<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newArrayHashMap<String,ObjectType>(1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collections.<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalList<String,ObjectType>currentProperties=newLinkedList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newHashSet<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName.cloneTree());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newArrayMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660LinkedHashMap<String,ObjectType>currentProperties=newArrayHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalMaps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660&&n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionType!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionPrivateName==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionType!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:functionType.getExtendedInterfaces()){currentProperties.clear();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660&&currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();this.currentProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();previousProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660@SuppressWarnings("unchecked")
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();currentProperties.putAll(
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,this,newFunctionNodeTraversal());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalintfunctionPrivateName=n.getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalintfunctionPrivateName=n.getFirstChild().getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finallyQualifiedName<String>currentProperties=newLinkedHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalNodeTraversal.traverse(compiler,n,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalNodeTraversal.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalinttype=n.getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660TreeSet<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.containsKey(functionPrivateName))){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.contains(functionPrivateName))){
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||(currentProperties!=null&&currentProperties.containsKey(functionPrivateName))){
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,this).traverse(n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newIllegalArgumentException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newNullPointerException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newUnsupportedOperationException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newIllegalStateException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,currentProperties,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660FunctionNodeTraversal.traverse(compiler,n,null,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n.cloneTree());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newHashSet<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this.functionPrivate,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName),currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=Collections.synchronizedMap(newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String,ObjectType>currentProperties=Collections.synchronizedMap(newHashSet<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=Collections.synchronizedMap(newHashSet<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(functionPrivateName.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660LinkedList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660finalintfunctionPrivateName=n.getFirstChild().getLastChild().getString();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName),true);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME){Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(false);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentPro
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties);currentPro
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayHashMap<String,ObjectType>currentProperties=newArrayHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=Collections.synchronizedMap(newHashMap<String,ObjectType>()).clone();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660StaticBucketMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660staticfinalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n!=null){Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(n);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Traversal.traverse(compiler,n,newFunctionNode(false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(6);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newTreeMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660||n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()!=Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivate
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()!=Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:functionType.getExtendedInterfaces()){currentProperties.clear();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION||n.getType()==Token.VAR){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION||n.getType()==Token.EXPR_RESULT){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION||n.getType()==Token.CALL){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION||n.getType()==Token.GETPROP){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeAnnotations());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeChecks());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashSet<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660HashSet<String,ObjectType>currentProperties=newHashSet<String,ObjectType>(0);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.CATCH);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(functionPrivateName,false));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Maps.<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME&&n.getFirstChild()!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME&&n.getString().equals("function")){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME&&n.getChildCount()>1){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME&&n.getFirstChild()==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME&&n.getString().equals("name")){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.VAR){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:functionType.getExtendedInterfaces()){currentProperties.clear();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties);currentProperties.putAll
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Map<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(functionPrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,this,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,sourceName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}else{checkInterfaceConflictProperties(t,n,functionPrivateName,properties
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Collection<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(4);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,null,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:currentProperties.getExtendedInterfaces()){currentProperties.clear();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:currentProperties.getExtendedInterfaces()){currentProperties.clear();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("FunctionParameters"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("Unknowntype"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newRuntimeException("Unknownobjecttype"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionPrivateName==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(functionType!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),newHashMap<String,ObjectType>());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660NodeTraversal.traverse(compiler,n,newTypeCheck(),context);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Set<String>currentProperties=newHashMap<String,ObjectType>(false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME,t.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Preconditions.checkArgument(n.getType()==Token.NAME||n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.FUNCTION){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(n.getType()==Token.NAME){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(0);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties==null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>(1);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Traversal.traverse(compiler,n,newFunctionNode(functionPrivateName));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660Traversal.traverse(compiler,n,newFunctionNode(functionPrivateName),t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newTreeSet<String,ObjectType>();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660ArrayList<String,ObjectType>currentProperties=newArrayList<String,ObjectType>(6);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:currentProperties.getExtendedInterfaces()){currentProperties.clear();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1660if(currentProperties!=null){finalHashMap<String,ObjectType>currentProperties=newHashMap<String,ObjectType>();for(ObjectTypeinterfaceType:currentProperties.getExtendedInterfaces()){currentProperties.clear();}
