bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
2	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
3	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  return;  }  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  return;  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  return;  }	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
4	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  break;  }  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  break;  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  break;  }	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
5	[BUG]  [BUGGY]  checkState(n.getType()!=  Token.FUNCTION);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  checkState(n.getType()!=  Token.FUNCTION);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(n.getType()!=  Token.FUNCTION);	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
6	[BUG]  [BUGGY]  CheckState.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  CheckState.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	CheckState.checkState(n.getType()  ==  Token.FUNCTION);	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
7	[BUG]  [BUGGY]  Parchet.checkArgument(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkArgument(n.getType()  ==  Token.FUNCTION);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkArgument(n.getType()  ==  Token.FUNCTION);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
8	[BUG]  [BUGGY]  Parchet.checkNotNull(properties);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkNotNull(properties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkNotNull(properties);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
9	[BUG]  [BUGGY]  Parchet.checkState(functionPrivateName!=  null);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(functionPrivateName!=  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkState(functionPrivateName!=  null);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
10	[BUG]  [BUGGY]  Parchet.checkState(n!=  null);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(n!=  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkState(n!=  null);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
11	[BUG]  [BUGGY]  Parchet.checkNotNull(currentProperties);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkNotNull(currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkNotNull(currentProperties);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
12	[BUG]  [BUGGY]  Parchet.checkNotNull(propertyName);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkNotNull(propertyName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkNotNull(propertyName);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
13	[BUG]  [BUGGY]  Parchet.checkState(n  ==  null);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(n  ==  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet.checkState(n  ==  null);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
14	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  currentType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  currentType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  currentType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
15	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
16	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
17	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
18	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
19	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
20	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
21	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
22	[BUG]  [BUGGY]  parseFunctionName(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  parseFunctionName(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	parseFunctionName(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
23	[BUG]  [BUGGY]  checkState(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
24	[BUG]  [BUGGY]  checkArgument(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
25	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  currentType);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  currentType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  currentType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
26	[BUG]  [BUGGY]  checkDeclaration(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
27	[BUG]  [BUGGY]  checkDeclaration(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
28	[BUG]  [BUGGY]  checkDeclaration(t,  n,  this.functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  this.functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  this.functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
29	[BUG]  [BUGGY]  checkDeclaration(t,  n,  null,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  null,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  null,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
30	[BUG]  [BUGGY]  checkDeclaration(t,  n,  functionPrivateName,  properties,  interfaceType,  currentProperties);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  functionPrivateName,  properties,  interfaceType,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  functionPrivateName,  properties,  interfaceType,  currentProperties);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
31	[BUG]  [BUGGY]  checkArgument(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
32	[BUG]  [BUGGY]  parseFunctionName(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  parseFunctionName(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	parseFunctionName(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
33	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  currentProperties,  functionPrivateName,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
34	[BUG]  [BUGGY]  checkState(n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkState(n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
35	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
36	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
37	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  return;  }  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  return;  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  return;  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
38	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  break;  }  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  break;  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  break;  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
39	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getFirstChild().getType()  ==  Token.FUNCTION);  }  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getFirstChild().getType()  ==  Token.FUNCTION);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getFirstChild().getType()  ==  Token.FUNCTION);  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
40	[BUG]  [BUGGY]  checkArgument(n.getType()  ==  Token.FUNCTION,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(n.getType()  ==  Token.FUNCTION,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(n.getType()  ==  Token.FUNCTION,  interfaceType);	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
41	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
42	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  interfaceName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  interfaceName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  interfaceName);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
43	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  }  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  }	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
44	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
45	[BUG]  [BUGGY]  parseFunctionName(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  parseFunctionName(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	parseFunctionName(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
46	[BUG]  [BUGGY]  checkState(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  n,  this);	      	non-compiled	[CE]  orphaned  case	8	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck());	      	non-compiled	[CE]  orphaned  case	8	None	replace
49	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TypeCheck());  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TypeCheck());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  this,  new  TypeCheck());	      	non-compiled	[CE]  orphaned  case	8	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this);  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  this);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  this);	      	non-compiled	[CE]  orphaned  case	8	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  n);  [CE]  orphaned  case  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  this,  n);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  this,  n);	      	non-compiled	[CE]  orphaned  case	8	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [CE]  orphaned  case  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  node,  this);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  node,  this);	      	non-compiled	[CE]  orphaned  case	8	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TypeCheck());  [CE]  orphaned  case  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  new  TypeCheck());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  new  TypeCheck());	      	non-compiled	[CE]  orphaned  case	8	None	replace
54	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  functionType,  properties,  currentProperties,  interfacePrivateName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  functionType,  properties,  currentProperties,  interfacePrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  functionType,  properties,  currentProperties,  interfacePrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
55	[BUG]  [BUGGY]  parseFunctionName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  parseFunctionName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	parseFunctionName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
56	[BUG]  [BUGGY]  checkState(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
57	[BUG]  [BUGGY]  checkArgument(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
58	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  interfaceType,  properties);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  interfaceType,  properties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  currentProperties,  interfaceType,  properties);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
59	[BUG]  [BUGGY]  checkNotFound(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
60	[BUG]  [BUGGY]  checkNotFound(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
61	[BUG]  [BUGGY]  checkNotFound(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
62	[BUG]  [BUGGY]  checkNotFound(t,  n,  1,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  1,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  1,  properties,  currentProperties,  interfaceType);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
63	[BUG]  [BUGGY]  checkState(true, "Unknown  type ");  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkState(true, "Unknown  type ");  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(true, "Unknown  type ");	  checkState(false,   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	20	None	replace
64	[BUG]  [BUGGY]  checkState(false,  false, "Unknown  type ");  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkState(false,  false, "Unknown  type ");  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(false,  false, "Unknown  type ");	  checkState(false,   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	20	None	replace
65	[BUG]  [BUGGY]  checkState(false,  true, "Unknown  type ");  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkState(false,  true, "Unknown  type ");  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(false,  true, "Unknown  type ");	  checkState(false,   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	20	None	replace
66	[BUG]  [BUGGY]  checkState(false,  null,   "Unknown  type ");  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  checkState(false,  null,   "Unknown  type ");  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(false,  null,   "Unknown  type ");	  checkState(false,   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	20	None	replace
67	[BUG]  [BUGGY]  checkState(false,  null);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  checkState(false,  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(false,  null);	  checkState(false,   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	20	None	replace
68	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceType(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	12	None	replace
69	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkInterfaceType(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	12	None	replace
70	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);	  checkInterfaceType(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	12	None	replace
71	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  interfaceType,  currentProperties);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  interfaceType,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  interfaceType,  currentProperties);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
72	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
73	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
74	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getReturnType(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getReturnType(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  state.getReturnType(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
75	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
76	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  else  {  super.visitFunction(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  else  {  super.visitFunction(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }  else  {  super.visitFunction(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
77	[BUG]  [BUGGY]  checkPermission(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
78	[BUG]  [BUGGY]  checkPermission(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
79	[BUG]  [BUGGY]  checkPermission(t,  n,  null,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  null,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  null,  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
80	[BUG]  [BUGGY]  checkPermission(t,  n,  currentProperties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  currentProperties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  currentProperties,  functionPrivateName,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
81	[BUG]  [BUGGY]  checkPermission(t,  n,  1,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  1,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  1,  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
82	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
83	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
84	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
85	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
86	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
87	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  }	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
88	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  properties,  currentProperties,  interfaceType);  }	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
89	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
90	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
91	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
92	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  currentName);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  currentName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  currentName);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
93	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
94	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
95	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  interfacePrivateName);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  interfacePrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  functionType,  properties,  currentProperties,  interfacePrivateName);	  checkInterfaceConflictProperties(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	1	None	replace
96	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	1	None	replace
97	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
98	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType,  properties);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType,  properties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType,  properties);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
99	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
100	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
101	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  }  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
102	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
103	[BUG]  [BUGGY]  checkState(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
104	[BUG]  [BUGGY]  checkState(t,  n,  INVALID_TYPE,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  INVALID_TYPE,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  INVALID_TYPE,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
105	[BUG]  [BUGGY]  checkState(t,  n,  status,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  status,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  status,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
106	[BUG]  [BUGGY]  checkState(t,  n,  functionPrivateName,  properties,  interfaceType,  currentProperties);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  functionPrivateName,  properties,  interfaceType,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  functionPrivateName,  properties,  interfaceType,  currentProperties);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
107	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
108	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
109	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  functionName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
110	[BUG]  [BUGGY]  checkInterface(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterface(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterface(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
111	[BUG]  [BUGGY]  checkInterfaceDeclaration(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceDeclaration(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceDeclaration(t,  n,  interfaceName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
112	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfacePrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfacePrivateName,  properties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  interfacePrivateName,  properties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
113	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivateType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivateType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivateType);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
114	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivate);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivate);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceName,  properties,  functionPrivate);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
115	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
116	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  functionPrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
117	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  currentProperties);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  currentProperties);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
118	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
119	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  interfaceType,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
120	[BUG]  [BUGGY]  checkState(n.getType()  ==  Token.FUNCTION,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkState(n.getType()  ==  Token.FUNCTION,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(n.getType()  ==  Token.FUNCTION,  interfaceType);	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
121	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  }  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkState(n.getType()  ==  Token.FUNCTION);  }  else  {  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  }	  checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	6	None	replace
122	[BUG]  [BUGGY]  checkDeclaration(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
123	[BUG]  [BUGGY]  checkDeclaration(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
124	[BUG]  [BUGGY]  checkDeclaration(t,  n,  functionPrivate,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  functionPrivate,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  functionPrivate,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  n,  interfaceType);	      	non-compiled	[CE]  orphaned  case	8	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TypeCheck(this));  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  new  TypeCheck(this));  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  new  TypeCheck(this));	      	non-compiled	[CE]  orphaned  case	8	None	replace
127	[BUG]  [BUGGY]  checkNotFound(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
128	[BUG]  [BUGGY]  checkNotFound(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateType);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
129	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  currentName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
130	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  currentName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
131	[BUG]  [BUGGY]  checkInterface(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterface(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterface(t,  n,  currentName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
132	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  currentName);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  currentName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  currentName);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
133	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  interfaceType,  currentProperties);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  interfaceType,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentName,  properties,  interfaceType,  currentProperties);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
134	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  functionPrivateName,  properties,  currentProperties);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  functionPrivateName,  properties,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  functionPrivateName,  properties,  currentProperties);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
135	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  operationType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  operationType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  operationType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
136	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  nameNode);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  nameNode);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  nameNode);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
137	[BUG]  [BUGGY]  checkInterface(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterface(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterface(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
138	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
139	[BUG]  [BUGGY]  checkInterfaceConflict(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflict(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflict(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
140	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType.getName(),  properties,  currentProperties,  state);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType.getName(),  properties,  currentProperties,  state);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType.getName(),  properties,  currentProperties,  state);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
141	[BUG]  [BUGGY]  checkPermission(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  nameNode,  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
142	[BUG]  [BUGGY]  checkPermission(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
143	[BUG]  [BUGGY]  ParchetState.checkArgument(functionPrivateName!=  null);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ParchetState.checkArgument(functionPrivateName!=  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	ParchetState.checkArgument(functionPrivateName!=  null);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
144	[BUG]  [BUGGY]  Parchet  pn  =  getPropertyPrivate(n.getString());  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Parchet  pn  =  getPropertyPrivate(n.getString());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet  pn  =  getPropertyPrivate(n.getString());	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
145	[BUG]  [BUGGY]  ParchetState  state  =  getState();  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ParchetState  state  =  getState();  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	ParchetState  state  =  getState();	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
146	[BUG]  [BUGGY]  ParchetState.checkNotNull(currentProperties);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ParchetState.checkNotNull(currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	ParchetState.checkNotNull(currentProperties);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
147	[BUG]  [BUGGY]  Parchet  pn  =  getPropertyPrivate(n.getFirstChild());  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Parchet  pn  =  getPropertyPrivate(n.getFirstChild());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet  pn  =  getPropertyPrivate(n.getFirstChild());	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
148	[BUG]  [BUGGY]  Parchet  pn  =  getPropertyPrivate(n.getLastChild());  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Parchet  pn  =  getPropertyPrivate(n.getLastChild());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Parchet  pn  =  getPropertyPrivate(n.getLastChild());	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
149	[BUG]  [BUGGY]  checkState(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
150	[BUG]  [BUGGY]  checkState(t,  n,  functionPrivate,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  functionPrivate,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  functionPrivate,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
151	[BUG]  [BUGGY]  checkInterface(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterface(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterface(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceType(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	12	None	replace
152	[BUG]  [BUGGY]  if(n!=  null)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(n!=  null)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n!=  null)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
153	[BUG]  [BUGGY]  checkArgument(n.getType()!=  Token.FUNCTION);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(n.getType()!=  Token.FUNCTION);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(n.getType()!=  Token.FUNCTION);	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
154	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionName);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionName);	  checkInterfaceConflictProperties(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	1	None	replace
155	[BUG]  [BUGGY]  verifyInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  verifyInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	verifyInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
156	[BUG]  [BUGGY]  checkName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
157	[BUG]  [BUGGY]  checkNotNull(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkNotNull(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotNull(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
158	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  currentProperties,  properties,  functionPrivateName,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
159	[BUG]  [BUGGY]  safeGetProp(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeGetProp(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGetProp(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
160	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  }  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  }	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
161	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName))  {  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
162	[BUG]  [BUGGY]  safeGetProp(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  safeGetProp(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGetProp(t,  n,  functionPrivateName)  {  checkInterfaceConflictProperties(t,  n,  currentProperties,  interfaceType);  }	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
163	[BUG]  [BUGGY]  safeGet(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  safeGet(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeGet(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
164	[BUG]  [BUGGY]  checkInterface(t,  n,  interfaceType,  properties,  currentProperties,  currentType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterface(t,  n,  interfaceType,  properties,  currentProperties,  currentType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterface(t,  n,  interfaceType,  properties,  currentProperties,  currentType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
165	[BUG]  [BUGGY]  checkInterface(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterface(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterface(t,  n,  currentType,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
166	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceType(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  currentType,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
167	[BUG]  [BUGGY]  checkArgument(t,  n!=  null,  currentType,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n!=  null,  currentType,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n!=  null,  currentType,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
168	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName,  null);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName,  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName,  null);	  checkInterfaceConflictProperties(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	1	None	replace
169	[BUG]  [BUGGY]  fits.checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  fits.checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	fits.checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
170	[BUG]  [BUGGY]  Context.checkState(functionPrivateName!=  null);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Context.checkState(functionPrivateName!=  null);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Context.checkState(functionPrivateName!=  null);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
171	[BUG]  [BUGGY]  Context.checkNotNull(currentProperties);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Context.checkNotNull(currentProperties);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Context.checkNotNull(currentProperties);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
172	[BUG]  [BUGGY]  Context.checkNotNull(propertyName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Context.checkNotNull(propertyName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Context.checkNotNull(propertyName);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
173	[BUG]  [BUGGY]  fits.checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  fits.checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	fits.checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
174	[BUG]  [BUGGY]  Constructor  <?>  currentProperties  =  getCurrentProperties();  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Constructor  <?>  currentProperties  =  getCurrentProperties();  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Constructor  <?>  currentProperties  =  getCurrentProperties();	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
175	[BUG]  [BUGGY]  Constructor  <?>  currentProperties  =  getCurrentProperty(n.getString(),  functionPrivateName);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  Constructor  <?>  currentProperties  =  getCurrentProperty(n.getString(),  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Constructor  <?>  currentProperties  =  getCurrentProperty(n.getString(),  functionPrivateName);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    	non-compiled	[CE]  orphaned  case	10	None	replace
176	[BUG]  [BUGGY]  checkNotFound(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  currentName,  properties,  currentProperties,  interfaceType);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
177	[BUG]  [BUGGY]  checkNotFound(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);	  checkNotFound(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	15	None	replace
178	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);	  checkInterfaceName(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	9	None	replace
179	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  state.getMessage(),  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  state.getMessage(),  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  state.getMessage(),  properties,  currentProperties,  functionPrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
180	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  interfacePrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  interfacePrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  interfacePrivateName);	  checkInterfaceName(t,    n,    interfaceType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	13	None	replace
181	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  }  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.FUNCTION)  {  checkArgument(n.getType()  ==  Token.FUNCTION);  }  else  {  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  }	  checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	16	None	replace
182	[BUG]  [BUGGY]  checkArgument(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
183	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceName(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    interfaceName,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	11	None	replace
184	[BUG]  [BUGGY]  checkPermission(t,  n,  1L,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  1L,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  1L,  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
185	[BUG]  [BUGGY]  checkPermission(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  state.getMessage(),  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
186	[BUG]  [BUGGY]  checkPermission(t,  n,  INVALID_TYPE,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  INVALID_TYPE,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  INVALID_TYPE,  properties,  currentProperties,  interfaceType);	  checkPermission(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	17	None	replace
187	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(n.getType()  ==  Token.NAME)  {  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  }  else  {  throw  new  IllegalStateException( " ");  }	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
188	[BUG]  [BUGGY]  checkAndFixInterface(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkAndFixInterface(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkAndFixInterface(t,  n,  currentName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	18	None	replace
189	[BUG]  [BUGGY]  checkState(t,  n,  1,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  1,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  1,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
190	[BUG]  [BUGGY]  checkState(t,  n,  state.getMessage());  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  state.getMessage());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  state.getMessage());	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
191	[BUG]  [BUGGY]  checkState(t,  n,  STRING_LITERAL_EXPECTED_ERROR,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  STRING_LITERAL_EXPECTED_ERROR,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  STRING_LITERAL_EXPECTED_ERROR,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
192	[BUG]  [BUGGY]  checkState(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  state.getMessage(),  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
193	[BUG]  [BUGGY]  checkState(t,  n,  STRING_LITERAL_EXPR_RESULT,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  STRING_LITERAL_EXPR_RESULT,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  STRING_LITERAL_EXPR_RESULT,  properties,  currentProperties,  interfaceType);	  checkState(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	3	None	replace
194	[BUG]  [BUGGY]  aughtException.from(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  aughtException.from(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	aughtException.from(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
195	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
196	[BUG]  [BUGGY]  safeMultiply(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeMultiply(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
197	[BUG]  [BUGGY]  Context.checkArgument(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  Context.checkArgument(n.getType()  ==  Token.FUNCTION);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Context.checkArgument(n.getType()  ==  Token.FUNCTION);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
198	[BUG]  [BUGGY]  safeMultiply(t,  n,  functionPrivateName);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(t,  n,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	safeMultiply(t,  n,  functionPrivateName);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
199	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	Context.checkState(n.getType()  ==  Token.NAME);	  if(functionPrivateName!=    null)    {    checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    }    else    {    Preconditions.checkNotNull(currentProperties);    }    	non-compiled	[CE]  orphaned  case	14	None	replace
200	[BUG]  [BUGGY]  checkNotFound(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
201	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
202	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfacePrivateName);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfacePrivateName);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfacePrivateName);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    functionPrivateName);    	non-compiled	[CE]  orphaned  case	4	None	replace
203	[BUG]  [BUGGY]  checkAndFixInterface(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkAndFixInterface(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkAndFixInterface(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
204	[BUG]  [BUGGY]  checkState(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
205	[BUG]  [BUGGY]  checkNotFound(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  checkNotFound(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
206	[BUG]  [BUGGY]  checkPermission(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  checkPermission(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
207	[BUG]  [BUGGY]  checkArgument(n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
208	[BUG]  [BUGGY]  checkArgument(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    state.getName(),    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	7	None	replace
209	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeVariants());  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeVariants());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeVariants());	      	non-compiled	[CE]  orphaned  case	8	None	replace
210	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  new  TypeCheck());  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  t,  new  TypeCheck());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  t,  new  TypeCheck());	      	non-compiled	[CE]  orphaned  case	8	None	replace
211	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));	      	non-compiled	[CE]  orphaned  case	8	None	replace
212	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeDesc());  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeDesc());  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeDesc());	      	non-compiled	[CE]  orphaned  case	8	None	replace
213	[BUG]  [BUGGY]  checkArgument(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
214	[BUG]  [BUGGY]  checkState(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
215	[BUG]  [BUGGY]  checkNotNull(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  checkNotNull(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotNull(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentProperties,    functionPrivateName,    properties,    interfaceType);    	non-compiled	[CE]  orphaned  case	2	None	replace
216	[BUG]  [BUGGY]  checkDeclaration(t,  n,  state,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  state,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  state,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
217	[BUG]  [BUGGY]  checkDeclaration(t,  n,  moduleName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkDeclaration(t,  n,  moduleName,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  moduleName,  properties,  currentProperties,  interfaceType);	  checkDeclaration(t,    n,    functionPrivateName,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	5	None	replace
218	[BUG]  [BUGGY]  checkAndFixInterface(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  checkAndFixInterface(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkAndFixInterface(t,  n,  currentType,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
219	[BUG]  [BUGGY]  checkState(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkState(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  currentType,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
220	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getSourceName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getSourceName(),  properties,  currentProperties,  interfaceType);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  state.getSourceName(),  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
221	[BUG]  [BUGGY]  checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]    properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  checkInterfaceConflictProperties(t,    n,    currentType,    properties,    currentProperties,    interfaceType);    	non-compiled	[CE]  orphaned  case	19	None	replace
