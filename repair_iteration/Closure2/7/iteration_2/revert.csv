projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);}else{Preconditions.checkNotNull(currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getFirstChild().getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(true,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,true,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,status,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{NodeTraversal.traverse(compiler,n,newTypeCheck());}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflict(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType.getName(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getLastChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{Preconditions.checkArgument(n.getType()==Token.VAR);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1L,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeDesc());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceName!=null){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceName(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceName(t,n,currentProperties,interfaceType,properties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.EXPR_RESULT){checkInterfaceName(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,currentProperties,interfaceType,properties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=n.getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssign(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,this.functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalStateException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);return;
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,state.getSourceName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,properties,interfacePrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,status);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,status,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,status,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n,status,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,newTypeCheck(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor.traverse(compiler,t,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ConstructorTraversal.traverse(compiler,t,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Traversal.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(this.null==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(this.null!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(t,n==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(currentProperties==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(currentProperties!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,newTypeCheck(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,newTypeCheck(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,interfaceType,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,null,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentType,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,type,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentStructure();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getFunctionProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getNativeType(UNKNOWN_TYPE);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getSupportedProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperties(interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getImplicitProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(t.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionObjectCall(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunction(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssignmentOp(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssignmentOp(n.getType()==Token.FUNCTION)&&checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssignmentOp(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,moduleName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeVariants(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,interfaceType,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,null,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);thrownewIllegalArgumentException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getMessage(),currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION&&NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionObjectCall(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(this.functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(interfaceType!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(interfaceType==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,interfacePrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,nameNode,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,nameNode,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,nameNode,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,nameNode,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,1,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,interfacePrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,interfaceType,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,functionType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.visitFunction(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ConstructorVisitor.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ConstructorVisitor.checkArgument(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ConstructorVisitor.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664validateArgument(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseArgument(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,interfaceName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseArgument(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionName,properties,currentProperties,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this.interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,n,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this.interface);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("Function"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("Function:"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("JSC_INTERFACE_ERROR"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("Property"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("JSC_INTERFACE_TYPE"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,nameNode,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,this.nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,DEFAULT_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664tate(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Statestate=n.getState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664state.getType()==Token.FUNCTION;
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,currentProperties)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getMessage())){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getCode())){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getSourceName())){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,1,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkState(t,n,1,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,1,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkState(t,n,1,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.VAR){checkState(t,n,1,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,interfacePrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,interfaceType,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionType(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceType(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,currentProperties){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,null);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyArgument(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseArgument(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664validateArgument(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION&&n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||n.getType()!=Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||n.getFirstChild().getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()!=Token.FUNCTION||n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.NAME);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfacePrivateName,properties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceName!=null){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,currentName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,currentName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,currentName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseStatement(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunction(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionDeclaration(t,n,state,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,functionPrivateName,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunctionName(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n==null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterface(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterface(t,n,interfaceName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getMessage(),interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,type,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,parent,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,currentProperties)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getMessage())){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getCode())){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getSourceName())){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,interfacePrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getLastChild(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n,n.getLastChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getLastChild(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n,n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()!=Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=t.getConstructor();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssign(n.getType()){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.GETPROP){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,1L,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,2L,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1L,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,2,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(interfaceType!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(this.functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(currentProperties!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(interfaceType==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(interface);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,typeFunctionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunctionName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,null,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n==null,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n!=null,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n==null,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionDeclaration(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalStateException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(interface);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(this.functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(currentProperties!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(interfaceType!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(null!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(this.functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,currentProperties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,currentProperties,properties,functionPrivate,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionType,properties,currentProperties,interfacePrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,n,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,null,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,t,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,INVALID_TYPE,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkPermission(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkPermission(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,INVALID_TYPE,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(currentProperties!=null){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,functionType,properties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionPrivateName.getString(),n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionType.getString(),n.getString(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionName.getString(),n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionType.getString(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionType.getString(),n.getString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getReturnCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getCurrentState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState().getOwnState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState().getOwnerState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getFunctionState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState().getActualState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState().getAndClearBuffer();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(t,n!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n>=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAddProp(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,type,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetal.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetUtil.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetal.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetUtil.checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseArgument(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyArgument(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,name,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeInterface(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodecurrentProperty=n.getFirstChild();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getFirstChild().getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,1,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664tryFunction(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,2,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,1,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,signature,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(true,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,interfaceType!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,interfaceType==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkState(false,null);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkState(false,null);}else{properties.putAll(interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(currentProperties,propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getSourceName(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,getClass());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSourceName(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceType(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType.getName(),properties,currentProperties,state);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType.getReturnType(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType.getName(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664State.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(t.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseStatement(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664test(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(currentProperties!=null){checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(currentProperties!=null){checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,operationType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionType,properties,currentProperties,operationPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,operationType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalStateException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Status.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n.getType()){checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n.getType()){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n.getType()){checkState(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n.getType()){checkState(n.getType()==Token.FUNCTION);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getCode());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n,state.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getReturnType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getLineno());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,false,null,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(true,false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,true,null,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION);break;
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.reportCodeChange();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(t.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()!=Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME||n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME,t.getModule());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(currentProperties.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION,interfaceType);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION,interfaceType);}else{returnnull;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionType,properties,currentProperties,name);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,null,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getReturnType(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getName(),properties,interfaceType,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,nameNode,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyArgument(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseArgument(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664validateArgument(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,null,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getMessage(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()!=Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()!=Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),signature,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,"Unknowntype",null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,",Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,"Unknowntype.");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeCheck(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,interfaceType,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeCheck(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,null,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()!=Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()!=Token.FUNCTION){checkArgument(n.getType()!=Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()!=Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()!=Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()!=Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664t.visitFunction(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunctionName(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,this.functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,currentProperties){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getReturnType(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getReturnType(),properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,state.getReturnType(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getReturnType(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaredProperties(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString(),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString()+"_");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivate);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceName,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfaceName,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,functionPrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,functionPrivateName);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceType,properties,functionPrivateName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,currentProperties){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkPermission(t,n,1,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkPermission(t,n,1,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkPermission(t,n,1,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.EXPR_RESULT){checkPermission(t,n,1,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME&&n.getChildCount()>1){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSourceName(),currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,null,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,null,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,null,properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,null,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,null,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,null,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664state.getMessage(),n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),name,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.visitFunction(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflict(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflict(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkConflict(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(interface);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(currentProperties==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664while(n.getType()==Token.NAME&&n.getLastChild().getString().equals("function")){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664while(n.getType()==Token.NAME&&n.getString().equals("function")){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664while(n.getType()==Token.NAME&&n.getLastChild().getString().equals("function")){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664while(n.getType()==Token.NAME&&n.getChildCount()>1){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664while(n.getType()==Token.NAME&&n.getLastChild().getString().endsWith("__")){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n==null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}else{super.visitFunction(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSourceName(),functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,DEFAULT_NAME,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getName(),properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfacePrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,null,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(propertyName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(propertyName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ConstructorVisibility.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getName(),properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunctionName(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,1,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties,interfacePrivateName,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionObjectCall(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION&&NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||!NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfacePrivateName,properties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(properties!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,getType())){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getMessage())){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssignmentOp(n.getType(){Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getMessage(),currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getName(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,this.functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,name){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,sourceName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,type,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getNext());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getFirstChild(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getFirstChild(),null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.visitFunction(t,n,state.getName(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,interfaceType,newTypeDesc());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeDesc(),interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,newTypeDesc());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeDesc(interfaceType));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,null,newTypeDesc());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeInterface(t,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName(t,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfacePrivateName,properties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getMessage(),properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getName(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfacePrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,functionType,properties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfacePrivateName);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664passts.checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getMessage(),currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.visitFunction(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testFunctionName(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,state.getName
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(interfaceType));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,newTypeCheck(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(this,interfaceType));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(interface));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeCheck(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(interfaces));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(type));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getReturnCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664test(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<Node>n=n.getConstructor();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,functionPrivate,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionType,properties,currentProperties,interfacePrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionName,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,state.getMessage(),properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n,functionPrivateName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n,functionPrivateName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n,functionPrivateName,properties,currentProperties,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,moduleName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,moduleName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,moduleName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkDeclaration(t,n,moduleName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getModule(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceType(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceType(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceType(t,n,currentName,properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(true,null,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,interfaceType,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,"Unknowntype",interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,"Unknowntype.");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,DEFAULT_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,properties,nameNode,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,nameNode,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,parent,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),signature,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionIndex,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfaceName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfacePrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,1,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState(t,n,interfaceType,properties,currentProperties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfacePrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAccess(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceType,properties,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,interfaceName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,interfacePrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(interfaces);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),currentName){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),currentName){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),currentName){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyArgument(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotState(t,n,status,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),signature,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this,t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,true,false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,interfaceType,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,nameNode,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotState(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionIndex,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,properties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,properties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,interfaceName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfaceName,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties,operationType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,operationType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString(),protocolType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n,state.getName(),properties,currentProperties,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.GETPROP){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.GETPROP){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionIndex,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getMessage(),currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyArgument(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testArgument(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,",Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aught(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aught(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfacePrivateName,properties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(functionPrivateId!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,functionPrivateType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(interfaceType.getType()==Token.FUNCTION,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getParent());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,INVALID_TYPE,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,ctxt,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||NodeUtil.isFunctionObjectCall(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getName(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.GETPROP){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.VAR){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()!=Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(interfaces);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(connectType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,signature,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this.n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this.node,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this.null,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1L,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Magimizer.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<Object>currentProperties=getCurrentProperty(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parent.visitFunction(t,n,state.getName(),properties,null,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getName(),properties,interfaceType,existingProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties.getName(),properties,interfaceType,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionType.getString(),n.getName());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionPrivateName.getString(),n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionType.getString(),n.getString(),name);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.GETPROP){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetUtil.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceFunctionName(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceName,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_NOT_IMPLEMENTED,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),signature,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),interfacePrivateName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())>0){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterface(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceName,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflict(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getSourceName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,1)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,null)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfacePrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfacePrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(this.node!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n[Delete]null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664test(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Faces.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getLineno(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType==null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType==null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceType)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentProperties,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664tryFunction(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeInsertion(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getType()==Token.GETPROP);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotState(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceDeclaration(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceFunction(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(currentProperties.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION&&NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION||n.hasChildren());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,name,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()!=Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()!=Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n.getType()){checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchett=getStatement(n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchett=getStatement(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceName!=null){checkInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceName,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parse(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getArgumentState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getOwnState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getActualState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664facerilor.checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664passts.checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,4,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,0,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Opcodes.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(interfaces);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(connectType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfacePrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,properties,functionType,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,nameNodeType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,1)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfaceName,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyArgument(t,n!=null,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664validateInterfaceName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,interfaceName,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfacePrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfacePrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType==null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType==null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);}else{Preconditions.checkNotNull(interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,interfaceName,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,interfacePrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,FunctionType.FUNCTION,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(true,true,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName.toString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName.getString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfacePrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getStandardProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getConstructors();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n.getType()==Token.NAME,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getLastChild(),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this.type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this.connectionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),currentName){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.NAME)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckArgument(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceDeclaration(t,n,interfaceType,properties,currentProperties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(currentProperties!=null){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}else{super.visitFunction(t,n,currentType,properties,interfaceType,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(currentProperties!=null){checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,properties,interfaceType,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,nameNode.toString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,state.getMessage(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n.getType())>0){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())>0){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n.getType())>0){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkArgument(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()!=Token.FUNCTION)){checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()!=Token.FUNCTION)){checkArgument(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n.getType()){checkArgument(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(functionPrivate,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceName,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,name);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceDeclaration(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(interfaceType.getType()==Token.FUNCTION,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceName,properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,newTypeDesc());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType.getName(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType.getName(),properties,currentProperties,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties.getName(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);return;
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfacePrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,null,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,currentProperties,moduleName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,currentProperties,moduleName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{NodeTraversal.traverse(compiler,n,newTypeCheck());}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{NodeTraversal.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()!=Token.FUNCTION)){checkState(n.getType()==Token.FUNCTION);}else{NodeTraversal.traverse(compiler,n,newTypeCheck());}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,type,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,nameNodeName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,nameEnd);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}else{NodeTraversal.traverse(compiler,n,newTypeCheck());}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(this.functionPrivate!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newIllegalArgumentException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,newRuntimeException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,interfaceType,newRuntimeException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newNullPointerException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("")));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getLineno(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,currentProperties,this.functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,currentProperties,properties,this.functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,this.functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,null,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,1,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceType,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionIndex,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceName,properties,currentType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getLineno(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceName,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(null,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,properties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,properties,functionType,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceFunctionName(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(this.node==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,interfacePrivateName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType!=null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(interfaceType==null){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,functionType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);}else{super.visitFunction(t,n,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfacePrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,nameNode,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,nameNode,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(n,this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(this),n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(n),this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getName(),properties,null,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664check(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())>0){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceName)){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())>0){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType()){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceName)){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),interfaceName){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeAdd(n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME&&NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME,t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n!=null&&n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n==null,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Statestate=getState(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotState(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,2,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,4,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,DETERMINISTIC_FACTOR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(t,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,n,state.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n!=null&&n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION&&NodeUtil.isFunctionDeclaration(n));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(currentProperties.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getName(),properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getName(),properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n.getType())){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeTwins(t,n.getType(),state.getName())){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME,t.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,operationType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType==FunctionNode.FUNCTION_NOT_OBJECT);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType==FunctionNode.FUNCTION_NOT_OBJECT||currentType==FunctionNode.FUNCTION_NOT_OBJECT);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName.toString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceType,properties,currentProperties,functionPrivateName,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,state.getName(),properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentPropertyType(n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(t.getModule()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(t);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,1,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664test(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentValues,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(null,"functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(currentName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,name){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,state.getMessage())){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyValue(n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,null)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkModule(t,n,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,moduleName,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||n.getFirstChild()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||n.getChildCount()==1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getMessage(),properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getCode(),properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Statestate=n.getFirstChild();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664turnNullPointerException(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>c=n.getFirstChild();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixAccess(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName,false);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName,sourceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,DEFAULT_NAME_REASON,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixPermission(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(null));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentType=n.getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.printStackTrace();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.printStackTrace();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeName.setAssignmentTo(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,node);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Statestate=t.getState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.EMPTY);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterfaceType(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(connector);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkAndFixInterface(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);if(n.getType()==Token.VAR){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getNativeProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(getCurrentNode());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getFirstChild()==null){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.VAR){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664turnNullPointerException(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664turnNullPointerException(t,n.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterfaceType(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,DEFAULT_TITLE_FONT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixPermission(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,INVALID_TYPE,properties,currentNames,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()!=Token.FUNCTION);}else{returnnull;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,state.getSourceName(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely()){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,null)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>current=n.getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getFirstChild().getType()==Token.FUNCTION){checkArgument(n.getFirstChild().getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getFirstChild().getType()!=Token.FUNCTION){checkArgument(n.getFirstChild().getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getFirstChild().getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION||n.getFirstChild().getType()==Token.FUNCTION){checkArgument(n.getLastChild().getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||n.getFirstChild()==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION||n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION||n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION||interfaceType==Token.EXPR_RESULT);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION||interfaceType==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(t,n,state.getName(),properties,currentProperties,interfaceType);}else{visitFunction(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(t,n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(t,n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664state=n.getFirstChild();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,properties,currentInfo,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,DEFAULT_POLICY_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixPermission(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,property,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,1,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getFirstChild()==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION||n.getFirstChild()!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType==null,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentReferenceType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeDesc(type));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,baseUri,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(null!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(null==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,DEFAULT_TITLE_FONT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkNotNull(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndClearBuffer(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,1,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,functionPrivateName,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeCheck(),intertypeType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newClassCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterfaceName(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Preconditions.checkArgument(n.getType()==Token.EMPTY);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,signature)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,parent,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,parent,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentType,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION);break;
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException("Unknowntype"));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixPermission(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndClearBuffer(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndCheck(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState(n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState(n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=super.visitFunction(t,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState(n.getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getSourceName(),functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,state.getSourceName(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkModifiers(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(null!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(null,"functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n!=null,n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getMessage(),properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||n.getFirstChild()==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||n.getFirstChild()!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.VAR);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION||n.getChildCount()==1);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getSourceName(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,parent,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionNode,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,currentName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>current=n.getFirstChild();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664test(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,currentType,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664testState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getLineno(),state.getCharno(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkAndFixInterface(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME);if(n.getType()==Token.VAR){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME);if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(getType());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,1,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,TRUE_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,1L,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,newTypeCheck(),intertypeType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixPermission(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()!=Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION,interfaceType,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION,name);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION,signature);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||interfaceType==Token.EXPR_RESULT);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,1,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME);if(n.getType()==Token.VAR){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.NAME);if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getMessage(),functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,1,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,1,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664validateName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,4,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,state.getMessage(),n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),FunctionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,status,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(n,propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newSortCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this,intertype);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,null,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(connector);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(n,propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()!=Token.FUNCTION);}else{returnnull;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getLineNumber());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getReturnCode());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664state=n.getType();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeFunctions());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newPreconditions());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeChecks());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,1,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName,sourceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName,type);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=n.getProp(Node.SOURCENAME_PROP);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=n.getProp(Node.FUNCTION_PROP);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getReturnCode(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getLineno(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,DEFAULT_TITLE_FONT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,interfaceType){checkConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixAccess(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,name,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,signature,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkAndFixInterface(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);if(n.getType()==Token.VAR){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSource(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType.getName(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,interfaceType.getName(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,this.functionType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getCode(),properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getCode(),properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSourceName(),properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getSource(),properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(null,"functionPrivateName==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(null,"functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664turnNullPointerException(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),functionName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(functionPrivateName.getString(),n.getString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),signature);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n!=null,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkArgument(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,1,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,FunctionNode.FUNCTION_STATEMENT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,FunctionNode.FUNCTION_NOT_ASCII,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,state.getSourceName(),n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkArgument(n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkArgument(n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,interfaceType)){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safely(t,n,sourceName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=n.getFirstChild();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=n.getParent();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,moduleName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,1,properties,currentProperties,interfacePrivateName);
