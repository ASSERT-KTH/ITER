bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
2	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName,  properties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
3	[BUG]  [BUGGY]  checkState(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  checkState(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
4	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  functionPrivateName);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
5	[BUG]  [BUGGY]  checkDeclaration(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException  [CONTEXT]    [BUGGY]  checkDeclaration(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkDeclaration(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
6	[BUG]  [BUGGY]  checkState(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]              NullPointerException  [CONTEXT]    [BUGGY]  checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(n.getType()  ==  Token.FUNCTION);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
7	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  state.getName(),  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
8	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]                  NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	  	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
9	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceName(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
10	[BUG]  [BUGGY]  if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  }  [CE]  orphaned  case  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  }  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  }	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
11	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceName,  properties,  currentProperties,  functionPrivateName);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
12	[BUG]  [BUGGY]  checkInterfaceType(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceType(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceType(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
13	[BUG]  [BUGGY]  checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]            NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceName(t,  n,  interfaceType,  properties,  currentProperties,  functionPrivateName);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
14	[BUG]  [BUGGY]  if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  }  else  {  Preconditions.checkNotNull(currentProperties);  }  [CE]  orphaned  case  [FE]              NullPointerException  [CONTEXT]    [BUGGY]  if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  }  else  {  Preconditions.checkNotNull(currentProperties);  }  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  }  else  {  Preconditions.checkNotNull(currentProperties);  }	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
15	[BUG]  [BUGGY]  checkNotFound(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  checkNotFound(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkNotFound(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
16	[BUG]  [BUGGY]  checkArgument(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  checkArgument(n.getType()  ==  Token.FUNCTION);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkArgument(n.getType()  ==  Token.FUNCTION);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
17	[BUG]  [BUGGY]  checkPermission(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  checkPermission(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkPermission(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
18	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentName,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
19	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]            NullPointerException  [CONTEXT]    [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkInterfaceConflictProperties(t,  n,  currentType,  properties,  currentProperties,  interfaceType);	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
20	[BUG]  [BUGGY]  checkState(false, "Unknown  type ");  [CE]  orphaned  case  [FE]              NullPointerException  [CONTEXT]    [BUGGY]  checkState(false, "Unknown  type ");  [BUGGY]  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	checkState(false, "Unknown  type ");	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  	non-compiled	[CE]  orphaned  case	13	None	replace
