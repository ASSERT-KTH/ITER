projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(functionPrivateName!=null){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);}else{Preconditions.checkNotNull(currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664CheckState.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkNotNull(propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchet.checkState(n==null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,this.functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{return;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{break;}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getFirstChild().getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfaceName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,functionPrivateName);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,this,n);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,node,this);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664parseFunctionName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(true,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,false,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,true,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null,"Unknowntype");
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(false,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getName(),properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getReturnType(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,state.getName(),properties,currentProperties,interfaceType);}else{super.visitFunction(t,n,state.getName(),properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,null,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceType,properties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalArgumentException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,functionPrivateName,properties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,properties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,status,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivateName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,functionName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceDeclaration(t,n,interfaceName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfacePrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentProperties,interfaceName,properties,functionPrivate);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,interfaceType,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(n.getType()==Token.FUNCTION,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkState(n.getType()==Token.FUNCTION);}else{NodeTraversal.traverse(compiler,n,newTypeCheck());}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,newTypeCheck(this));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,interfaceName,properties,currentProperties,functionPrivateType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceName,properties,currentProperties,currentName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentName,properties,interfaceType,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,functionPrivateName,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,operationType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,nameNode);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflict(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType.getName(),properties,currentProperties,state);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,nameNode,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkArgument(functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getString());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetStatestate=getState();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664ParchetState.checkNotNull(currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getFirstChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Parchetpn=getPropertyPrivate(n.getLastChild());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,functionPrivate,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n!=null){checkArgument(n.getType()==Token.FUNCTION);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()!=Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664verifyInterfaceName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkName(t,n,interfaceType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,currentProperties,properties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName)){checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGetProp(t,n,functionPrivateName){checkInterfaceConflictProperties(t,n,currentProperties,interfaceType);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeGet(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,interfaceType,properties,currentProperties,currentType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterface(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceType(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n!=null,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,interfaceType,properties,currentProperties,functionPrivateName,null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(functionPrivateName!=null);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(currentProperties);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkNotNull(propertyName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664fits.checkInterfaceConflictProperties(t,n,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperties();
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Constructor<?>currentProperties=getCurrentProperty(n.getString(),functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,state.getMessage(),properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.FUNCTION){checkArgument(n.getType()==Token.FUNCTION);}else{Preconditions.checkArgument(n.getType()==Token.VAR);}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceName(t,n,interfaceName,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,1L,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getMessage(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,INVALID_TYPE,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664if(n.getType()==Token.NAME){checkInterfaceConflictProperties(t,n,currentName,properties,currentProperties,interfaceType);}else{thrownewIllegalStateException("");}
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,1,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPECTED_ERROR,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getMessage(),functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,STRING_LITERAL_EXPR_RESULT,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664aughtException.from(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkArgument(n.getType()==Token.FUNCTION);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664safeMultiply(t,n,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664Context.checkState(n.getType()==Token.NAME);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,currentType,properties,currentProperties,functionPrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,functionPrivateName,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,currentType,properties,currentProperties,interfacePrivateName);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotFound(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkPermission(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,state.getName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeVariants());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,t,newTypeCheck());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newRuntimeException(""));
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664NodeTraversal.traverse(compiler,n,newTypeDesc());
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkNotNull(t,n,currentProperties,functionPrivateName,properties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,state,functionPrivateName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkDeclaration(t,n,moduleName,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkAndFixInterface(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkState(t,n,currentType,properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkInterfaceConflictProperties(t,n,state.getSourceName(),properties,currentProperties,interfaceType);
projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java1664checkArgument(n.getType()==Token.FUNCTION||n.getType()==Token.NAME);
