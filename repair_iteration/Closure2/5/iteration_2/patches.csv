bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplementedInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplementedInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplementedInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	15	None	replace
2	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConfig().getOwnInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConfig().getOwnInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getConfig().getOwnInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	15	None	replace
3	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getOwnInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getOwnInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	21	None	replace
4	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getOwnInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getOwnInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	21	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(currentProperties.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(currentProperties.getType()  ==  Token.FUNCTION);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(currentProperties.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
8	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
10	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
11	[BUG]  [BUGGY]  for(ObjectType  functionType  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  functionType.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
12	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  functionType.getInterfaceType())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  functionType.getInterfaceType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  functionType.getInterfaceType())  {	  for(ObjectType    interfaceType    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal());  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal());	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNodeTraversal());    	non-compiled	[CE]  orphaned  case	5	None	replace
14	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  new  FunctionNodeTraversal());  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Traversal.traverse(compiler,  n,  new  FunctionNodeTraversal());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Traversal.traverse(compiler,  n,  new  FunctionNodeTraversal());	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNodeTraversal());    	non-compiled	[CE]  orphaned  case	5	None	replace
15	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  null,  new  FunctionNodeTraversal());  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  null,  new  FunctionNodeTraversal());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  null,  new  FunctionNodeTraversal());	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNodeTraversal());    	non-compiled	[CE]  orphaned  case	5	None	replace
16	[BUG]  [BUGGY]  Constructor.traverse(compiler,  n,  new  FunctionNodeTraversal());  [CE]  orphaned  case  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Constructor.traverse(compiler,  n,  new  FunctionNodeTraversal());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Constructor.traverse(compiler,  n,  new  FunctionNodeTraversal());	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNodeTraversal());    	non-compiled	[CE]  orphaned  case	5	None	replace
17	[BUG]  [BUGGY]  if(interfaceType!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(interfaceType!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(interfaceType!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
18	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	checkInterfaceConflictProperties(t,  n,  interfaceType,  properties,  currentProperties);	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
19	[BUG]  [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
20	[BUG]  [BUGGY]  if(interfaceType  ==  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(interfaceType  ==  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(interfaceType  ==  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
21	[BUG]  [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  }  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
22	[BUG]  [BUGGY]  if(interfaceType!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(interfaceType!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(interfaceType!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
23	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	checkInterfaceConflictProperties(t,  n,  currentProperties,  functionPrivateName);	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function "));  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function: "));  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function: "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function: "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function  error: "));  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function  error: "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function  error: "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "JSC_INTERFACE_PROPERTY "));  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "JSC_INTERFACE_PROPERTY "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "JSC_INTERFACE_PROPERTY "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
29	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "JSC_INTERFACE_ERROR "));  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "JSC_INTERFACE_ERROR "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "JSC_INTERFACE_ERROR "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
30	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getModules())  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getModules())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getModules())  {	  for(ObjectType    interfaceType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	14	None	replace
31	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConfig().getInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConfig().getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getConfig().getInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	14	None	replace
32	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getElements())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getElements())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getElements())  {	  for(ObjectType    interfaceType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	14	None	replace
33	[BUG]  [BUGGY]  for(ObjectType  n  :  currentProperties.getInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  currentProperties.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  currentProperties.getInterfaces())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
34	[BUG]  [BUGGY]  for(ObjectType  n  :  this.functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  this.functionType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  this.functionType.getInterfaces())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
35	[BUG]  [BUGGY]  for(ObjectType  n  :  interfaceType.getInterfaces())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  interfaceType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  interfaceType.getInterfaces())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
36	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getParameterTypes())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
37	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getParent())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  functionType.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getParent())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
38	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getOwnerFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerFunctions())    {    	non-compiled	[CE]  orphaned  case	50	None	replace
39	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  this.functionType.getOwnerFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerFunctions())    {    	non-compiled	[CE]  orphaned  case	50	None	replace
40	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnerFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerFunctions())    {    	non-compiled	[CE]  orphaned  case	50	None	replace
41	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaceFunctions())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaceFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getInterfaceFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerFunctions())    {    	non-compiled	[CE]  orphaned  case	50	None	replace
42	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceTypes())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getFunctionTypes())    {    	non-compiled	[CE]  orphaned  case	18	None	replace
43	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerFunctionTypes())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerFunctionTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnerFunctionTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getFunctionTypes())    {    	non-compiled	[CE]  orphaned  case	18	None	replace
44	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getOwnerInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getOwnerInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	23	None	replace
45	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getOwnerInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getOwnerInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	23	None	replace
46	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConfig().getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConfig().getOwnerInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getConfig().getOwnerInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	23	None	replace
47	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  interfaceType);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  interfaceType);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  interfaceType);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  interfaceType);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
49	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(interfaceType),  currentProperties);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(interfaceType),  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(interfaceType),  currentProperties);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
50	[BUG]  [BUGGY]  Constructor.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Constructor.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Constructor.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
51	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties,  interfaceType);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
52	[BUG]  [BUGGY]  ConstructorTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [CE]  orphaned  case  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  ConstructorTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	ConstructorTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
53	[BUG]  [BUGGY]  for(ObjectType  functionType  :  functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  functionType.getParameterTypes())  {	  for(ObjectType    functionType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	33	None	replace
54	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceConflicts())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceConflicts())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceConflicts())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumConflicts())    {    	non-compiled	[CE]  orphaned  case	16	None	replace
55	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflicts(),  functionPrivateName)  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflicts(),  functionPrivateName)  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumConflicts(),  functionPrivateName)  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumConflicts())    {    	non-compiled	[CE]  orphaned  case	16	None	replace
56	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConflicts())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConflicts())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getConflicts())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumConflicts())    {    	non-compiled	[CE]  orphaned  case	16	None	replace
57	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceConflict())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceConflict())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceConflict())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumConflicts())    {    	non-compiled	[CE]  orphaned  case	16	None	replace
58	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	19	None	replace
59	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getParent())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getParent())  {	  for(ObjectType    currentProperties    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	19	None	replace
60	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	19	None	replace
61	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getImplicitProperties())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getImplicitProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getImplicitProperties())  {	  for(ObjectType    currentProperties    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	19	None	replace
62	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.keySet())  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.keySet())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.keySet())  {	  for(ObjectType    interfaceType    :    currentProperties.entrySet())    {    	non-compiled	[CE]  orphaned  case	48	None	replace
63	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.entrySet())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.entrySet())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  currentProperties.entrySet())  {	  for(ObjectType    interfaceType    :    currentProperties.entrySet())    {    	non-compiled	[CE]  orphaned  case	48	None	replace
64	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[currentProperties.size()  ]))  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[currentProperties.size()  ]))  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[currentProperties.size()  ]))  {	  for(ObjectType    interfaceType    :    currentProperties.entrySet())    {    	non-compiled	[CE]  orphaned  case	48	None	replace
65	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.iterator())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.iterator())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.iterator())  {	  for(ObjectType    interfaceType    :    currentProperties.entrySet())    {    	non-compiled	[CE]  orphaned  case	48	None	replace
66	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[0]))  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[0]))  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[0]))  {	  for(ObjectType    interfaceType    :    currentProperties.entrySet())    {    	non-compiled	[CE]  orphaned  case	48	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  null);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t);  [CE]  orphaned  case  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  t);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  t);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  type);  [CE]  orphaned  case  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  type);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  type);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionPrivateName);  [CE]  orphaned  case  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionPrivateName);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  functionPrivateName);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
71	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getFunctionTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getFunctionTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getFunctionTypes())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
72	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getParent())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getParent())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
73	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getParameterTypes())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getParameterTypes())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
74	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getConfig().getInterfaces())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getConfig().getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getConfig().getInterfaces())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
75	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  null);  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  null);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
76	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  functionPrivate);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  functionPrivate);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  functionPrivate);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
77	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  orphaned  case  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  null);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
78	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  interfaceType);  [CE]  orphaned  case  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  interfaceType);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
79	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  functionType);  [CE]  orphaned  case  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  functionType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  functionType);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
80	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  functionPrivateName);  [CE]  orphaned  case  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  functionPrivateName);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  functionPrivateName);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
81	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getConstructors())  {	  for(ObjectType    currentProperties    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	28	None	replace
82	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getImplicitPrototype())  {	  for(ObjectType    currentProperties    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	28	None	replace
83	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getParent())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getParent())  {	  for(ObjectType    currentProperties    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	28	None	replace
84	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceTypes())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getInterfaceTypes())  {	  for(ObjectType    currentProperties    :    functionType.getParameterTypes())    {    	non-compiled	[CE]  orphaned  case	37	None	replace
85	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getParameterTypes())  {	  for(ObjectType    currentProperties    :    functionType.getParameterTypes())    {    	non-compiled	[CE]  orphaned  case	37	None	replace
86	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReturnType())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReturnType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getReturnType())  {	  for(ObjectType    currentProperties    :    functionType.getParameterTypes())    {    	non-compiled	[CE]  orphaned  case	37	None	replace
87	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getParameterTypes())  {	  for(ObjectType    currentProperties    :    functionType.getParameterTypes())    {    	non-compiled	[CE]  orphaned  case	37	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.FUNCTION);  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.FUNCTION);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()!=  Token.FUNCTION);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionObjectCall(n));  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionObjectCall(n));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionObjectCall(n));	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
93	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  interfaceType.getInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  interfaceType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  interfaceType.getInterfaces())  {	  for(ObjectType    currentPropertyType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	25	None	replace
94	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getParameterTypes())  {	  for(ObjectType    currentPropertyType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	25	None	replace
95	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getParent())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getParent())  {	  for(ObjectType    currentPropertyType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	25	None	replace
96	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getImplicitPrototype())  {	  for(ObjectType    currentPropertyType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	25	None	replace
97	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getProperties())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getProperties())  {	  for(ObjectType    currentPropertyType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	25	None	replace
98	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getParameterTypes())  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
99	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConstructorTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConstructorTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumConstructorTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
100	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumParameterTypes(0))  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumParameterTypes(0))  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumParameterTypes(0))  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
101	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflictTypes())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflictTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumConflictTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
102	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getOwnInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  this.functionType.getOwnInterfaces())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	29	None	replace
103	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerInterfaces(),  functionPrivateName)  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerInterfaces(),  functionPrivateName)  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnerInterfaces(),  functionPrivateName)  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	17	None	replace
104	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getConstructors())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getConstructors())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
105	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getParent())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getParent())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
106	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getImplicitPrototype())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
107	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getReturnType())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getReturnType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getReturnType())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
108	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitInterface())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitInterface())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitInterface())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
109	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  currentProperties.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
110	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceType())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceType())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
111	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterTypes())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
112	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterType())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterType())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
113	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitFunctionType())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitFunctionType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitFunctionType())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
114	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumConstructors())  {	  for(ObjectType    interfaceType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	10	None	replace
115	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.getConstructors())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  currentProperties.getConstructors())  {	  for(ObjectType    interfaceType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	10	None	replace
116	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceNames())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceNames())  {	  for(ObjectType    interfaceType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	10	None	replace
117	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceConstructors())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceConstructors())  {	  for(ObjectType    interfaceType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	10	None	replace
118	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  this.functionType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  this.functionType.getConstructors())  {	  for(ObjectType    currentPropertyType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	9	None	replace
119	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  interfaceType.getConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  interfaceType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  interfaceType.getConstructors())  {	  for(ObjectType    currentPropertyType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	9	None	replace
120	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getReturnType())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getReturnType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getReturnType())  {	  for(ObjectType    currentPropertyType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	9	None	replace
121	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  this.functionType.getConstructors())  {	  for(ObjectType    currentProperty    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	11	None	replace
122	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  interfaceType.getConstructors())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  interfaceType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  interfaceType.getConstructors())  {	  for(ObjectType    currentProperty    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	11	None	replace
123	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getInterfaceConstructors())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getInterfaceConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getInterfaceConstructors())  {	  for(ObjectType    currentProperty    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	11	None	replace
124	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getReturnType())  {  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getReturnType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getReturnType())  {	  for(ObjectType    currentProperty    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	11	None	replace
125	[BUG]  [BUGGY]  for(ObjectType  t  :  currentProperties.getConstructors())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  currentProperties.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  currentProperties.getConstructors())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
126	[BUG]  [BUGGY]  for(ObjectType  t  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  this.functionType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  this.functionType.getConstructors())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
127	[BUG]  [BUGGY]  for(ObjectType  t  :  functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  functionType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  functionType.getInterfaces())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
128	[BUG]  [BUGGY]  for(ObjectType  t  :  interfaceType.getConstructors())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  interfaceType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  interfaceType.getConstructors())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
129	[BUG]  [BUGGY]  for(ObjectType  t  :  currentProperties.get())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  currentProperties.get())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  currentProperties.get())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
130	[BUG]  [BUGGY]  for(ObjectType  t  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  functionType.getImplicitPrototype())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
131	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  null);  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  null);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  null);	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
132	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  functionPrivateName);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  functionPrivateName);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  functionPrivateName);	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
133	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  this);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  this);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  this);	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
134	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  context);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  context);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  context);	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
135	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  interfaceType);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  interfaceType);	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
136	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this,  interfaceType));  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this,  interfaceType));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this,  interfaceType));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNode(this));  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNode(this));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  FunctionNode(this));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
138	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this,  functionPrivateName));  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this,  functionPrivateName));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this,  functionPrivateName));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
139	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(false));  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(false));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(false));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
140	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  new  FunctionNode(this));  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Traversal.traverse(compiler,  n,  new  FunctionNode(this));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Traversal.traverse(compiler,  n,  new  FunctionNode(this));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
141	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  interfaceType.getInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  interfaceType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  interfaceType.getInterfaces())  {	  for(ObjectType    currentProperty    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	24	None	replace
142	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getParameterTypes())  {	  for(ObjectType    currentProperty    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	24	None	replace
143	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getParent())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getParent())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getParent())  {	  for(ObjectType    currentProperty    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	24	None	replace
144	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  this.functionType.getInterfaces())  {	  for(ObjectType    currentProperty    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	24	None	replace
145	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  this.functionType.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
146	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaceType())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaceType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getInterfaceType())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
147	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  this.functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
148	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getConstructor())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getConstructor())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getConstructor())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
149	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.values())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  currentProperties.values())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  currentProperties.values())  {	  for(ObjectType    interfaceType    :    currentProperties.values())    {    	non-compiled	[CE]  orphaned  case	49	None	replace
150	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.iterator().next())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.iterator().next())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.iterator().next())  {	  for(ObjectType    interfaceType    :    currentProperties.values())    {    	non-compiled	[CE]  orphaned  case	49	None	replace
151	[BUG]  [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.values())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.values())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionPrivateName  :  currentProperties.values())  {	  for(ObjectType    interfaceType    :    currentProperties.values())    {    	non-compiled	[CE]  orphaned  case	49	None	replace
152	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.values(),  functionPrivateName)  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.values(),  functionPrivateName)  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.values(),  functionPrivateName)  {	  for(ObjectType    interfaceType    :    currentProperties.values())    {    	non-compiled	[CE]  orphaned  case	49	None	replace
153	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	2	None	replace
154	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  functionPrivate);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  functionPrivate);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  functionPrivate);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	2	None	replace
155	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  interfaceType);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  interfaceType);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	2	None	replace
156	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  functionType);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  functionType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  functionType);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	2	None	replace
157	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  type);  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  type);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  type);	  NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	2	None	replace
158	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  this.functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getParameterTypes())  {	  for(ObjectType    functionType    :    this.functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	46	None	replace
159	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  currentProperties,  interfaceType);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
160	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionPrivateName,  currentProperties);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionPrivateName,  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  functionPrivateName,  currentProperties);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
161	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivateName);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivateName);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
162	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivate);  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivate);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivate);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
163	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.interfaces);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.interfaces);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this.interfaces);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
164	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceConstructors())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getInterfaceConstructors())  {	  for(ObjectType    currentProperties    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
165	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceConflicts())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceConflicts())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getInterfaceConflicts())  {	  for(ObjectType    currentProperties    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
166	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getImplicitInterface())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getImplicitInterface())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getImplicitInterface())  {	  for(ObjectType    currentProperties    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	22	None	replace
167	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConstructor())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConstructor())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getConstructor())  {	  for(ObjectType    currentProperties    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	22	None	replace
168	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceType())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaceType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getInterfaceType())  {	  for(ObjectType    currentProperties    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	22	None	replace
169	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  this.functionType.getOwnerInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  this.functionType.getOwnerInterfaces())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	31	None	replace
170	[BUG]  [BUGGY]  for(ObjectType  n  :  currentProperties.getConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  currentProperties.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  currentProperties.getConstructors())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
171	[BUG]  [BUGGY]  for(ObjectType  n  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  this.functionType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  this.functionType.getConstructors())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
172	[BUG]  [BUGGY]  for(ObjectType  n  :  interfaceType.getConstructors())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  interfaceType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  interfaceType.getConstructors())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
173	[BUG]  [BUGGY]  for(ObjectType  n  :  currentProperties.get())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  currentProperties.get())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  currentProperties.get())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
174	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  functionType.getImplicitPrototype())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getImplicitPrototype())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
175	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getProperties())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getProperties())  {	  for(ObjectType    currentProperty    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	24	None	replace
176	[BUG]  [BUGGY]  for(ObjectType  functionType  :  functionType.getReferenceNames())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  functionType.getReferenceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  functionType.getReferenceNames())  {	  for(ObjectType    functionType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	13	None	replace
177	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getReferenceNames())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getReferenceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getReferenceNames())  {	  for(ObjectType    currentPropertyType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	9	None	replace
178	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterface())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterface())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getInterface())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
179	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterType(0))  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterType(0))  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitParameterType(0))  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
180	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitReferenceName())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitReferenceName())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitReferenceName())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
181	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitConstructor())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitConstructor())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitConstructor())  {	  for(ObjectType    interfaceType    :    currentProperties.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	36	None	replace
182	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
184	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getParameterType(0))  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getParameterType(0))  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getParameterType(0))  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
185	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getOwnInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getOwnInterfaces())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
186	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  TypeCheck());  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  TypeCheck());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  null,  new  TypeCheck());	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
187	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  TypeCheck());  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  TypeCheck());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  TypeCheck());	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
188	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getConstructor())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getConstructor())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getConstructor())  {	  for(ObjectType    currentProperties    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	28	None	replace
189	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getFunctionParameterTypes())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getFunctionParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getFunctionParameterTypes())  {	  for(ObjectType    functionType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	44	None	replace
190	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  null,  new  FunctionNode(this));  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  null,  new  FunctionNode(this));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  null,  new  FunctionNode(this));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
191	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(t));  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(t));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(t));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
192	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[currentProperties.size()  ])  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[currentProperties.size()  ])  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.toArray(new  ObjectType[currentProperties.size()  ])  {	  for(ObjectType    interfaceType    :    currentProperties.entrySet())    {    	non-compiled	[CE]  orphaned  case	48	None	replace
193	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getProperties())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  functionType.getProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getProperties())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
194	[BUG]  [BUGGY]  for(ObjectType  t  :  functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  functionType.getParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  functionType.getParameterTypes())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
195	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getReferenceNames())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getReferenceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getReferenceNames())  {	  for(ObjectType    currentProperty    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	11	None	replace
196	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperty  :  functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getOwnerFunctions())  {	  for(ObjectType    currentProperty    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	11	None	replace
197	[BUG]  [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.getConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionPrivateName  :  currentProperties.getConstructors())  {	  for(ObjectType    interfaceType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	10	None	replace
198	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterface())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterface())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getInterface())  {	  for(ObjectType    currentProperties    :    functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	22	None	replace
199	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  interfaceType);  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  interfaceType);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
200	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionType);  [CE]  orphaned  case  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  functionType);	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
201	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumConflicts())    {    	non-compiled	[CE]  orphaned  case	16	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  &&  NodeUtil.isFunctionDeclaration(n));  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  &&  NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
203	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionDeclaration(n));  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionDeclaration(n));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
204	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
205	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  new  FunctionNodeTraversal());  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  new  FunctionNodeTraversal());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  new  FunctionNodeTraversal());	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNodeTraversal());    	non-compiled	[CE]  orphaned  case	5	None	replace
206	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConstructorInterfaces())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConstructorInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getConstructorInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	23	None	replace
207	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReferences())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReferences())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getReferences())  {	  for(ObjectType    currentProperties    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
208	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getOwnerFunctions())  {	  for(ObjectType    currentProperties    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
209	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getReferences())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getReferences())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getReferences())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
210	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getFunctionParameters())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getFunctionParameters())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getFunctionParameters())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
211	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getProperties())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getProperties())  {	  for(ObjectType    currentProperties    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	19	None	replace
212	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaces(),  functionPrivateName)  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaces(),  functionPrivateName)  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaces(),  functionPrivateName)  {	  for(ObjectType    interfaceType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	14	None	replace
213	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivateName);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivateName);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  currentProperties,  functionPrivateName);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
214	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  currentProperties,  new  FunctionNode(functionPrivateName));  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  currentProperties,  new  FunctionNode(functionPrivateName));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  currentProperties,  new  FunctionNode(functionPrivateName));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
215	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReferenceNames())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReferenceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getReferenceNames())  {	  for(ObjectType    currentProperties    :    functionType.getParameterTypes())    {    	non-compiled	[CE]  orphaned  case	37	None	replace
216	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReturnTypes())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  functionType.getReturnTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getReturnTypes())  {	  for(ObjectType    currentProperties    :    functionType.getParameterTypes())    {    	non-compiled	[CE]  orphaned  case	37	None	replace
217	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConstructorInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConstructorInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getConstructorInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	17	None	replace
218	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getFunctionInterfaces())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getFunctionInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getFunctionInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	17	None	replace
219	[BUG]  [BUGGY]  if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(functionPrivateName!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
220	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
221	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getFunctionTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  this.functionType.getFunctionTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getFunctionTypes())  {	  for(ObjectType    functionType    :    this.functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	46	None	replace
222	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getParameters())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  this.functionType.getParameters())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getParameters())  {	  for(ObjectType    functionType    :    this.functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	46	None	replace
223	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnInterfaces(),  functionPrivateName)  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnInterfaces(),  functionPrivateName)  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnInterfaces(),  functionPrivateName)  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	15	None	replace
224	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.interfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.interfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.interfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.values())    {    	non-compiled	[CE]  orphaned  case	49	None	replace
225	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  IllegalArgumentException( " "));  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  IllegalArgumentException( " "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  IllegalArgumentException( " "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
226	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  NullPointerException( " "));  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  NullPointerException( " "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  NullPointerException( " "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
227	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  RuntimeException( " "));  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  RuntimeException( " "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  null,  new  RuntimeException( " "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
228	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  IllegalStateException( " "));  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  IllegalStateException( " "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  IllegalStateException( " "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
229	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  RuntimeException( " "));  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  RuntimeException( " "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  RuntimeException( " "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
230	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflictParameterTypes())  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflictParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumConflictParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
231	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnParameterTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
232	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.currentProperties);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this.currentProperties);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
233	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionPrivate,  currentProperties);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  functionPrivate,  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  functionPrivate,  currentProperties);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
234	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.interfaceType);  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this.interfaceType);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
235	[BUG]  [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.getOwnerInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionPrivateName  :  currentProperties.getOwnerInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	17	None	replace
236	[BUG]  [BUGGY]  for(ObjectType  functionType  :  functionType.getReturnType())  {  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  functionType.getReturnType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  functionType.getReturnType())  {	  for(ObjectType    functionType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	13	None	replace
237	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeVariants());  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeVariants());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeVariants());	  NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  orphaned  case	7	None	replace
238	[BUG]  [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.getFunctionPrivateNames())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionPrivateName  :  currentProperties.getFunctionPrivateNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionPrivateName  :  currentProperties.getFunctionPrivateNames())  {	  for(ObjectType    interfaceType    :    currentProperties.getFunctionTypes())    {    	non-compiled	[CE]  orphaned  case	18	None	replace
239	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaceNames())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getInterfaceNames())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
240	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfacePrivateName())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfacePrivateName())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getInterfacePrivateName())  {	  for(ObjectType    interfaceType    :    this.functionType.getImplicitPrototype())    {    	non-compiled	[CE]  orphaned  case	30	None	replace
241	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceParameterTypes())  {  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaceParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaceParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
242	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumInterfaceParameterTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumInterfaceParameterTypes())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumInterfaceParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getEnumParameterTypes())    {    	non-compiled	[CE]  orphaned  case	35	None	replace
243	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getStaticInterfaces())  {  [CE]  orphaned  case  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getStaticInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getStaticInterfaces())  {	  for(ObjectType    currentProperties    :    interfaceType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	20	None	replace
244	[BUG]  [BUGGY]  for(ObjectType  functionPrivateName  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionPrivateName  :  this.functionType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionPrivateName  :  this.functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    this.functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	12	None	replace
245	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.values()  ||  interfaceType!=  null)  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.values()  ||  interfaceType!=  null)  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.values()  ||  interfaceType!=  null)  {	  for(ObjectType    interfaceType    :    currentProperties.values())    {    	non-compiled	[CE]  orphaned  case	49	None	replace
246	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getReturnType())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  this.functionType.getReturnType())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getReturnType())  {	  for(ObjectType    functionType    :    this.functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	46	None	replace
247	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  this.functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  currentPropertyType  :  this.functionType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  this.functionType.getInterfaces())  {	  for(ObjectType    currentPropertyType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	25	None	replace
248	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
249	[BUG]  [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
250	[BUG]  [BUGGY]  checkInterfaceFunctionProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  checkInterfaceFunctionProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	checkInterfaceFunctionProperties(t,  n,  functionPrivateName,  properties,  currentProperties);	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
251	[BUG]  [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	if(currentProperties!=  null)  {  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  }  else  {  throw  new  IllegalStateException( " ");  }	  checkInterfaceConflictProperties(t,    n,    functionPrivateName,    properties,    currentProperties);    	non-compiled	[CE]  orphaned  case	38	None	replace
252	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnProperties())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getOwnProperties())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnInterfaces())    {    	non-compiled	[CE]  orphaned  case	29	None	replace
253	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  scope);  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  scope);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck(),  scope);	  NodeTraversal.traverse(compiler,    n,    new    TypeCheck());    	non-compiled	[CE]  orphaned  case	1	None	replace
254	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	4	None	replace
255	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this),  t);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this),  t);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this),  t);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(this));    	non-compiled	[CE]  orphaned  case	39	None	replace
256	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnerProperties())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnerProperties())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getOwnerProperties())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerInterfaces())    {    	non-compiled	[CE]  orphaned  case	31	None	replace
257	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Unknown  type "));  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Unknown  type "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Unknown  type "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
258	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function  method "));  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function  method "));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Function  method "));	  NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  orphaned  case	42	None	replace
259	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getModules())  {  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getModules())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getModules())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
260	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.values())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.values())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.values())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
261	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getConfig())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getConfig())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getConfig())  {	  for(ObjectType    functionType    :    currentProperties.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	32	None	replace
262	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal(0));  [CE]  orphaned  case  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal(0));  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal(0));	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNodeTraversal());    	non-compiled	[CE]  orphaned  case	5	None	replace
263	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  type);  [CE]  orphaned  case  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  type);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  type);	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
264	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  new  TypeCheck());  [CE]  orphaned  case  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this,  new  TypeCheck());  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this,  new  TypeCheck());	  FunctionNodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  orphaned  case	6	None	replace
265	[BUG]  [BUGGY]  for(ObjectType  n  :  currentType.getInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  currentType.getInterfaces())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  currentType.getInterfaces())  {	  for(ObjectType    n    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	47	None	replace
266	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
267	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [CE]  orphaned  case  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Traversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Traversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);	  FunctionNodeTraversal.traverse(compiler,    n,    new    FunctionNode(functionPrivateName),    currentProperties);    	non-compiled	[CE]  orphaned  case	40	None	replace
268	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getReferenceNames())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  currentProperties.getReferenceNames())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getReferenceNames())  {	  for(ObjectType    functionType    :    currentProperties.getConstructors())    {    	non-compiled	[CE]  orphaned  case	44	None	replace
269	[BUG]  [BUGGY]  for(ObjectType  n  :  currentType.getConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  currentType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  currentType.getConstructors())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
270	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  n  :  functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getOwnerFunctions())  {	  for(ObjectType    n    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	45	None	replace
271	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  functionType  :  this.functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getOwnerFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerFunctions())    {    	non-compiled	[CE]  orphaned  case	50	None	replace
272	[BUG]  [BUGGY]  for(ObjectType  name  :  this.functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  name  :  this.functionType.getOwnerFunctions())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  name  :  this.functionType.getOwnerFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getOwnerFunctions())    {    	non-compiled	[CE]  orphaned  case	50	None	replace
273	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  null);  [CE]  orphaned  case  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  null);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  null);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	41	None	replace
275	[BUG]  [BUGGY]  for(ObjectType  t  :  currentType.getConstructors())  {  [CE]  orphaned  case  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(ObjectType  t  :  currentType.getConstructors())  {  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  currentType.getConstructors())  {	  for(ObjectType    t    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	34	None	replace
276	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  existingProperties);  [CE]  orphaned  case  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  n,  existingProperties);  [BUGGY]      currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  existingProperties);	  NodeTraversal.traverse(compiler,    n,    currentProperties);    	non-compiled	[CE]  orphaned  case	3	None	replace
