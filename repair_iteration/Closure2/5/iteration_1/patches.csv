bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  TypeCheck());  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  TypeCheck());	      	non-compiled	[CE]  orphaned  case	6	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  this);	      	non-compiled	[CE]  orphaned  case	6	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currentProperties);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  currentProperties);	      	non-compiled	[CE]  orphaned  case	6	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  orphaned  case	6	None	replace
5	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal());  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal());  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNodeTraversal());	      	non-compiled	[CE]  orphaned  case	6	None	replace
6	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this);  [CE]  orphaned  case  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  this);	      	non-compiled	[CE]  orphaned  case	6	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n);  [CE]  orphaned  case  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n);	      	non-compiled	[CE]  orphaned  case	6	None	replace
8	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
9	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
10	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConstructors())  {  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
11	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperty  :  functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
12	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
13	[BUG]  [BUGGY]  for(ObjectType  functionType  :  functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  functionType  :  functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
14	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaces())  {  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
15	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
16	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflicts())  {  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumConflicts())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumConflicts())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
17	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getOwnerInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getOwnerInterfaces())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
18	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getFunctionTypes())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getFunctionTypes())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getFunctionTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
19	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	4	None	replace
20	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getExtendedInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  interfaceType.getExtendedInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  interfaceType.getExtendedInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	4	None	replace
21	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  functionType.getOwnInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getOwnInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	4	None	replace
22	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  functionType.getImplicitPrototype())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getImplicitPrototype())  {	  for(ObjectType    currentProperties    :    functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	4	None	replace
23	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  functionType.getOwnerInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getOwnerInterfaces())  {	  for(ObjectType    currentProperties    :    functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	4	None	replace
24	[BUG]  [BUGGY]  for(ObjectType  currentProperty  :  functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperty  :  functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperty  :  functionType.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
25	[BUG]  [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentPropertyType  :  functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentPropertyType  :  functionType.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
26	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
27	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  functionType.getImplicitPrototype())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  functionType.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
28	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getExtendedInterfaces())  {  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  this.functionType.getExtendedInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  this.functionType.getExtendedInterfaces())  {	  for(ObjectType    interfaceType    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
29	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnInterfaces())  {  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getOwnInterfaces())  {	  for(ObjectType    interfaceType    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
30	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getImplicitPrototype())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
31	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnerInterfaces())  {  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnerInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getOwnerInterfaces())  {	  for(ObjectType    interfaceType    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
32	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getInterfaces())  {  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  functionType  :  currentProperties.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
33	[BUG]  [BUGGY]  for(ObjectType  functionType  :  functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  functionType  :  functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  functionType.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
34	[BUG]  [BUGGY]  for(ObjectType  t  :  functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  t  :  functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  t  :  functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
35	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumParameterTypes())  {  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getEnumParameterTypes())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getEnumParameterTypes())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
36	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitPrototype())  {  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.getImplicitPrototype())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.getImplicitPrototype())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
37	[BUG]  [BUGGY]  for(ObjectType  currentProperties  :  functionType.getParameterTypes())  {  [CE]  orphaned  case  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  currentProperties  :  functionType.getParameterTypes())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  currentProperties  :  functionType.getParameterTypes())  {	  for(ObjectType    currentProperties    :    functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	4	None	replace
38	[BUG]  [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties);	      	non-compiled	[CE]  orphaned  case	6	None	replace
39	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this));  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this));  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(this));	      	non-compiled	[CE]  orphaned  case	6	None	replace
40	[BUG]  [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [CE]  orphaned  case  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	FunctionNodeTraversal.traverse(compiler,  n,  new  FunctionNode(functionPrivateName),  currentProperties);	      	non-compiled	[CE]  orphaned  case	6	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  orphaned  case	6	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));	      	non-compiled	[CE]  orphaned  case	6	None	replace
43	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  functionType  :  this.functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
44	[BUG]  [BUGGY]  for(ObjectType  functionType  :  currentProperties.getConstructors())  {  [CE]  orphaned  case  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  functionType  :  currentProperties.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  currentProperties.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
45	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getConstructors())  {  [CE]  orphaned  case  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  n  :  functionType.getConstructors())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getConstructors())  {	  for(ObjectType    interfaceType    :    functionType.getConstructors())    {    	non-compiled	[CE]  orphaned  case	5	None	replace
46	[BUG]  [BUGGY]  for(ObjectType  functionType  :  this.functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  functionType  :  this.functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  functionType  :  this.functionType.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
47	[BUG]  [BUGGY]  for(ObjectType  n  :  functionType.getInterfaces())  {  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  n  :  functionType.getInterfaces())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  n  :  functionType.getInterfaces())  {	  for(ObjectType    interfaceType    :    functionType.getInterfaces())    {    	non-compiled	[CE]  orphaned  case	2	None	replace
48	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.entrySet())  {  [CE]  orphaned  case  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.entrySet())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.entrySet())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
49	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.values())  {  [CE]  orphaned  case  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  currentProperties.values())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  currentProperties.values())  {	  for(ObjectType    interfaceType    :    currentProperties.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	1	None	replace
50	[BUG]  [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnerFunctions())  {  [CE]  orphaned  case  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(ObjectType  interfaceType  :  this.functionType.getOwnerFunctions())  {  [BUGGY]    currentProperties.clear();  checkInterfaceConflictProperties(t,  n,  functionPrivateName,  properties,  currentProperties,  interfaceType);  properties.putAll(currentProperties);  }  }  }  }  [CLASS]  TypeCheck  [METHOD]  visitFunction  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	for(ObjectType  interfaceType  :  this.functionType.getOwnerFunctions())  {	  for(ObjectType    interfaceType    :    this.functionType.getExtendedInterfaces())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
