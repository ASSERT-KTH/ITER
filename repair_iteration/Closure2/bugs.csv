bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] ObjectType implicitProto = interfaceType.getImplicitPrototype(); [FE] NullPointerException [CONTEXT] [BUGGY] ObjectType implicitProto = interfaceType.getImplicitPrototype(); [BUGGY] Set<String> currentPropertyNames;   currentPropertyNames = implicitProto.getOwnPropertyNames(); for (String name : currentPropertyNames) { ObjectType oType = properties.get(name); if (oType != null) { if (!interfaceType.getPropertyType(name).isEquivalentTo( oType.getPropertyType(name))) { compiler.report( [CLASS] TypeCheck [METHOD] checkInterfaceConflictProperties [RETURN_TYPE] void  NodeTraversal t Node n String functionName ObjectType> properties ObjectType> currentProperties ObjectType interfaceType 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1570	1570	1	replace	
2	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] ObjectType implicitProto = interfaceType.getImplicitPrototype(); Set<String> currentPropertyNames;   currentPropertyNames = implicitProto.getOwnPropertyNames(); for (String name : currentPropertyNames) { ObjectType oType = properties.get(name); if (oType != null) { if (!interfaceType.getPropertyType(name).isEquivalentTo( oType.getPropertyType(name))) { compiler.report( [CLASS] TypeCheck [METHOD] checkInterfaceConflictProperties [RETURN_TYPE] void  NodeTraversal t Node n String functionName ObjectType> properties ObjectType> currentProperties ObjectType interfaceType 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1570	1570	1	add	
3	[BUG] [BUGGY] currentPropertyNames = implicitProto.getOwnPropertyNames(); [FE] NullPointerException [CONTEXT] [BUGGY] currentPropertyNames = implicitProto.getOwnPropertyNames(); [BUGGY] for (String name : currentPropertyNames) { ObjectType oType = properties.get(name); if (oType != null) { if (!interfaceType.getPropertyType(name).isEquivalentTo( oType.getPropertyType(name))) { compiler.report( t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, functionName, name, oType.toString(), interfaceType.toString())); } [CLASS] TypeCheck [METHOD] checkInterfaceConflictProperties [RETURN_TYPE] void  NodeTraversal t Node n String functionName ObjectType> properties ObjectType> currentProperties ObjectType interfaceType 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1574	1574	1	replace	
4	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] currentPropertyNames = implicitProto.getOwnPropertyNames(); for (String name : currentPropertyNames) { ObjectType oType = properties.get(name); if (oType != null) { if (!interfaceType.getPropertyType(name).isEquivalentTo( oType.getPropertyType(name))) { compiler.report( t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, functionName, name, oType.toString(), interfaceType.toString())); } [CLASS] TypeCheck [METHOD] checkInterfaceConflictProperties [RETURN_TYPE] void  NodeTraversal t Node n String functionName ObjectType> properties ObjectType> currentProperties ObjectType interfaceType 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1574	1574	1	add	
5	[BUG] [BUGGY] HashMap<String, ObjectType> properties = new HashMap<String, ObjectType>(); [FE] NullPointerException [CONTEXT] [BUGGY] HashMap<String, ObjectType> properties   = new HashMap<String, ObjectType>(); [BUGGY] = new HashMap<String, ObjectType>(); HashMap<String, ObjectType> currentProperties = new HashMap<String, ObjectType>(); for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1658	1659	1	replace	
6	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] HashMap<String, ObjectType> properties   = new HashMap<String, ObjectType>(); = new HashMap<String, ObjectType>(); HashMap<String, ObjectType> currentProperties = new HashMap<String, ObjectType>(); for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1658	1659	1	add	
7	[BUG] [BUGGY] HashMap<String, ObjectType> currentProperties = new HashMap<String, ObjectType>(); [FE] NullPointerException [CONTEXT] [BUGGY] HashMap<String, ObjectType> currentProperties   = new HashMap<String, ObjectType>(); [BUGGY] = new HashMap<String, ObjectType>(); for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1660	1661	1	replace	
8	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] HashMap<String, ObjectType> currentProperties   = new HashMap<String, ObjectType>(); = new HashMap<String, ObjectType>(); for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1660	1661	1	add	
9	[BUG] [BUGGY] for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { [FE] NullPointerException [CONTEXT] [BUGGY] for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { [BUGGY] currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	replace	
10	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] for (ObjectType interfaceType : functionType.getExtendedInterfaces()) { currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1662	1662	1	add	
11	[BUG] [BUGGY] currentProperties.clear(); [FE] NullPointerException [CONTEXT] [BUGGY] currentProperties.clear(); [BUGGY] checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1663	1663	1	replace	
12	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] currentProperties.clear(); checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1663	1663	1	add	
13	[BUG] [BUGGY] checkInterfaceConflictProperties(t, n, functionPrivateName, properties, currentProperties, interfaceType); [FE] NullPointerException [CONTEXT] [BUGGY] checkInterfaceConflictProperties(t, n, functionPrivateName,    properties, currentProperties, interfaceType); [BUGGY] properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	replace	
14	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] checkInterfaceConflictProperties(t, n, functionPrivateName,    properties, currentProperties, interfaceType); properties, currentProperties, interfaceType); properties.putAll(currentProperties); } } } } [CLASS] TypeCheck [METHOD] visitFunction [RETURN_TYPE] void  NodeTraversal t Node n 	projects/Closure2/src/com/google/javascript/jscomp/TypeCheck.java	0.24253562503633297	1664	1665	1	add	
