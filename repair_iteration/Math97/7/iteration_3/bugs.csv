bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
3	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  2;	  double    oldDelta    =    delta    *    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
5	[BUG]  [BUGGY]  double  oldDelta  =  dx  *  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  *  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  *  1;	  double    oldDelta    =    delta    *    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
6	[BUG]  [BUGGY]  double  oldDelta  =  x1  *  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  *  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x1  *  1;	  double    oldDelta    =    delta    *    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
7	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  +  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  2  +  1;	  double    tolerance    =    Math.abs(delta)/    2;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  -  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  2  -  1;	  double    tolerance    =    Math.abs(delta)/    2;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  *  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  *  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  2  *  1;	  double    tolerance    =    Math.abs(delta)/    2;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  double  tolerance  =  delta  -  x2;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  delta  -  x2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  delta  -  x2;	  double    tolerance    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
11	[BUG]  [BUGGY]  double  tolerance  =  x2  -  x0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x2  -  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x2  -  x0;	  double    tolerance    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
12	[BUG]  [BUGGY]  double  tolerance  =  x2  -  x1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x2  -  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x2  -  x1;	  double    tolerance    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
13	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  oldDelta  +  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  oldDelta  +  1;	  double    tolerance    =    Math.abs(delta)/    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  /  dx  +  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  /  dx  +  1;	  double    oldDelta    =    delta    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  double  oldDelta  =  dx  /  delta;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  /  delta;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  /  delta;	  double    oldDelta    =    delta    /    dx;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  -  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  -  oldDelta);	  double    tolerance    =    Math.abs(delta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  /  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  /  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  /  delta);	  double    tolerance    =    Math.abs(delta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  -  delta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  -  delta  +  1);	  double    tolerance    =    Math.abs(delta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  double  oldDelta  =  delta1  -  x0;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta1  -  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta1  -  x0;	  double    oldDelta    =    x1    -    delta0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  x0;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  -  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  -  x0;	  double    oldDelta    =    x1    -    delta0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  double  oldDelta  =  x0;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x0;	  double    oldDelta    =    x1;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
22	[BUG]  [BUGGY]  double  oldDelta  -=  x1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  x1;	  double    oldDelta    =    x1;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
23	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(x0));  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(x0));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(x0));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
24	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta));  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
25	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  /  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  /  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  /  1);	  double    tolerance    =    Math.abs(delta    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  -  2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  -  2);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  -  2);	  double    tolerance    =    Math.abs(delta    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  *  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  *  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  *  1);	  double    tolerance    =    Math.abs(delta    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  double  tolerance  =  Math.r3(delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.r3(delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.r3(delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
30	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.log(delta  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.log(delta  -  delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
31	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.log(delta,  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.log(delta,  oldDelta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
32	[BUG]  [BUGGY]  double  tolerance  =  Math.floor(delta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.floor(delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.floor(delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  double  tolerance  =  x1  -  x1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x1  -  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x1  -  x1;	  double    tolerance    =    delta    -    x1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  double  tolerance  =  x0  -  x1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x0  -  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x0  -  x1;	  double    tolerance    =    delta    -    x1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
36	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)+1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)+1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)+1);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
37	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  delta));  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  delta));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
38	[BUG]  [BUGGY]  double  oldDelta  -=  delta  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  delta  +  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  delta  +  1;	  double    oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  double  oldDelta  -=  delta  *  2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  delta  *  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  delta  *  2;	  double    oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  double  oldDelta  -=  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  delta.doubleValue();  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  delta.doubleValue();	  double    oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  x1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  x1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  x1);	  double    tolerance    =    Math.abs(delta)-    x1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
43	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
44	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
45	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
46	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  2;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  /  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  /  2;	  double    oldDelta    =    delta    -    2;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
47	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(oldDelta)-  delta;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(oldDelta)-  delta;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(oldDelta)-  delta;	  double    tolerance    =    Math.abs(delta)-    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)-  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)-  oldDelta  +  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)-  oldDelta  +  1;	  double    tolerance    =    Math.abs(delta)-    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
50	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
51	[BUG]  [BUGGY]  double  tolerance  =  delta  -  x0;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  delta  -  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  delta  -  x0;	  double    tolerance    =    x0    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  double  tolerance  =  x0  -  x2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x0  -  x2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x0  -  x2;	  double    tolerance    =    x0    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  double  tolerance  =  delta  +  x0;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  delta  +  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  delta  +  x0;	  double    tolerance    =    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
54	[BUG]  [BUGGY]  double  tolerance  =  x0  +  x1;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x0  +  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x0  +  x1;	  double    tolerance    =    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  x2;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  -  x2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  -  x2;	  double    oldDelta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
56	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  x0;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x2  -  x0;	  double    oldDelta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
57	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta,  x1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.sqrt(delta,  x1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.sqrt(delta,  x1);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
58	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.sqrt(delta  -  delta);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
59	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.sqrt(delta,  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.sqrt(delta,  oldDelta);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
60	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  1);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.sqrt(delta  -  1);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
61	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  3;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  /  3;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  /  3;	  double    oldDelta    =    delta    /    1;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
62	[BUG]  [BUGGY]  double  oldDelta  -=  delta  -  1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  delta  -  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  delta  -  1;	  double    oldDelta    =    dx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
63	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0  -  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x0  -  1;	  double    oldDelta    =    x1    -    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
64	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  x1,  delta;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  x1,  delta;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  x1,  delta;	  double    tolerance    =    Math.abs(delta)-    x1,    delta;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
65	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)-  x0,  delta;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)-  x0,  delta;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)-  x0,  delta;	  double    tolerance    =    Math.abs(delta)-    x1,    delta;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
66	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  /  Math.abs(x0));  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  /  Math.abs(x0));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  /  Math.abs(x0));	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
67	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta  *  Math.abs(x0));  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(delta  *  Math.abs(x0));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(delta  *  Math.abs(x0));	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
68	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount  *  Math.abs(delta));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount  *  Math.abs(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeCount  *  Math.abs(delta));	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
69	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1),  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1),  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1),  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
70	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1));  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
71	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta  -  1));  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta  -  1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta  -  1));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
72	[BUG]  [BUGGY]  double  oldDelta  =  dx  *  delta  -  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  *  delta  -  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  *  delta  -  1;	  double    oldDelta    =    delta    *    dx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
73	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  dx  -  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  /  dx  -  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  /  dx  -  1;	  double    oldDelta    =    delta    *    dx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
74	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  dx  /  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  dx  /  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  dx  /  1;	  double    oldDelta    =    delta    *    dx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
75	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  2.0;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  2.0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  2.0;	  double    tolerance    =    Math.abs(delta)/    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  3;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  3;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  3;	  double    tolerance    =    Math.abs(delta)/    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  x0);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(delta,  x0);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(delta,  x0);	  double    tolerance    =    Math.min(delta,    x1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
78	[BUG]  [BUGGY]  double  tolerance  =  Math.min(x0,  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(x0,  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(x0,  delta);	  double    tolerance    =    Math.min(delta,    x1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
79	[BUG]  [BUGGY]  double  tolerance  =  Math.min(x1,  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(x1,  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(x1,  delta);	  double    tolerance    =    Math.min(delta,    x1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
80	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(delta,  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(delta,  oldDelta);	  double    tolerance    =    Math.min(delta,    x1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
81	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  /  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  /  oldDelta);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
82	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(delta  *  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(delta  *  oldDelta);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
83	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta  *  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(oldDelta  *  delta);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
84	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  delta  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  delta  *  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta,  delta  *  oldDelta);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  double  tolerance  =  delta  /  x1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  delta  /  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  delta  /  x1;	  double    tolerance    =    delta    +    x1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(x1));  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(x1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(x1));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
87	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  x1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0  -  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x0  -  x1;	  double    oldDelta    =    x0    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(y1)/  delta;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(y1)/  delta;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(y1)/  delta;	  double    tolerance    =    Math.abs(y1)-    delta;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
89	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(y2)-  delta;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(y2)-  delta;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(y2)-  delta;	  double    tolerance    =    Math.abs(y1)-    delta;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
90	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)-  y1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)-  y1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)-  y1;	  double    tolerance    =    Math.abs(y1)-    delta;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
91	[BUG]  [BUGGY]  double  oldDelta  =  dx  *  delta  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  *  delta  +  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  *  delta  +  1;	  double    oldDelta    =    delta    *    dx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
92	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  dx  +  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  dx  +  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  dx  +  2;	  double    oldDelta    =    delta    *    dx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  /  Math.abs(x1));  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  /  Math.abs(x1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  /  Math.abs(x1));	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
94	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  Math.abs(x1),  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  Math.abs(x1),  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  Math.abs(x1),  maximalIterationCount);	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
95	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta  *  Math.abs(x1));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(delta  *  Math.abs(x1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(delta  *  Math.abs(x1));	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
96	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  x0;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  x0;	  double    tolerance    =    Math.abs(delta)-    x0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
97	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(x0)-  delta;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(x0)-  delta;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(x0)-  delta;	  double    tolerance    =    Math.abs(delta)-    x0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
98	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
99	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
100	[BUG]  [BUGGY]  double  oldDelta  =  delta  +  dx;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  +  dx;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  +  dx;	  double    oldDelta    =    dx    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
101	[BUG]  [BUGGY]  double  oldDelta  =  dx  +  delta  *  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  +  delta  *  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  +  delta  *  2;	  double    oldDelta    =    dx    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
102	[BUG]  [BUGGY]  double  oldDelta  =  dx  +  delta  *  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  +  delta  *  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  +  delta  *  1;	  double    oldDelta    =    dx    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
103	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.rint(delta));  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.rint(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.rint(delta));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.log(delta));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
104	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta,  maximalIterationCount));  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta,  maximalIterationCount));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta,  maximalIterationCount));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.log(delta));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
105	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.floor(delta));  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.floor(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.floor(delta));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.log(delta));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
106	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta),  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta),  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta),  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.log(delta));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
107	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)-  2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)-  2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)-  2;	  double    tolerance    =    Math.abs(delta)-    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
108	[BUG]  [BUGGY]  double  oldDelta  =  dx  *  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  *  delta.doubleValue();  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  *  delta.doubleValue();	  double    oldDelta    =    dx    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  double  oldDelta  =  x1  -  x1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  -  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x1  -  x1;	  double    oldDelta    =    delta    -    x1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  /  Math.abs(delta));  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  /  Math.abs(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.max(relativeAccuracy  /  Math.abs(delta));	  int    toleranceCount    =    Math.max(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
111	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta  -  delta));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta  -  delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta  -  delta));	  int    toleranceCount    =    Math.max(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
112	[BUG]  [BUGGY]  double  tolerance  =  Math.max(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.max(delta,  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.max(delta,  oldDelta);	  double    tolerance    =    Math.min(delta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
113	[BUG]  [BUGGY]  double  tolerance  =  x1  /  x0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x1  /  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x1  /  x0;	  double    tolerance    =    x1    -    x0;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
114	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  dx;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  -  dx;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  -  dx;	  double    oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
115	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  delta1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  -  delta1;	  double    oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
116	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  delta2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  -  delta2;	  double    oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
117	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  /  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  /  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  /  delta);	  int    toleranceCount    =    Math.min(delta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
118	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  *  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta,  oldDelta  *  delta);	  int    toleranceCount    =    Math.min(delta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
119	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta  *  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(delta  *  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(delta  *  delta);	  int    toleranceCount    =    Math.min(delta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
120	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  y0;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  /  y0;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  /  y0;	  double    oldDelta    =    delta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
121	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  y1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  y1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  y1;	  double    oldDelta    =    delta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
122	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  y0  +  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  y0  +  1;	  double    oldDelta    =    delta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
123	[BUG]  [BUGGY]  double  oldDelta  =  y0  *  delta;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  y0  *  delta;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  y0  *  delta;	  double    oldDelta    =    delta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
124	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  dx  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  dx  +  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  dx  +  1;	  double    tolerance    =    Math.abs(delta)/    dx;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
125	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)/  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)/  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)/  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta)-    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
126	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)-  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)-  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)-  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta)-    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
127	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta)-  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta)-  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta)-  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta)-    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
128	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
129	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
130	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta),  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta),  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta),  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
131	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  /  delta));  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  /  delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  /  delta));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    delta));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
132	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  oldDelta));  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  oldDelta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  oldDelta));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    delta));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  delta)+  1);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  delta)+  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  delta)+  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    delta));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
134	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta  -  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta  -  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.toLowerCase(delta  -  1);	  double    tolerance    =    Math.toLowerCase(delta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
135	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.toLowerCase(delta  +  1);	  double    tolerance    =    Math.toLowerCase(delta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
136	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.toLowerCase(delta  -  delta);	  double    tolerance    =    Math.toLowerCase(delta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
137	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta)+  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta)+  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  Math.abs(delta)+  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta)+    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta,  maximalIterationCount);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
139	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  relativeAccuracy);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  relativeAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
140	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
141	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1)+  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1)+  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1)+  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
142	[BUG]  [BUGGY]  double  oldDelta  -=  delta  *  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  delta  *  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  delta  *  1;	  double    oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
143	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  relativeAccuracy,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  relativeAccuracy,  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  relativeAccuracy,  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
144	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
145	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta)+  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta)+  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta)+  1);	  int    toleranceCount    =    Math.max(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
146	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta  -  1));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta  -  1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta  -  1));	  int    toleranceCount    =    Math.max(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
147	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta)-  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta)-  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.max(relativeAccuracy  *  Math.abs(delta)-  1);	  int    toleranceCount    =    Math.max(relativeAccuracy    *    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
148	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta)-  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta)-  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.toLowerCase(delta)-  1;	  double    tolerance    =    Math.toLowerCase(delta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
149	[BUG]  [BUGGY]  double  tolerance  =  Math.exp(delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.exp(delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.exp(delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
150	[BUG]  [BUGGY]  double  tolerance  =  Math.pow(10,  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.pow(10,  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.pow(10,  delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
151	[BUG]  [BUGGY]  double  oldDelta  =  x0  -  delta1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x0  -  delta1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x0  -  delta1;	  double    oldDelta    =    x0    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
152	[BUG]  [BUGGY]  double  tolerance  =  x2  -  delta0;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x2  -  delta0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x2  -  delta0;	  double    tolerance    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
153	[BUG]  [BUGGY]  double  tolerance  =  delta  *  x0;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  delta  *  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  delta  *  x0;	  double    tolerance    =    x1    +    x0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
154	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x2  -  1;	  double    oldDelta    =    x1    -    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
155	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.sqrt(delta  +  1);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
156	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)-  y1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)-  y1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)-  y1);	  double    tolerance    =    Math.abs(y1)-    delta;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
157	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  delta0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  delta0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x2  -  delta0;	  double    oldDelta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
158	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  delta1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  delta1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x2  -  delta1;	  double    oldDelta    =    x2    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
159	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta-1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  delta-1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  -  delta-1;	  double    oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
160	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta0;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  delta0;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  -  delta0;	  double    oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
161	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(delta,  delta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(delta,  delta  +  1);	  double    tolerance    =    Math.min(delta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
162	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  x2);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(delta,  x2);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(delta,  x2);	  double    tolerance    =    Math.min(delta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
163	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  x1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  x1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  x1;	  double    oldDelta    =    delta    *    y0;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
164	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)-  1  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)-  1  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta)-  1  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta)-    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
165	[BUG]  [BUGGY]  Double  oldDelta  =  delta  *  dx;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  Double  oldDelta  =  delta  *  dx;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	Double  oldDelta  =  delta  *  dx;	  double    oldDelta    =    dx    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
166	[BUG]  [BUGGY]  double  tolerance  =  x0  +  x2;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x0  +  x2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x0  +  x2;	  double    tolerance    =    x0    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
167	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta)+  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta)+  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta)+  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.log(delta));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
168	[BUG]  [BUGGY]  double  tolerance  =  x1  -  delta2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x1  -  delta2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x1  -  delta2;	  double    tolerance    =    x1    -    delta0;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
169	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  /  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  /  relativeAccuracy);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  /  relativeAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    Math.abs(delta));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
170	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta  +  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  oldDelta  +  1);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
171	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
172	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  y0);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(delta,  y0);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(delta,  y0);	  double    tolerance    =    Math.min(delta,    x1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
173	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta  *  Math.abs(delta));  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(delta  *  Math.abs(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(delta  *  Math.abs(delta));	  int    toleranceCount    =    Math.min(delta    *    Math.abs(x0));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
174	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  relativeAccuracy  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  relativeAccuracy  -  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  relativeAccuracy  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
175	[BUG]  [BUGGY]  double  oldDelta  =  x2  -  x1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x2  -  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x2  -  x1;	  double    oldDelta    =    delta    -    x1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
176	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  3;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  delta  *  3;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  3;	  double    oldDelta    =    delta    *    1;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
177	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
178	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
179	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.cos(delta));  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.cos(delta));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  Math.cos(delta));	  double    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(x1));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
180	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  dx  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  dx  -  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  dx  -  1;	  double    tolerance    =    Math.abs(delta)/    dx;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
181	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta)/  2.0;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.log(delta)/  2.0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.log(delta)/  2.0;	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
182	[BUG]  [BUGGY]  double  oldDelta  =  dx  /  1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  /  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  /  1;	  double    oldDelta    =    dx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
183	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(x0));  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(x0));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(x0));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.log(delta));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
184	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  x1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  x1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  x1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
185	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1)-  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1)-  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.abs(delta  -  1)-  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta)-    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
186	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  2;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  -  2;	  double    oldDelta    =    delta    -    2;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
187	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  oldDelta  -  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  oldDelta  -  1);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
188	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  *  oldDelta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  *  oldDelta);	  int    toleranceCount    =    Math.min(delta    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
189	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  *  x1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  *  x1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(delta  *  x1);	  int    toleranceCount    =    Math.min(delta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
190	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
191	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  *  x1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta)/  2  *  x1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta)/  2  *  x1;	  double    tolerance    =    Math.abs(delta)/    2;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
192	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta,  x1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta,  x1);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.toLowerCase(delta,  x1);	  double    tolerance    =    Math.toLowerCase(delta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
193	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta)/  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta)/  2;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.toLowerCase(delta)/  2;	  double    tolerance    =    Math.toLowerCase(delta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
194	[BUG]  [BUGGY]  double  oldDelta  =  x1  *  delta;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  *  delta;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x1  *  delta;	  double    oldDelta    =    dx    *    delta;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
195	[BUG]  [BUGGY]  double  oldDelta  =  x1  +  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  x1  +  2;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  x1  +  2;	  double    oldDelta    =    delta    +    2;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
196	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta  -  1));  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta  -  1));  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  Math.log(delta  -  1));	  int    toleranceCount    =    Math.min(relativeAccuracy    *    Math.abs(delta    -    1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
197	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  *  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.abs(delta  *  delta);  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.abs(delta  *  delta);	  double    tolerance    =    Math.abs(delta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
198	[BUG]  [BUGGY]  double  oldDelta  -=  delta  *  dx;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  -=  delta  *  dx;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  -=  delta  *  dx;	  double    oldDelta    -=    delta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
199	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  x1)-  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  Math.min(delta,  x1)-  1;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  Math.min(delta,  x1)-  1;	  double    tolerance    =    Math.abs(delta)-    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
200	[BUG]  [BUGGY]  double  oldDelta  =  dx  -  delta  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  oldDelta  =  dx  -  delta  +  1;  [BUGGY]        int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  dx  -  delta  +  1;	  double    oldDelta    =    dx    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
201	[BUG]  [BUGGY]  double  tolerance  =  x2  +  x0;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;      [BUGGY]  double  tolerance  =  x2  +  x0;  [BUGGY]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  tolerance  =  x2  +  x0;	  double    tolerance    =    x1    +    x0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
