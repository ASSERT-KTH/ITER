bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  i;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  i;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  i;	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  return  result  +  1;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  +  1;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  +  1;	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  return  x2;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  x2;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  x2;	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  return  x1;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  x1;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  x1;	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	  	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]    result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	6	None	add
7	[BUG]  [BUGGY]    double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	6	None	add
8	[BUG]  [BUGGY]    result  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    result  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    result  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	6	None	add
9	[BUG]  [BUGGY]    result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	6	None	add
10	[BUG]  [BUGGY]    Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	6	None	add
11	[BUG]  [BUGGY]    double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	6	None	add
12	[BUG]  [BUGGY]  return  result  -  1;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  -  1;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  -  1;	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  return  result  *  i;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  *  i;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  *  i;	return  result;  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]    if(Math.abs(x2)  <  =  Math.abs(x1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(x2)  <  =  Math.abs(x1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(x2)  <  =  Math.abs(x1))  {  setResult(x1,  i);  return  result;  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
15	[BUG]  [BUGGY]    if(Math.abs(x1)  <  =  Math.abs(x2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(x1)  <  =  Math.abs(x2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(x1)  <  =  Math.abs(x2))  {  setResult(x1,  i);  return  result;  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
16	[BUG]  [BUGGY]    if(Math.abs(x2)  <  =  Math.abs(x1))  {  setResult(x2,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(x2)  <  =  Math.abs(x1))  {  setResult(x2,  i);  return  result;  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(x2)  <  =  Math.abs(x1))  {  setResult(x2,  i);  return  result;  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
