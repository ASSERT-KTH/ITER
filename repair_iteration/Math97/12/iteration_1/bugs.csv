bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x1  =  x0;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]  x1  =  x0;  [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	x1  =  x0;	x1  =  x2;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  x1  =  x2  +  delta;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]  x1  =  x2  +  delta;  [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	x1  =  x2  +  delta;	x1  =  x2;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  x1  =  x3;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]  x1  =  x3;  [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	x1  =  x3;	x1  =  x2;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	  	x1  =  x2;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]    double  x1  =  x0;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    double  x1  =  x0;  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    double  x1  =  x0;		non-compiled	[CE]  illegal  start  of  expression	24	None	add
6	[BUG]  [BUGGY]    x0  =  x1;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    x0  =  x1;  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    x0  =  x1;		non-compiled	[CE]  illegal  start  of  expression	24	None	add
7	[BUG]  [BUGGY]    x1  =  x0;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    x1  =  x0;  y2  =  y0;  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    x1  =  x0;  y2  =  y0;		non-compiled	[CE]  illegal  start  of  expression	24	None	add
8	[BUG]  [BUGGY]    if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  }  else  {  setResult(x1,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  }  else  {  setResult(x1,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
9	[BUG]  [BUGGY]    if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
10	[BUG]  [BUGGY]    if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  }  else  {  setResult(x1,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  }  else  {  setResult(x1,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
11	[BUG]  [BUGGY]    if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
12	[BUG]  [BUGGY]    if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  setResult(x0,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  setResult(x0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
13	[BUG]  [BUGGY]  x1  =  x1;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]  x1  =  x1;  [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	x1  =  x1;	x1  =  x2;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]    if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
15	[BUG]  [BUGGY]    if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x1,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x1,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
16	[BUG]  [BUGGY]    if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x0,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
17	[BUG]  [BUGGY]    if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  [BUGGY]    if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	183	183	1	replace	    if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
