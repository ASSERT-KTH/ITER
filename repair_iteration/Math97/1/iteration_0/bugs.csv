bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalArgumentException ("Function values at endpoints do not have different signs." +   " Endpoints: [" + min + "," + max + "]" + [FE] IllegalArgumentException [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign >= 0) {   [BUGGY] throw new IllegalArgumentException    ("Function values at endpoints do not have different signs." +            " Endpoints: [" + min + "," + max + "]" + [BUGGY] ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  ret = solve(min, yMin, max, yMax, min, yMin);  } return ret; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	
2	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign >= 0) {   [BUGGY] [BUGGY] throw new IllegalArgumentException    ("Function values at endpoints do not have different signs." +            " Endpoints: [" + min + "," + max + "]" + ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  ret = solve(min, yMin, max, yMax, min, yMin);  } return ret; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	add	
