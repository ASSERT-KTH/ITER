bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(tolerance,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.max(tolerance,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.max(tolerance,  oldDelta);	  int    toleranceCount    =    Math.min(oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
2	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  tolerance);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(oldDelta,  tolerance);	  int    toleranceCount    =    Math.min(oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
3	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
4	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  delta  -  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(tolerance,  delta  -  oldDelta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
5	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
6	[BUG]  [BUGGY]  double  i  =(double)Math.log(delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(double)Math.log(delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(double)Math.log(delta);	  double    i    =(double)Math.floor(delta);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]  double  i  =(double)Math.floor(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(double)Math.floor(delta,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(double)Math.floor(delta,  oldDelta);	  double    i    =(double)Math.floor(delta);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  double  i  =(double)Math.floor(oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(double)Math.floor(oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(double)Math.floor(oldDelta);	  double    i    =(double)Math.floor(delta);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
10	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
11	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
12	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta,  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  x1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  x1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  x1);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
16	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
17	[BUG]  [BUGGY]  float  i  =(float)Math.floor(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  float  i  =(float)Math.floor(delta,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	float  i  =(float)Math.floor(delta,  oldDelta);	  int    i    =(int)Math.floor(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
18	[BUG]  [BUGGY]  int  i  =(int)Math.floor(delta,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =(int)Math.floor(delta,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(int)Math.floor(delta,  oldDelta  +  1);	  int    i    =(int)Math.floor(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
19	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maximumIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    x0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
20	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  x0);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  x0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  x0);	  int    toleranceCount    =    Math.min(relativeIterationCount,    x0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
21	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
22	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
23	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
24	[BUG]  [BUGGY]  double  i  =  0  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =  0  +  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =  0  +  oldDelta;	  double    i    =    0    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
25	[BUG]  [BUGGY]  double  i  =  0  +  delta  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =  0  +  delta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =  0  +  delta  +  1;	  double    i    =    0    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
26	[BUG]  [BUGGY]  int  i  =  0  +  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  0  +  oldDelta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  0  +  oldDelta  +  1;	  int    i    =    0    +    delta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
27	[BUG]  [BUGGY]  int  i  =  1  +  delta  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  1  +  delta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  1  +  delta  +  1;	  int    i    =    0    +    delta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
28	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
29	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
30	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
31	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeCount,  oldDelta);	  double    toleranceCount    =    Math.min(oldDelta,    y0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
32	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(oldDelta,  delta);	  double    toleranceCount    =    Math.min(oldDelta,    y0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(oldDelta,  maximalIterationCount);	  double    toleranceCount    =    Math.min(oldDelta,    y0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
34	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
35	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
36	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
37	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta  /  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  delta  /  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
38	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(y0  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(y0  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(y0  -  delta);	  double    tolerance    =    Math.abs(y0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
39	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  x0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  x0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(oldDelta,  x0);	  int    toleranceCount    =    Math.min(oldDelta,    x0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
40	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.log(delta,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.log(delta,  oldDelta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  double  tolerance  =  Math.r3(delta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.r3(delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.r3(delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.log(delta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.log(delta  -  delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.log(delta  -  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.log(delta  -  oldDelta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
45	[BUG]  [BUGGY]  int  i  =  1  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  1  +  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  1  +  oldDelta;	  int    i    =    0    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
46	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
47	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  /  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  /  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
48	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  double  i  =  1  +  delta;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =  1  +  delta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =  1  +  delta;	  int    i    =    1    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
52	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeCount,  delta);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
53	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  /  delta);	  int    tolerance    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  /  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(relativeAccuracy  /  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
57	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  1);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
58	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
59	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(totalIterationCount,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(totalIterationCount,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(totalIterationCount,  oldDelta);	  int    toleranceCount    =    Math.min(oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
60	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta);	  int    toleranceCount    =    Math.min(oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
61	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1,  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    delta);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  /  1,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  /  1,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  /  1,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    delta);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
63	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    delta);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
64	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.sqrt(delta,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.sqrt(delta,  oldDelta);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.sqrt(delta  -  1);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.sqrt(oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.sqrt(oldDelta);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.sqrt(delta  -  delta);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
69	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  /  2,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  /  2,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  /  2,  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
70	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
71	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
72	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
73	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximumIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximumIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximumIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximumIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
77	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta  +  1);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
78	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  delta  +  1);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
79	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	  double    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(relativeAccuracy  *  delta);	  double    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);	  double    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
82	[BUG]  [BUGGY]  Integer  i  =  0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  Integer  i  =  0;  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	Integer  i  =  0;	  long    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  null  i  =  0;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  null  i  =  0;  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	null  i  =  0;	  long    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
86	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
87	[BUG]  [BUGGY]  double  i  =(delta  <  1)?  1L  :  0;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(delta  <  1)?  1L  :  0;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(delta  <  1)?  1L  :  0;	  double    i    =(delta    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
88	[BUG]  [BUGGY]  double  i  =(delta  <  1)?  2  :  0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(delta  <  1)?  2  :  0;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(delta  <  1)?  2  :  0;	  double    i    =(delta    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
89	[BUG]  [BUGGY]  double  i  =(delta  >=  1)?  1  :  0;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(delta  >=  1)?  1  :  0;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(delta  >=  1)?  1  :  0;	  double    i    =(delta    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
90	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  int  i  =  0  +  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  0  +  oldDelta  *  delta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  0  +  oldDelta  *  delta;	  int    i    =    0    +    delta    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
93	[BUG]  [BUGGY]  double  i  =  0  +  delta  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =  0  +  delta  *  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =  0  +  delta  *  oldDelta;	  int    i    =    0    +    delta    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
94	[BUG]  [BUGGY]  int  i  =  1  +  delta  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  1  +  delta  *  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  1  +  delta  *  oldDelta;	  int    i    =    0    +    delta    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
95	[BUG]  [BUGGY]  int  i  =  0  +  delta  *  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  0  +  delta  *  oldDelta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  0  +  delta  *  oldDelta  +  1;	  int    i    =    0    +    delta    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
96	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(totalIterationCount,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(totalIterationCount,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(totalIterationCount,  maximalIterationCount);	  int    toleranceCount    =    Math.min(totalIterationCount,    x0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
97	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(x0,  totalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(x0,  totalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(x0,  totalIterationCount);	  int    toleranceCount    =    Math.min(totalIterationCount,    x0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
98	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(oldDelta,  delta);	  int    toleranceCount    =    Math.min(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
99	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(delta,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(delta,  oldDelta);	  int    toleranceCount    =    Math.min(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
100	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(delta,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
101	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
102	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(y0,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(y0,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(y0,  oldDelta  -  delta);	  double    toleranceCount    =    Math.min(y0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
103	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(delta  -  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(delta  -  oldDelta);	  double    tolerance    =    Math.abs(delta);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
104	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  -  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(delta  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(delta  -  1);	  double    tolerance    =    Math.abs(delta);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
105	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(delta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(delta  -  delta);	  double    tolerance    =    Math.abs(delta);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
106	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(y0,  totalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(y0,  totalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(y0,  totalIterationCount);	  int    toleranceCount    =    Math.min(totalIterationCount,    y0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
107	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
108	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
109	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  delta);	  double    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta);	  double    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeCount,  maximalIterationCount);	  double    toleranceCount    =    Math.min(y0,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
112	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(tolerance,  maximalIterationCount);	  double    toleranceCount    =    Math.min(y0,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
113	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  y0);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  y0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeCount,  y0);	  double    toleranceCount    =    Math.min(y0,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
114	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(tolerance,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.max(tolerance,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.max(tolerance,  oldDelta);	  double    toleranceCount    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
115	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(tolerance,  delta);	  double    toleranceCount    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
116	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
117	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.max(relativeAccuracy  *  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.max(relativeAccuracy  *  oldDelta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
118	[BUG]  [BUGGY]  double  tolerance  =  Math.toLowerCase(delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.toLowerCase(delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.toLowerCase(delta);	  double    tolerance    =    Math.abs(oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
120	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
121	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  delta,  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
122	[BUG]  [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
123	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount);	  double    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
124	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  /  1,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  /  1,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  /  1,  oldDelta);	  double    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
125	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta);	  double    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  y0);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  y0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  y0);	  int    toleranceCount    =    Math.min(relativeIterationCount,    y0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
127	[BUG]  [BUGGY]  float  i  =(float)Math.floor(oldDelta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  float  i  =(float)Math.floor(oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	float  i  =(float)Math.floor(oldDelta);	  int    i    =(int)Math.floor(oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
128	[BUG]  [BUGGY]  long  i  =(long)Math.floor(oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  long  i  =(long)Math.floor(oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	long  i  =(long)Math.floor(oldDelta);	  int    i    =(int)Math.floor(oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
129	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  oldDelta  +  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(delta  *  oldDelta  +  relativeAccuracy);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(delta  *  oldDelta  +  relativeAccuracy);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
131	[BUG]  [BUGGY]  int  i  =  0;  i  =  0  +  delta  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  0;  i  =  0  +  delta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  0;  i  =  0  +  delta  +  1;	  int    i    =    0    +    delta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
133	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  -  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.sqrt(delta  -  oldDelta);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
134	[BUG]  [BUGGY]  double  tolerance  =  Math.sqrt(delta  +  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.sqrt(delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.sqrt(delta  +  1);	  double    tolerance    =    Math.sqrt(delta);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(delta  /  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(delta  /  oldDelta);	  double    tolerance    =    Math.abs(delta);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(delta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(delta  +  1);	  double    tolerance    =    Math.abs(delta);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
137	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(delta  *  relativeAccuracy);	  int    tolerance    =    Math.min(relativeAccuracy    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
138	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximumIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
139	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta  +  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    2,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
140	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy,  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(delta  *  relativeAccuracy,  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(oldDelta,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(y0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
142	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  -  y0);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  -  y0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(delta,  oldDelta  -  y0);	  int    toleranceCount    =    Math.min(y0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
143	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
144	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta);	  double    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
145	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta);	  double    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
146	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1);	  double    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
147	[BUG]  [BUGGY]  double  i  =(delta  <  1?  1  :  0);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(delta  <  1?  1  :  0);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(delta  <  1?  1  :  0);	  double    i    =(delta    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
148	[BUG]  [BUGGY]  double  i  =(delta  <  1)?  1  :  -1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(delta  <  1)?  1  :  -1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(delta  <  1)?  1  :  -1;	  double    i    =(delta    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
149	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  x0);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  x0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  x0);	  int    toleranceCount    =    Math.min(relativeIterationCount,    x0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
150	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(oldDelta  -  delta);	  double    tolerance    =    Math.abs(oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
151	[BUG]  [BUGGY]  double  tolerance  =  Math.min(oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(oldDelta,  delta);	  double    tolerance    =    Math.abs(oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy  -  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(delta  *  relativeAccuracy  -  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(delta  *  oldDelta  -  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(delta  *  oldDelta  -  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
154	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  1);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
155	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  1);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
156	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
157	[BUG]  [BUGGY]  int  i  =(int)Math.floor(oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =(int)Math.floor(oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(int)Math.floor(oldDelta,  delta);	  int    i    =(int)Math.floor(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
158	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount  -  1,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount  -  1,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeCount  -  1,  oldDelta);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
159	[BUG]  [BUGGY]  int  tolerance  =  Math.min(oldDelta  /  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(oldDelta  /  relativeAccuracy);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(oldDelta  /  relativeAccuracy);	  int    tolerance    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
160	[BUG]  [BUGGY]  double  tolerance  =  Math.exp(delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.exp(delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.exp(delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
161	[BUG]  [BUGGY]  double  tolerance  =  Math.floor(delta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.floor(delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.floor(delta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
162	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
163	[BUG]  [BUGGY]  double  tolerance  =  Math.abs(y0  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.abs(y0  -  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.abs(y0  -  oldDelta);	  double    tolerance    =    Math.abs(y0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
164	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  maximalIterationCount  -  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(oldDelta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
165	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);	  double    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
166	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  maximalIterationCount);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
167	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
168	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1);	  double    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
169	[BUG]  [BUGGY]  double  i  =(double)Math.floor(delta  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  i  =(double)Math.floor(delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  i  =(double)Math.floor(delta  +  1);	  double    i    =(double)Math.floor(delta);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
170	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
171	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  for(int  i  =  0;  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	for(int  i  =  0;	  long    i    =    0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
173	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta,  relativeAccuracy);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta,  relativeAccuracy);	  int    tolerance    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
174	[BUG]  [BUGGY]  double  tolerance  =  Math.min(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.min(delta,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.min(delta,  oldDelta);	  double    tolerance    =    Math.abs(oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
175	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  -  2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  -  2);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount  -  2);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
176	[BUG]  [BUGGY]  double  tolerance  =  Math.pow(10,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.pow(10,  oldDelta);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.pow(10,  oldDelta);	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
177	[BUG]  [BUGGY]  double  tolerance  =  Math.log(delta)/  2.0;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  double  tolerance  =  Math.log(delta)/  2.0;  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	double  tolerance  =  Math.log(delta)/  2.0;	  double    tolerance    =    Math.log(delta);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
178	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta  +  1);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta  +  1);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
179	[BUG]  [BUGGY]  int  i  =(delta  <  1)?  1  :  0;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =(delta  <  1)?  1  :  0;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(delta  <  1)?  1  :  0;	  double    i    =(delta    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
180	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x0);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x0);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x0);	  int    toleranceCount    =    Math.min(totalIterationCount,    x0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
181	[BUG]  [BUGGY]  int  i  =  0;  i  =  0  +  delta  *  oldDelta;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  i  =  0;  i  =  0  +  delta  *  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  0;  i  =  0  +  delta  *  oldDelta;	  int    i    =    0    +    delta    *    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
182	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
183	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]      int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);	  int    toleranceCount    =    Math.min(oldDelta,    x0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
