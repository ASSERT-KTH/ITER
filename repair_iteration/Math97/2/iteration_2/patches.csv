bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(y2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  double  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);	  double    oldDelta    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  if(Math.abs(y2)    <    absoluteAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  setResult(x2,  i  +  1,  dx);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  +  1,  dx);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x2,  i  +  1,  dx);	  setResult(x2,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  setResult(x2,  i  +  2);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  +  2);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x2,  i  +  2);	  setResult(x2,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy));  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy));	  Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));	  Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  setResult(x1,  i,  y1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  i,  y1);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  i,  y1);	  setResult(x2,    i,    y1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
11	[BUG]  [BUGGY]  setResult(x2,  i,  y0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i,  y0);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x2,  i,  y0);	  setResult(x2,    i,    y1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);	  Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  tolerance);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  tolerance);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  tolerance);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);	  Math.max(relativeAccuracy    *    Math.abs(x1,    y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
15	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
16	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  functionValueAccuracy));  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  functionValueAccuracy));  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  functionValueAccuracy));	  Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
17	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x2,  y2),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x2,  y2),  absoluteAccuracy));  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x2,  y2),  absoluteAccuracy));	  Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
18	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  i),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  i),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  i),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
19	[BUG]  [BUGGY]  setResult(x0,  y1,  i);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x0,  y1,  i);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x0,  y1,  i);	  setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	int  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(x1,    y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  setResult(x2,  i);  return  result;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i);  return  result;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x2,  i);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
22	[BUG]  [BUGGY]  setResult(x1,  y1);  return  result;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  y1);  return  result;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  y1);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
23	[BUG]  [BUGGY]  setResult(x1,  y0);  return  result;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  y0);  return  result;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  y0);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
24	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	int  i  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  setResult(x0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x0,  i  +  1);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x0,  i  +  1);	  setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);	  Math.max(relativeAccuracy    *    Math.abs(y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);	  Math.max(relativeAccuracy    *    Math.abs(y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy));  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy));	  Math.max(relativeAccuracy    *    Math.abs(y1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
33	[BUG]  [BUGGY]  luate(x2,  i)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  luate(x2,  i)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	luate(x2,  i)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    absoluteAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
34	[BUG]  [BUGGY]  luate(x0,  y0,  x2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  luate(x0,  y0,  x2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	luate(x0,  y0,  x2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    absoluteAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
35	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
36	[BUG]  [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(y2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
37	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  setResult(x1,  y0  +  2);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  y0  +  2);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  y0  +  2);	  setResult(x1,    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
39	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(x1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  double  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	double  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  double    oldDelta    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  setResult(x2,  i  +  1,  y1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  +  1,  y1);  [BUGGY]      return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x2,  i  +  1,  y1);	  setResult(x2,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
