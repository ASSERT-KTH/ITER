bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
3	[BUG] [BUGGY] setResult(x1, i); [FE] IllegalArgumentException [CONTEXT] x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {    [BUGGY] setResult(x1, i); [BUGGY] return result; } double dx = (x2 - x1); double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy); if (Math.abs(dx) <= tolerance) { setResult(x1, i); return result; } if ((Math.abs(oldDelta) < tolerance) || [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	
4	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {    [BUGGY] [BUGGY] setResult(x1, i); return result; } double dx = (x2 - x1); double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy); if (Math.abs(dx) <= tolerance) { setResult(x1, i); return result; } if ((Math.abs(oldDelta) < tolerance) || [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	
