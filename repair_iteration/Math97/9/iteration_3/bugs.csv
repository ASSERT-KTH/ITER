bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
2	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
3	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
4	[BUG]  [BUGGY]  while  (i  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  ==  0)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  ==  0)  {	  while    (i    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
5	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
6	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
7	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
8	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
9	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  /  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
10	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
11	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
12	[BUG]  [BUGGY]  while(i  <  =  oldDelta  &&  oldDelta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  oldDelta  &&  oldDelta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  oldDelta  &&  oldDelta  <  =  tolerance)  {	  while(i    <    =    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
13	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.max(relativeIterationCount,  delta);	  double    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
14	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  delta);	  double    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
15	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);	  double    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
16	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
18	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
19	[BUG]  [BUGGY]  while  (i  <  =  maximalIterationCount  &&  oldDelta  <  =  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  maximalIterationCount  &&  oldDelta  <  =  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  maximalIterationCount  &&  oldDelta  <  =  maximumIterationCount)  {	  while    (i    <    maximalIterationCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
21	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  i);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
22	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maximumIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  delta  -  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(tolerance,  delta  -  oldDelta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
25	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
26	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
27	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximumIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximumIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
28	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximumIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximumIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
29	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  1,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
30	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
31	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
32	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  i);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
33	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  /  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  /  delta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
34	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  i  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  i  *  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  i  *  oldDelta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
35	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
36	[BUG]  [BUGGY]  while  (i  <  =  toleranceCount  &&  oldDelta  <  =  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  toleranceCount  &&  oldDelta  <  =  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  toleranceCount  &&  oldDelta  <  =  maximumIterationCount)  {	  while    (i    <    toleranceCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  while  (i  <  toleranceCount  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  toleranceCount  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  toleranceCount  &&  oldDelta  <  =  delta)  {	  while    (i    <    toleranceCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  while  (i  <  toleranceCount  &&  oldDelta  <  =  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  toleranceCount  &&  oldDelta  <  =  functionValueAccuracy)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  toleranceCount  &&  oldDelta  <  =  functionValueAccuracy)  {	  while    (i    <    toleranceCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  while  (i  <  0  &&  oldDelta  <  =  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  0  &&  oldDelta  <  =  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  0  &&  oldDelta  <  =  maximumIterationCount)  {	  while    (i    <    toleranceCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  while(i  >  0  &&  oldDelta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  >  0  &&  oldDelta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  >  0  &&  oldDelta  <  =  tolerance)  {	  while(i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
41	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
42	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
43	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
44	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
45	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i  +  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i  +  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
46	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  *  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  *  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
47	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
49	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  +  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
50	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  +  i);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta  +  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
51	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maxIterationCount  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  maxIterationCount  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  maxIterationCount  -  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    i    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
52	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  i);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    i    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
53	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  1);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
54	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  *  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  *  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  *  1);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
55	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeCount,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeCount,  oldDelta);	  double    toleranceCount    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
56	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  x0);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  x0);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(oldDelta,  x0);	  double    toleranceCount    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
57	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(delta,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(delta,  oldDelta);	  double    toleranceCount    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
58	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  oldDelta  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  oldDelta  &&  oldDelta  <  =  delta)  {	  while(i    <    oldDelta    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
59	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  oldDelta  >=  tolerance)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  oldDelta  &&  oldDelta  >=  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  oldDelta  &&  oldDelta  >=  tolerance)  {	  while(i    <    oldDelta    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
60	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
61	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
62	[BUG]  [BUGGY]  while(i  <  =  oldDelta  &&  maximumIterationCount  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  oldDelta  &&  maximumIterationCount  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  oldDelta  &&  maximumIterationCount  <  =  tolerance)  {	  while(i    <    =    maximumIterationCount    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
63	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  delta);	  double    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta);	  double    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  1);	  double    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  i);	  double    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(y0)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
68	[BUG]  [BUGGY]  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
69	[BUG]  [BUGGY]  if(Math.abs(delta)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(delta)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(delta)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
70	[BUG]  [BUGGY]  if(Math.abs(x1)  <  Math.abs(x1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(x1)  <  Math.abs(x1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(x1)  <  Math.abs(x1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
71	[BUG]  [BUGGY]  double  y2  =  delta;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  y2  =  delta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  y2  =  delta;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  double  y2  =  oldDelta  -  delta;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  y2  =  oldDelta  -  delta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  y2  =  oldDelta  -  delta;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  double  y2  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  y2  =  oldDelta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  y2  =  oldDelta  +  1;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
74	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  -  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  i  -  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    delta    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
75	[BUG]  [BUGGY]  int  y2  =  delta  -  oldDelta;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  delta  -  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  delta  -  oldDelta;	  int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  int  y2  =  oldDelta  -  i;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  -  i;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  -  i;	  int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    /    delta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
78	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  /  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  delta  /  oldDelta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    /    delta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
79	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    /    delta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
80	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
81	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
82	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
83	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  delta  -  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  delta  -  oldDelta);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
84	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
85	[BUG]  [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta  -  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(tolerance,  oldDelta  -  delta);	  int    tolerance    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
86	[BUG]  [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta,  i);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(tolerance,  oldDelta,  i);	  int    tolerance    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
87	[BUG]  [BUGGY]  int  tolerance  =  Math.min(tolerance,  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(tolerance,  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(tolerance,  delta);	  int    tolerance    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
88	[BUG]  [BUGGY]  double  tolerance  =  Math.min(tolerance,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  tolerance  =  Math.min(tolerance,  oldDelta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  tolerance  =  Math.min(tolerance,  oldDelta);	  int    tolerance    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
89	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
90	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  absoluteAccuracy);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  delta,  absoluteAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
91	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  absoluteAccuracy);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  absoluteAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
92	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
93	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
94	[BUG]  [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.max(relativeAccuracy  *  delta);	  int    tolerance    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
95	[BUG]  [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta,  i);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta,  i);	  int    tolerance    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
96	[BUG]  [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  /  oldDelta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.max(relativeAccuracy  /  oldDelta);	  int    tolerance    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
97	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  1);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
98	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  delta  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  delta  +  1);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
99	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  i  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
100	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  maximalIterationCount);	  int    toleranceCount    =    Math.max(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
101	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  delta);	  int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
102	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  i);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  i);	  int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
103	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy,  oldDelta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  tolerance  =  Math.min(relativeAccuracy,  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
104	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  delta);	  int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
105	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
107	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
108	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount  -  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  while(i  <  =  oldDelta  &&  delta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  oldDelta  &&  delta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  oldDelta  &&  delta  <  =  tolerance)  {	  while(i    <    oldDelta    &&    delta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
110	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  delta  >=  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  oldDelta  &&  delta  >=  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  oldDelta  &&  delta  >=  tolerance)  {	  while(i    <    oldDelta    &&    delta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
111	[BUG]  [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  =  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  =  functionValueAccuracy)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  tolerance  &&  oldDelta  <  =  functionValueAccuracy)  {	  while    (i    <    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
112	[BUG]  [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  tolerance  &&  oldDelta  <  =  delta)  {	  while    (i    <    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
113	[BUG]  [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  tolerance  &&  oldDelta  <  maximumIterationCount)  {	  while    (i    <    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
114	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximalIterationCount  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
115	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
116	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta-1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
117	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta-1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta-1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta-1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta-1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
118	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1,  maximumIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-1,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta-1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
119	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta-1);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta-1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta-1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta-1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
120	[BUG]  [BUGGY]  Double  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  Double  y2  =  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	Double  y2  =  oldDelta;	  float    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  long  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  long  y2  =  oldDelta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	long  y2  =  oldDelta;	  float    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
122	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
123	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
124	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
125	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  delta);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy,  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
128	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
129	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
130	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta);	  int    toleranceCount    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
131	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(delta,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
132	[BUG]  [BUGGY]  while(i  ==  oldDelta)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  ==  oldDelta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  ==  oldDelta)  {	  while(i    >    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
133	[BUG]  [BUGGY]  double  y2  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  y2  =  oldDelta.doubleValue();  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  y2  =  oldDelta.doubleValue();	  int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
134	[BUG]  [BUGGY]  float  y2  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  float  y2  =  oldDelta.doubleValue();  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	float  y2  =  oldDelta.doubleValue();	  int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
135	[BUG]  [BUGGY]  int  y2  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta.doubleValue()  +  1;  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta.doubleValue()  +  1;	  int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
136	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
137	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
138	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(y0)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
139	[BUG]  [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
140	[BUG]  [BUGGY]  if(Math.abs(delta)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(delta)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(delta)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
141	[BUG]  [BUGGY]  if(Math.abs(x1)  <  Math.abs(x1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(x1)  <  Math.abs(x1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(x1)  <  Math.abs(x1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
142	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(delta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(delta,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(delta,  oldDelta);	  int    toleranceCount    =    Math.min(oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
143	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(oldDelta,  delta);	  int    toleranceCount    =    Math.min(oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
144	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  i);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
145	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  +  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  +  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
146	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
147	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  +  delta);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
148	[BUG]  [BUGGY]  while  (i  <  =  maximumIterationCount  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  maximumIterationCount  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  maximumIterationCount  &&  oldDelta  <  =  delta)  {	  while    (i    <    maximumIterationCount    &&    oldDelta    <    =    delta)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
149	[BUG]  [BUGGY]  while  (i  <  maximumIterationCount  &&  oldDelta  <  delta)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  maximumIterationCount  &&  oldDelta  <  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  maximumIterationCount  &&  oldDelta  <  delta)  {	  while    (i    <    maximumIterationCount    &&    oldDelta    <    =    delta)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
150	[BUG]  [BUGGY]  while  (i  <  minimumIterationCount  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  minimumIterationCount  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  minimumIterationCount  &&  oldDelta  <  =  delta)  {	  while    (i    <    maximumIterationCount    &&    oldDelta    <    =    delta)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
151	[BUG]  [BUGGY]  while  (i  <  maximalIterationCount  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  maximalIterationCount  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  maximalIterationCount  &&  oldDelta  <  =  delta)  {	  while    (i    <    =    maximalIterationCount    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
152	[BUG]  [BUGGY]  while  (i  <  =  0  &&  oldDelta  <  =  maximalIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  0  &&  oldDelta  <  =  maximalIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  0  &&  oldDelta  <  =  maximalIterationCount)  {	  while    (i    <    =    maximalIterationCount    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
153	[BUG]  [BUGGY]  int  y2  =  oldDelta  /  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  /  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  /  1;	  int    y2    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
154	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(oldDelta,  i);	  double    toleranceCount    =    Math.min(oldDelta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
155	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  1);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
156	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  +  1,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  +  1,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(tolerance,  oldDelta  +  1,  i);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
157	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(tolerance,  oldDelta  +  1);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
158	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  maximalIterationCount);	  double    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
159	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  i);	  double    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
160	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount  -  1,  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount  -  1,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount  -  1,  delta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
161	[BUG]  [BUGGY]  while  (i  <  =  tolerance  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  tolerance  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  tolerance  &&  oldDelta  <  =  delta)  {	  while    (i    <    =    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
162	[BUG]  [BUGGY]  while  (i  <  =  oldDelta  &&  oldDelta  <  =  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  oldDelta  &&  oldDelta  <  =  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  oldDelta  &&  oldDelta  <  =  maximumIterationCount)  {	  while    (i    <    =    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
163	[BUG]  [BUGGY]  while  (i  <  =  0  &&  oldDelta  <  =  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  0  &&  oldDelta  <  =  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  0  &&  oldDelta  <  =  maximumIterationCount)  {	  while    (i    <    =    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
164	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(tolerance,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.max(tolerance,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.max(tolerance,  oldDelta);	  double    toleranceCount    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
165	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(tolerance,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(tolerance,  oldDelta  +  i);	  double    toleranceCount    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
166	[BUG]  [BUGGY]  while  (i  <  =  maximalIterationCount  &&  oldDelta  <  =  maximalIterationCount)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  maximalIterationCount  &&  oldDelta  <  =  maximalIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  maximalIterationCount  &&  oldDelta  <  =  maximalIterationCount)  {	  while    (i    <    maximalIterationCount    &&    oldDelta    <    =    maximalIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
167	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(i,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(i,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(i,  oldDelta);	  int    toleranceCount    =    Math.min(oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
168	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  i);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  -  i);	  int    toleranceCount    =    Math.min(oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
169	[BUG]  [BUGGY]  double  y2  =  oldDelta  -  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  y2  =  oldDelta  -  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  y2  =  oldDelta  -  1;	  int    y2    =    oldDelta    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
170	[BUG]  [BUGGY]  int  y2  =  oldDelta  -  2;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  -  2;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  -  2;	  int    y2    =    oldDelta    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
172	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    delta);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
173	[BUG]  [BUGGY]  while  (i  <  =  tolerance  &&  oldDelta  <  maximalIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  tolerance  &&  oldDelta  <  maximalIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  tolerance  &&  oldDelta  <  maximalIterationCount)  {	  while    (i    <    =    tolerance    &&    oldDelta    <    =    maximalIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
174	[BUG]  [BUGGY]  while  (i  <  =  oldDelta  &&  oldDelta  <  =  maximalIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  oldDelta  &&  oldDelta  <  =  maximalIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  oldDelta  &&  oldDelta  <  =  maximalIterationCount)  {	  while    (i    <    =    tolerance    &&    oldDelta    <    =    maximalIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
175	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.min(relativeIterationCount,  delta);	  int    maximalIterationCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
176	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta);	  int    maximalIterationCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
177	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta);	  int    maximalIterationCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
178	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  1);	  int    maximalIterationCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
179	[BUG]  [BUGGY]  while(i!=  oldDelta)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i!=  oldDelta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i!=  oldDelta)  {	  while(i    >=    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
180	[BUG]  [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  maximalIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  tolerance  &&  oldDelta  <  maximalIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  tolerance  &&  oldDelta  <  maximalIterationCount)  {	  while    (i    <    tolerance    &&    oldDelta    <    =    maximalIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
181	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta,  tolerance);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  delta,  tolerance);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
182	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(tolerance,  oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(tolerance,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(tolerance,  oldDelta);	  int    toleranceCount    =    Math.min(oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
183	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(oldDelta,  tolerance);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(oldDelta,  tolerance);	  int    toleranceCount    =    Math.min(oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta  *  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
185	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  delta  -  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  delta  -  oldDelta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
186	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
187	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  delta  -  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
188	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount  -  1);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount  -  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximalIterationCount  -  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
189	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  /  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
190	[BUG]  [BUGGY]  while  (i  <  0  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  0  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  0  &&  oldDelta  <  =  delta)  {	  while    (i    <    0    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
191	[BUG]  [BUGGY]  while  (i  <  0  ||  oldDelta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  0  ||  oldDelta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  0  ||  oldDelta  <  =  tolerance)  {	  while    (i    <    0    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
192	[BUG]  [BUGGY]  while  (i  <  =  0  &&  oldDelta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  0  &&  oldDelta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  0  &&  oldDelta  <  =  tolerance)  {	  while    (i    <    0    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
193	[BUG]  [BUGGY]  while(i  <  tolerance  &&  oldDelta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  tolerance  &&  oldDelta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  tolerance  &&  oldDelta  <  =  tolerance)  {	  while(i    <    oldDelta    &&    delta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
194	[BUG]  [BUGGY]  while(i  <  =  tolerance  &&  oldDelta  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  tolerance  &&  oldDelta  <  =  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  tolerance  &&  oldDelta  <  =  tolerance)  {	  while(i    <    oldDelta    &&    delta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
195	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  delta!=  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  oldDelta  &&  delta!=  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  oldDelta  &&  delta!=  tolerance)  {	  while(i    <    oldDelta    &&    delta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
196	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  +  1);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
197	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
198	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
199	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  -  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  -  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  -  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
200	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  /  delta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  /  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  i  /  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
201	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.max(oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.max(oldDelta,  delta);	  double    toleranceCount    =    Math.min(oldDelta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
202	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
203	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  delta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
204	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta  +  1);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
205	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  i);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
206	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
207	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount,  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
208	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
209	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  Math.abs(y1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
210	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
211	[BUG]  [BUGGY]  int  y2  =  oldDelta  -  delta  +  1;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  -  delta  +  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  -  delta  +  1;	  int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
212	[BUG]  [BUGGY]  int  y2  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  /  delta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  /  delta;	  int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
213	[BUG]  [BUGGY]  int  tolerance  =  Math.min(oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(oldDelta,  tolerance);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(oldDelta,  tolerance);	  int    tolerance    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
214	[BUG]  [BUGGY]  while(i!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i!=  0)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i!=  0)  {	  while    (i    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
215	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  +  1);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
216	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  i);	  double    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
217	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
218	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  i);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
219	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximumIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
220	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  tolerance  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  tolerance  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(oldDelta,  tolerance  +  1);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
221	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(tolerance,  oldDelta  -  delta  +  1);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
222	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(tolerance,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(tolerance,  oldDelta  +  i);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
223	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  i);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(delta,  i);	  int    toleranceCount    =    Math.min(oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
224	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(i  *  oldDelta,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(i  *  oldDelta,  relativeAccuracy);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(i  *  oldDelta,  relativeAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
225	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
226	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta,  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
227	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  delta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    i    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
228	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  *  1;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  *  1;	  int    y2    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
229	[BUG]  [BUGGY]  int  y2  =  oldDelta  +  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  y2  =  oldDelta  +  2;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  y2  =  oldDelta  +  2;	  int    y2    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
230	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta);	  double    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
231	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);	  double    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
232	[BUG]  [BUGGY]  while  (i  <  =  tolerance  &&  oldDelta  <  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  =  tolerance  &&  oldDelta  <  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  =  tolerance  &&  oldDelta  <  maximumIterationCount)  {	  while    (i    <    =    tolerance    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
233	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximumIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximumIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta,  maximumIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
234	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  delta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
235	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  1);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  1);	  int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
236	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  i);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  i);	  int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
237	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  tolerance  -  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta,  tolerance  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(oldDelta,  tolerance  -  delta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
238	[BUG]  [BUGGY]  while  (i  <  toleranceCount  &&  oldDelta  <  maximumIterationCount)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while  (i  <  toleranceCount  &&  oldDelta  <  maximumIterationCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while  (i  <  toleranceCount  &&  oldDelta  <  maximumIterationCount)  {	  while    (i    <    toleranceCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
239	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  *  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  *  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  *  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    /    delta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
240	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta,  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  delta,  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    /    delta);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
241	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  *  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  i  *  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
242	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  *  delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  i  *  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
243	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(delta,  relativeIterationCount);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(delta,  relativeIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(delta,  relativeIterationCount);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
244	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.min(relativeIterationCount,  oldDelta  +  delta);	  int    maximalIterationCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
245	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta  +  1);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
246	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
247	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  -  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
248	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
249	[BUG]  [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta  -  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta  -  delta);	  int    tolerance    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
250	[BUG]  [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);	  int    tolerance    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
251	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
252	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  +  1  -  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
253	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  1);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
254	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta-1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta-1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  delta-1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta-1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
255	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-2);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-2);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta-2);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta-1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
256	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy  -  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(delta  *  relativeAccuracy  -  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(delta  *  relativeAccuracy  -  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
257	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  tolerance  =  Math.min(delta  *  oldDelta  -  delta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  tolerance  =  Math.min(delta  *  oldDelta  -  delta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
258	[BUG]  [BUGGY]  while(i  <  oldDelta  &&  oldDelta  <  tolerance)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  oldDelta  &&  oldDelta  <  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  oldDelta  &&  oldDelta  <  tolerance)  {	  while(i    <    oldDelta    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
259	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  /  i);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
260	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount  -  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount  -  oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount  -  oldDelta,  delta);	  int    toleranceCount    =    Math.max(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
261	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
262	[BUG]  [BUGGY]  double  y2  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  y2  =  oldDelta  +  delta;  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  y2  =  oldDelta  +  delta;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
263	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(delta,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(delta,  oldDelta  +  i);	  int    toleranceCount    =    Math.min(delta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
264	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(delta  /  relativeAccuracy  +  delta);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(delta  /  relativeAccuracy  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(delta  /  relativeAccuracy  +  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
265	[BUG]  [BUGGY]  while(i  <  maximumIterationCount  &&  oldDelta  <  tolerance)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  maximumIterationCount  &&  oldDelta  <  tolerance)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  maximumIterationCount  &&  oldDelta  <  tolerance)  {	  while(i    <    =    maximumIterationCount    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
266	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  i);	  double    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
267	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
268	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(oldDelta  /  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(oldDelta  /  relativeAccuracy);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(oldDelta  /  relativeAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
269	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
270	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy,  oldDelta  +  delta);	  int    toleranceCount    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
271	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  -  delta  +  1);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
272	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  *  delta);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
273	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
274	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  Math.abs(x1))  {  x0  =  x1;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x0    =    x1;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
275	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  delta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  1,  oldDelta  *  delta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    *    delta);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
276	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
277	[BUG]  [BUGGY]  double  tolerance  =  Math.max(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  tolerance  =  Math.max(relativeAccuracy  *  oldDelta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  tolerance  =  Math.max(relativeAccuracy  *  oldDelta);	  int    tolerance    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
278	[BUG]  [BUGGY]  while(i  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  1)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  1)  {	  while    (i    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
279	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x0);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  x0);	  int    toleranceCount    =    Math.min(oldDelta,    x0);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
280	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
281	[BUG]  [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  +  1);	  double    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
282	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  absoluteAccuracy);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
283	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  -  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  i  -  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  i  -  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
284	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta);	  double    toleranceCount    =    Math.min(oldDelta,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
285	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  *  i);	  double    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
286	[BUG]  [BUGGY]  while(i  <  =  maximalIterationCount  &&  oldDelta  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  maximalIterationCount  &&  oldDelta  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  maximalIterationCount  &&  oldDelta  <  =  delta)  {	  while    (i    <    =    maximalIterationCount    &&    oldDelta    <    =    tolerance)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
287	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta);  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  tolerance  =  Math.min(relativeAccuracy  *  oldDelta);	  int    tolerance    =    Math.min(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
288	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount  -  1,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.min(relativeIterationCount  -  1,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.min(relativeIterationCount  -  1,  oldDelta);	  int    maximalIterationCount    =    Math.min(relativeIterationCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
289	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  2,  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount    -    1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
290	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  oldDelta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  *  oldDelta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
291	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  delta  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  delta  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  -  delta  *  delta  +  1);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
292	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  i);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount,  oldDelta  /  i);	  int    toleranceCount    =    Math.min(relativeIterationCount,    oldDelta    +    i);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
293	[BUG]  [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount  -  oldDelta,  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  maximalIterationCount  =  Math.max(relativeIterationCount  -  oldDelta,  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  maximalIterationCount  =  Math.max(relativeIterationCount  -  oldDelta,  delta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    delta);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
294	[BUG]  [BUGGY]  while(i  <  toleranceCount  &&  oldDelta  <  =  toleranceCount)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  toleranceCount  &&  oldDelta  <  =  toleranceCount)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  toleranceCount  &&  oldDelta  <  =  toleranceCount)  {	  while    (i    <    toleranceCount    &&    oldDelta    <    =    maximumIterationCount)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
295	[BUG]  [BUGGY]  while(i  <  =  delta)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  while(i  <  =  delta)  {  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  =  delta)  {	  while(i    <    =    oldDelta)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
296	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
297	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	if(Math.abs(oldDelta)  <  Math.abs(x1))  {  x1  =  x0;  x1  =  x1;  y1  =  x2;  y2  =  y0;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    x1    =    x0;    x1    =    x1;    y1    =    x2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
298	[BUG]  [BUGGY]  Double  y2  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  Double  y2  =  oldDelta.doubleValue();  [BUGGY]      if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	Double  y2  =  oldDelta.doubleValue();	  int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
299	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance  -  delta);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance  -  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance  -  delta);	  int    toleranceCount    =    Math.min(tolerance,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
300	[BUG]  [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  maximalIterationCount  =  Math.max(relativeIterationCount,  oldDelta  +  delta);	  int    maximalIterationCount    =    Math.max(relativeIterationCount,    oldDelta    +    delta);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
301	[BUG]  [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  /  delta);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  /  delta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.max(relativeIterationCount,  oldDelta  /  delta);	  int    toleranceCount    =    Math.max(relativeIterationCount,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
302	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);	  double    toleranceCount    =    Math.min(tolerance,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
303	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  dx  -  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  dx  -  oldDelta,  maximalIterationCount);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  dx  -  oldDelta,  maximalIterationCount);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta,    maximalIterationCount);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
304	[BUG]  [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  tolerance);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	double  toleranceCount  =  Math.min(relativeAccuracy  /  oldDelta,  tolerance);	  int    toleranceCount    =    Math.min(relativeAccuracy    /    oldDelta,    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
305	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  oldDelta,  delta  -  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeIterationCount  -  oldDelta,  delta  -  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeIterationCount  -  oldDelta,  delta  -  oldDelta);	  int    toleranceCount    =    Math.min(relativeIterationCount,    delta    -    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
306	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  *  2  +  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  *  2  +  1);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeAccuracy  *  oldDelta  -  delta  *  2  +  1);	  int    toleranceCount    =    Math.min(relativeAccuracy    *    oldDelta    -    delta    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
307	[BUG]  [BUGGY]  int  toleranceCount  =  Math.min(relativeCount  -  1,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;      [BUGGY]  int  toleranceCount  =  Math.min(relativeCount  -  1,  oldDelta);  [BUGGY]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	int  toleranceCount  =  Math.min(relativeCount  -  1,  oldDelta);	  int    toleranceCount    =    Math.min(relativeCount,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
