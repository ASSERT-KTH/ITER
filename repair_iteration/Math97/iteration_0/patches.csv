bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x2  -  x0;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	add	double  delta  =  x2  -  x0;	double  delta  =  x1  -  x0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	11	1
4	[BUG]  [BUGGY]  double  delta  =  x2  -  x0;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x2  -  x0;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	double  delta  =  x2  -  x0;	double  delta  =  x1  -  x0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	11	1	replace
4	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x1  -  x2;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	add	double  delta  =  x1  -  x2;	double  delta  =  x1  -  x0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	11	1
5	[BUG]  [BUGGY]  double  delta  =  x1  -  x2;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x1  -  x2;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	double  delta  =  x1  -  x2;	double  delta  =  x1  -  x0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	11	1	replace
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  delta  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	  	double  delta  =  x1  -  x0;  	non-compiled	[CE]  cannot  find  symbol  delta	11	None	replace
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]  while(i  <=  maximalIterationCount)  {  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	add	while(i  <=  maximalIterationCount)  {	while  (i  <  maximalIterationCount)  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	17	1
14	[BUG]  [BUGGY]  while(i  <=  maximalIterationCount)  {  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]  while(i  <=  maximalIterationCount)  {  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <=  maximalIterationCount)  {	while  (i  <  maximalIterationCount)  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	17	1	replace
15	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	  	while  (i  <  maximalIterationCount)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x1,  i);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	    setResult(x1,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1
22	[BUG]  [BUGGY]    setResult(x1,  i);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x1,  i);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x1,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1	add
22	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x1,  i);  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	    setResult(x1,  i);  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1
23	[BUG]  [BUGGY]    setResult(x1,  i);  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x1,  i);  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x1,  i);  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1	add
23	[BUG]  [BUGGY]    int  i  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    int  i  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    int  i  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);		non-compiled	[CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)	4	None	add
24	[BUG]  [BUGGY]    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  result  =  Math.abs(y1);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  result  =  Math.abs(y1);  }  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  result  =  Math.abs(y1);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
25	[BUG]  [BUGGY]    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  return  result;  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  return  result;  }  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  return  result;  }		non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	add
32	[BUG]  [BUGGY]  ret  =  solve(min,  sign,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  sign,  max,  yMin,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(min,  sign,  max,  yMin,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double,double)	7	None	replace
33	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  sign,  max,  yMax,  min,  yMin);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	add	ret  =  solve(min,  sign,  max,  yMax,  min,  yMin);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	7	1
34	[BUG]  [BUGGY]  ret  =  solve(min,  sign,  max,  yMax,  min,  yMin);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  sign,  max,  yMax,  min,  yMin);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(min,  sign,  max,  yMax,  min,  yMin);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	7	1	replace
34	[BUG]  [BUGGY]  ret  =  solve(min,  max,  yMin,  min,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  max,  yMin,  min,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(min,  max,  yMin,  min,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double,double)	7	None	replace
42	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]  if(Math.abs(y2)  <=  Math.abs(y1))  {  [BUGGY]    x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	add	if(Math.abs(y2)  <=  Math.abs(y1))  {	if  (Math.abs(y2)  <  Math.abs(y1))  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	19	1
43	[BUG]  [BUGGY]  if(Math.abs(y2)  <=  Math.abs(y1))  {  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]  if(Math.abs(y2)  <=  Math.abs(y1))  {  [BUGGY]    x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	if(Math.abs(y2)  <=  Math.abs(y1))  {	if  (Math.abs(y2)  <  Math.abs(y1))  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	19	1	replace
45	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    [BUGGY]    x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	  	if  (Math.abs(y2)  <  Math.abs(y1))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException "Function  values  at  endpoints  do  not  have  different  signs. "  + "  Endpoints:  [ "  +  min  +   ", "  +  max  + "] "  +  [CE]  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]  throw  new  IllegalArgumentException "Function  values  at  endpoints  do  not  have  different  signs. "  + "  Endpoints:  [ "  +  min  +   ", "  +  max  + "] "  +  [BUGGY]  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	throw  new  IllegalArgumentException "Function  values  at  endpoints  do  not  have  different  signs. "  + "  Endpoints:  [ "  +  min  +   ", "  +  max  + "] "  +	throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +       "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  	non-compiled	[CE]  	1	None	replace
55	[BUG]  [BUGGY]    [CE]  not  a  statement  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    [BUGGY]  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	  	throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +       "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  	non-compiled	[CE]  not  a  statement	1	None	replace
61	[BUG]  [BUGGY]  return  result  ==  0?  result  :  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy));  [CE]  ';'  expected  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  ==  0?  result  :  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy));  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  ==  0?  result  :  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy));	return  result;  	non-compiled	[CE]  ';'  expected	5	None	replace
62	[BUG]  [BUGGY]  return  result  ==  0?  setResult(x1,  i):  result;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  ==  0?  setResult(x1,  i):  result;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  ==  0?  setResult(x1,  i):  result;	return  result;  	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	5	None	replace
65	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	add	  	return  result;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	5	1
66	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	  	return  result;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	5	1	replace
72	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =  1;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	add	int  i  =  1;	int  i  =  0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	15	1
73	[BUG]  [BUGGY]  int  i  =  1;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =  1;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  1;	int  i  =  0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	15	1	replace
73	[BUG]  [BUGGY]  int  i  =(delta  *  oldDelta)/  2.0;  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =(delta  *  oldDelta)/  2.0;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(delta  *  oldDelta)/  2.0;	int  i  =  0;  	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
74	[BUG]  [BUGGY]  int  i  =(delta  *  oldDelta)*  tolerance;  [CE]  cannot  find  symbol  tolerance  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =(delta  *  oldDelta)*  tolerance;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(delta  *  oldDelta)*  tolerance;	int  i  =  0;  	non-compiled	[CE]  cannot  find  symbol  tolerance	15	None	replace
75	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  i  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	  	int  i  =  0;  	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
81	[BUG]  [BUGGY]    ret  =  solve(endpoints,  max,  min,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  max,  min,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  max,  min,  yMax);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
82	[BUG]  [BUGGY]    ret  =  solve(endpoints,  max,  min,  yMin);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  max,  min,  yMin);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  max,  min,  yMin);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
83	[BUG]  [BUGGY]    ret  =  solve(min,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(min,  max,  yMin,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(min,  max,  yMin,  yMax);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	10	None	add
91	[BUG]  [BUGGY]    double  y2  =  oldDelta.doubleValue();  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y2  =  oldDelta.doubleValue();  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y2  =  oldDelta.doubleValue();		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
92	[BUG]  [BUGGY]    double  y2  =  oldDelta.computeValue(i);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y2  =  oldDelta.computeValue(i);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y2  =  oldDelta.computeValue(i);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
93	[BUG]  [BUGGY]    double  y  =  oldDelta.doubleValue();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y  =  oldDelta.doubleValue();  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y  =  oldDelta.doubleValue();		non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
94	[BUG]  [BUGGY]    double  y2  =  oldDelta.doubleValue()  *  i;  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y2  =  oldDelta.doubleValue()  *  i;  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y2  =  oldDelta.doubleValue()  *  i;		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
95	[BUG]  [BUGGY]    Math.abs(y1)  <  Math.abs(y2))  {  x0  =  x1;  [CE]  not  a  statement  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    Math.abs(y1)  <  Math.abs(y2))  {  x0  =  x1;  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    Math.abs(y1)  <  Math.abs(y2))  {  x0  =  x1;		non-compiled	[CE]  not  a  statement	20	None	add
101	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  x0);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  x0);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    int  maximalIterationCount  =  Math.max(delta,  x0);		non-compiled	[CE]  possible  loss  of  precision	14	None	add
102	[BUG]  [BUGGY]    double  y2  =  Math.sqrt(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.sqrt(delta);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.sqrt(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
103	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  x1)-  x0;  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  x1)-  x0;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    int  maximalIterationCount  =  Math.max(delta,  x1)-  x0;		non-compiled	[CE]  possible  loss  of  precision	14	None	add
104	[BUG]  [BUGGY]    double  y2  =  Math.abs(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.abs(delta);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.abs(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
105	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  x1);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  x1);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    int  maximalIterationCount  =  Math.max(delta,  x1);		non-compiled	[CE]  possible  loss  of  precision	14	None	add
111	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  -  1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  -  1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
112	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  1;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  -  1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  -  1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
113	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  +  1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  +  1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
114	[BUG]  [BUGGY]  double  oldDelta  =  delta  +  1;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  +  1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  +  1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
114	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  /  2.0;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  /  2.0;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
115	[BUG]  [BUGGY]  double  oldDelta  =  delta  /  2.0;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  /  2.0;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  /  2.0;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
121	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(x0,  x1);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  maximalIterationCount  =  Math.max(x0,  x1);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    int  maximalIterationCount  =  Math.max(x0,  x1);		non-compiled	[CE]  possible  loss  of  precision	12	None	add
122	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(x0,  y0);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  maximalIterationCount  =  Math.max(x0,  y0);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    int  maximalIterationCount  =  Math.max(x0,  y0);		non-compiled	[CE]  possible  loss  of  precision	12	None	add
123	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.min(x0,  y0);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  maximalIterationCount  =  Math.min(x0,  y0);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    int  maximalIterationCount  =  Math.min(x0,  y0);		non-compiled	[CE]  possible  loss  of  precision	12	None	add
124	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.min(x0,  x1);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    int  maximalIterationCount  =  Math.min(x0,  x1);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    int  maximalIterationCount  =  Math.min(x0,  x1);		non-compiled	[CE]  possible  loss  of  precision	12	None	add
125	[BUG]  [BUGGY]    double  x1  =  solve(x0,  y0);  [CE]  variable  x1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x1  =  solve(x0,  y0);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x1  =  solve(x0,  y0);		non-compiled	[CE]  variable  x1  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
131	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    setResult(x1,  i);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	add	    setResult(x1,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1
132	[BUG]  [BUGGY]    setResult(x1,  i);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    setResult(x1,  i);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    setResult(x1,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1	add
134	[BUG]  [BUGGY]    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(y2  >  y1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
135	[BUG]  [BUGGY]    if(x2  ==  x1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(x2  ==  x1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(x2  ==  x1)  {  setResult(x1,  i);  if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
141	[BUG]  [BUGGY]    double  min  =  solve(min,  max);  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  solve(min,  max);  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  solve(min,  max);		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
143	[BUG]  [BUGGY]    double  min  =  solve(min,  yMin,  max);  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  solve(min,  yMin,  max);  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  solve(min,  yMin,  max);		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
144	[BUG]  [BUGGY]    double  min  =  solve(min,  endpoints,  max);  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  solve(min,  endpoints,  max);  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  solve(min,  endpoints,  max);		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
145	[BUG]  [BUGGY]    double  min  =  getValues();  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getValues();  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getValues();		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
151	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.  Initial:  3.141592653589793  Endpoints:  [3.0  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMin,  max);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	add	    ret  =  solve(min,  yMin,  max);		compilable	  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.    Initial:  3.141592653589793    Endpoints:  [3.0  testRootEndpoints	2	1
152	[BUG]  [BUGGY]    ret  =  solve(min,  yMin,  max);  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.  Initial:  3.141592653589793  Endpoints:  [3.0  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMin,  max);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  yMin,  max);		compilable	  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.    Initial:  3.141592653589793    Endpoints:  [3.0  testRootEndpoints	2	1	add
152	[BUG]  [BUGGY]    ret  =  solve(min,  yMin,  max,  sign);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMin,  max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  yMin,  max,  sign);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	2	None	add
153	[BUG]  [BUGGY]    min  =  Math.min(min,  sign);  max  =  Math.max(max);  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    min  =  Math.min(min,  sign);  max  =  Math.max(max);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    min  =  Math.min(min,  sign);  max  =  Math.max(max);		non-compiled	[CE]  no  suitable  method  found  for  max(double)	2	None	add
154	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.  Initial:  1.7282216616616507E-17  Endpoints:  [3.0  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMax,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	add	    ret  =  solve(min,  yMax,  sign);		compilable	  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.    Initial:  1.7282216616616507E-17    Endpoints:  [3.0  testRootEndpoints	2	1
155	[BUG]  [BUGGY]    ret  =  solve(min,  yMax,  sign);  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.  Initial:  1.7282216616616507E-17  Endpoints:  [3.0  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMax,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  yMax,  sign);		compilable	  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.    Initial:  1.7282216616616507E-17    Endpoints:  [3.0  testRootEndpoints	2	1	add
155	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.  Initial:  1.7282216616616507E-17  Endpoints:  [3.0  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	add	    ret  =  solve(min,  max,  sign);		compilable	  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.    Initial:  1.7282216616616507E-17    Endpoints:  [3.0  testRootEndpoints	2	1
156	[BUG]  [BUGGY]    ret  =  solve(min,  max,  sign);  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.  Initial:  1.7282216616616507E-17  Endpoints:  [3.0  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  max,  sign);		compilable	  [FE]  java.lang.IllegalArgumentException:  Initial  guess  is  not  in  search  interval.    Initial:  1.7282216616616507E-17    Endpoints:  [3.0  testRootEndpoints	2	1	add
161	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  oldDelta);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  oldDelta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    int  maximalIterationCount  =  Math.max(delta,  oldDelta);		non-compiled	[CE]  possible  loss  of  precision	16	None	add
162	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta);  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta);		non-compiled	[CE]  no  suitable  method  found  for  max(double)	16	None	add
163	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);		non-compiled	[CE]  possible  loss  of  precision	16	None	add
164	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.abs(delta)-  oldDelta;  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    int  maximalIterationCount  =  Math.abs(delta)-  oldDelta;  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    int  maximalIterationCount  =  Math.abs(delta)-  oldDelta;		non-compiled	[CE]  possible  loss  of  precision	16	None	add
165	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(x0,  x1);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    int  maximalIterationCount  =  Math.max(x0,  x1);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    int  maximalIterationCount  =  Math.max(x0,  x1);		non-compiled	[CE]  possible  loss  of  precision	16	None	add
171	[BUG]  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <=  Math.abs(y2))  {  functionValueAccuracy  =  Math.abs(y1);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <=  Math.abs(y2))  {  functionValueAccuracy  =  Math.abs(y1);  }  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <=  Math.abs(y2))  {  functionValueAccuracy  =  Math.abs(y1);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	add
172	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);		non-compiled	[CE]  possible  loss  of  precision	18	None	add
173	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  oldDelta);  [CE]  possible  loss  of  precision  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    int  maximalIterationCount  =  Math.max(delta,  oldDelta);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    int  maximalIterationCount  =  Math.max(delta,  oldDelta);		non-compiled	[CE]  possible  loss  of  precision	18	None	add
174	[BUG]  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y2))  {  functionValueAccuracy  =  Math.abs(y1);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y2))  {  functionValueAccuracy  =  Math.abs(y1);  }  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y2))  {  functionValueAccuracy  =  Math.abs(y1);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	add
175	[BUG]  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta);  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    int  maximalIterationCount  =  Math.max(relativeAccuracy  *  oldDelta);		non-compiled	[CE]  no  suitable  method  found  for  max(double)	18	None	add
182	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i  +  1);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	setResult(x1,  i  +  1);	setResult(x1,  i);  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	3	1
183	[BUG]  [BUGGY]  setResult(x1,  i  +  1);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i  +  1);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  i  +  1);	setResult(x1,  i);  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	3	1	replace
183	[BUG]  [BUGGY]  setResult(x1,  y1);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  y1);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  y1);	setResult(x1,  i);  	non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	3	None	replace
184	[BUG]  [BUGGY]  setResult(x1,  i)-  1;  [CE]  not  a  statement  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i)-  1;  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  i)-  1;	setResult(x1,  i);  	non-compiled	[CE]  not  a  statement	3	None	replace
3	[BUG]  [BUGGY]    setResult(x0,  y0);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x0,  y0);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x0,  y0);		non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	4	None	add
21	[BUG]  [BUGGY]    double  x0  =  Math.sqrt(Double.doubleToLongBits(x0),  Double.doubleToLongBits(y0));  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.sqrt(Double.doubleToLongBits(x0),  Double.doubleToLongBits(y0));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.sqrt(Double.doubleToLongBits(x0),  Double.doubleToLongBits(y0));		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
22	[BUG]  [BUGGY]    double  x0  =  Math.pow(Math.abs(y0)/  oldDelta);  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.pow(Math.abs(y0)/  oldDelta);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.pow(Math.abs(y0)/  oldDelta);		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
23	[BUG]  [BUGGY]    double  x0  =  Math.pow(Math.abs(y0));  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.pow(Math.abs(y0));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.pow(Math.abs(y0));		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
24	[BUG]  [BUGGY]    double  x0  =  Math.pow(Math.abs(y0)*  Math.log(x1)/  oldDelta));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.pow(Math.abs(y0)*  Math.log(x1)/  oldDelta));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.pow(Math.abs(y0)*  Math.log(x1)/  oldDelta));		non-compiled	[CE]  ';'  expected	12	None	add
25	[BUG]  [BUGGY]    double  x0  =  Math.sqrt(Double.doubleToLongBits(y0));  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.sqrt(Double.doubleToLongBits(y0));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.sqrt(Double.doubleToLongBits(y0));		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
41	[BUG]  [BUGGY]  ret  =  solve(min,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  max,  yMin,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(min,  max,  yMin,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	7	None	replace
43	[BUG]  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  yMin,  max,  yMin,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(min,  yMin,  max,  yMin,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double,double)	7	None	replace
44	[BUG]  [BUGGY]  ret  =  solve(endpoints,  min,  max,  yMin,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(endpoints,  min,  max,  yMin,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(endpoints,  min,  max,  yMin,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  cannot  find  symbol  endpoints	7	None	replace
61	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
62	[BUG]  [BUGGY]    double  y1  =  Math.sqrt(delta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.sqrt(delta);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.sqrt(delta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
63	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta));  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta));		non-compiled	[CE]  ';'  expected	20	None	add
64	[BUG]  [BUGGY]    double  y1  =  Math.max(delta,  oldDelta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.max(delta,  oldDelta);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.max(delta,  oldDelta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
65	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0));  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0));  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.pow(Math.abs(y0));		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
83	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta);  [CE]  no  suitable  method  found  for  min(double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta);	int  i  =  0;  	non-compiled	[CE]  no  suitable  method  found  for  min(double)	15	None	replace
84	[BUG]  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta)*  delta;  [CE]  no  suitable  method  found  for  min(double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =  Math.min(relativeAccuracy  *  oldDelta)*  delta;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =  Math.min(relativeAccuracy  *  oldDelta)*  delta;	int  i  =  0;  	non-compiled	[CE]  no  suitable  method  found  for  min(double)	15	None	replace
102	[BUG]  [BUGGY]    double  y2  =  Math.pow(Math.abs(y1)/  delta));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.pow(Math.abs(y1)/  delta));  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.pow(Math.abs(y1)/  delta));		non-compiled	[CE]  ';'  expected	14	None	add
103	[BUG]  [BUGGY]    double  y2  =  Math.pow(Math.abs(y0)/  delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.pow(Math.abs(y0)/  delta);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.pow(Math.abs(y0)/  delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
105	[BUG]  [BUGGY]    double  y2  =  Math.pow(Math.abs(y1)/  delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.pow(Math.abs(y1)/  delta);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.pow(Math.abs(y1)/  delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
123	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]  while(i!=  maximalIterationCount)  {  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	add	while(i!=  maximalIterationCount)  {	while  (i  <  maximalIterationCount)  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	17	1
124	[BUG]  [BUGGY]  while(i!=  maximalIterationCount)  {  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]  while(i!=  maximalIterationCount)  {  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i!=  maximalIterationCount)  {	while  (i  <  maximalIterationCount)  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	17	1	replace
161	[BUG]  [BUGGY]    double  min  =  getMinimumValue(endpoints.getStartMillis());  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValue(endpoints.getStartMillis());  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValue(endpoints.getStartMillis());		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
162	[BUG]  [BUGGY]    double  min  =  getMinimumValue(endpoints.getStartPoint());  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValue(endpoints.getStartPoint());  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValue(endpoints.getStartPoint());		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
163	[BUG]  [BUGGY]    double  min  =  getMinimumValue(endpoint);  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValue(endpoint);  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValue(endpoint);		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
164	[BUG]  [BUGGY]    sign  =  getStartPoint(endpoints.getLowerBound());  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    sign  =  getStartPoint(endpoints.getLowerBound());  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    sign  =  getStartPoint(endpoints.getLowerBound());		non-compiled	[CE]  cannot  find  symbol  endpoints	8	None	add
165	[BUG]  [BUGGY]    double  min  =  getMinimumValue(endpoints.getSize());  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValue(endpoints.getSize());  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValue(endpoints.getSize());		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
181	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x0  -  x1;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	add	double  delta  =  x0  -  x1;	double  delta  =  x1  -  x0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	11	1
182	[BUG]  [BUGGY]  double  delta  =  x0  -  x1;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x0  -  x1;  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	double  delta  =  x0  -  x1;	double  delta  =  x1  -  x0;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	11	1	replace
202	[BUG]  [BUGGY]  setResult(x1,  i,  y0);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i,  y0);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  i,  y0);	setResult(x1,  i);  	non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	3	None	replace
204	[BUG]  [BUGGY]  setResult(x1,  i,  y1);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i,  y1);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  i,  y1);	setResult(x1,  i);  	non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	3	None	replace
221	[BUG]  [BUGGY]  double  oldDelta  =  delta  *(Math.abs(y0)  <  Math.abs(y1));  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *(Math.abs(y0)  <  Math.abs(y1));  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *(Math.abs(y0)  <  Math.abs(y1));	double  oldDelta  =  delta;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	13	None	replace
222	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x1),  Math.log(y0)));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x1),  Math.log(y0)));  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x1),  Math.log(y0)));	double  oldDelta  =  delta;  	non-compiled	[CE]  ';'  expected	13	None	replace
223	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x0),  y1);  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x0),  y1);	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
224	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x0),  y1);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x0),  y1);  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x0),  y1);	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
224	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x2));  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x2));  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  Math.pow(Math.abs(y0)*  Math.log(x2));	double  oldDelta  =  delta;  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	13	None	replace
241	[BUG]  [BUGGY]    ret  =  solve(endpoints,  min,  max);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  min,  max);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  min,  max);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
243	[BUG]  [BUGGY]    ret  =  solve(endpoints,  min,  max,  sign,  yMin,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  min,  max,  sign,  yMin,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  min,  max,  sign,  yMin,  yMax);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
244	[BUG]  [BUGGY]    ret  =  solve(endpoints,  min,  max,  sign,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  min,  max,  sign,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  min,  max,  sign,  yMax);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
245	[BUG]  [BUGGY]    ret  =  solve(endpoints,  min,  max,  yMin,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  min,  max,  yMin,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  min,  max,  yMin,  yMax);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
261	[BUG]  [BUGGY]    setResult(x2,  y0);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    setResult(x2,  y0);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    setResult(x2,  y0);		non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	6	None	add
263	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	add	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1
264	[BUG]  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  }		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1	add
264	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x2,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	add	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x2,  i);  }		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1
265	[BUG]  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x2,  i);  }  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x2,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x2,  i);  }		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1	add
265	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  Math.abs(y1))  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	add	    if(Math.abs(y2)  <=  Math.abs(y1))  {  setResult(x1,  i);  }		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1
266	[BUG]  [BUGGY]    if(Math.abs(y2)  <=  Math.abs(y1))  {  setResult(x1,  i);  }  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  Math.abs(y1))  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(y2)  <=  Math.abs(y1))  {  setResult(x1,  i);  }		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	6	1	add
281	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1)/  oldDelta));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1)/  oldDelta));  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y1  =  Math.pow(Math.abs(y1)/  oldDelta));		non-compiled	[CE]  ';'  expected	16	None	add
282	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1),  oldDelta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1),  oldDelta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y1  =  Math.pow(Math.abs(y1),  oldDelta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
283	[BUG]  [BUGGY]    double  y1  =  Math.sqrt(delta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y1  =  Math.sqrt(delta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y1  =  Math.sqrt(delta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
284	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y1  =  Math.pow(Math.abs(y0)*  oldDelta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
285	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)/  oldDelta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y1  =  Math.pow(Math.abs(y0)/  oldDelta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y1  =  Math.pow(Math.abs(y0)/  oldDelta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
322	[BUG]  [BUGGY]  return  result  *(Math.abs(y2)  <=  Math.abs(y1));  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  *(Math.abs(y2)  <=  Math.abs(y1));  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  *(Math.abs(y2)  <=  Math.abs(y1));	return  result;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	5	None	replace
323	[BUG]  [BUGGY]  return  result  *  Math.sqrt(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  *  Math.sqrt(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  *  Math.sqrt(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	return  result;  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	5	None	replace
324	[BUG]  [BUGGY]  return  result  *(Math.abs(y0)  <=  Math.abs(y1));  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  *(Math.abs(y0)  <=  Math.abs(y1));  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  *(Math.abs(y0)  <=  Math.abs(y1));	return  result;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	5	None	replace
343	[BUG]  [BUGGY]  return  ret  =  solve(endpoints,  min,  max,  yMin,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]  return  ret  =  solve(endpoints,  min,  max,  yMin,  yMax);  [BUGGY]  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	return  ret  =  solve(endpoints,  min,  max,  yMin,  yMax);	return  ret;  	non-compiled	[CE]  cannot  find  symbol  endpoints	9	None	replace
344	[BUG]  [BUGGY]  return  ret  =  solve(min,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]  return  ret  =  solve(min,  max,  yMin,  yMax);  [BUGGY]  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	return  ret  =  solve(min,  max,  yMin,  yMax);	return  ret;  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	9	None	replace
363	[BUG]  [BUGGY]    ret  =  solve(min,  max,  yMin,  sign);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  max,  yMin,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  max,  yMin,  sign);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	2	None	add
364	[BUG]  [BUGGY]    Ret  =  solve(min,  yMin,  max,  sign);  [CE]  cannot  find  symbol  Ret  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    Ret  =  solve(min,  yMin,  max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    Ret  =  solve(min,  yMin,  max,  sign);		non-compiled	[CE]  cannot  find  symbol  Ret	2	None	add
381	[BUG]  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x1;  y  [CE]  not  a  statement  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x1;  y  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x1;  y		non-compiled	[CE]  not  a  statement	18	None	add
382	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1),  oldDelta);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1),  oldDelta);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    double  y1  =  Math.pow(Math.abs(y1),  oldDelta);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	18	None	add
383	[BUG]  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1)/  oldDelta));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    double  y1  =  Math.pow(Math.abs(y1)/  oldDelta));  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    double  y1  =  Math.pow(Math.abs(y1)/  oldDelta));		non-compiled	[CE]  ';'  expected	18	None	add
384	[BUG]  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x3;  y  [CE]  not  a  statement  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x3;  y  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x3;  y		non-compiled	[CE]  not  a  statement	18	None	add
385	[BUG]  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x1.  [CE]  <identifier>  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x1.  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    if(i  >  maximalIterationCount)  {  if(Math.abs(y1)  <  Math.abs(y0))  {  x0  =  x0;  x1  =  x2;  x2  =  x1;  x1  =  x2;  x2  =  x1.		non-compiled	[CE]  <identifier>  expected	18	None	add
3	[BUG]  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x2,  i);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x2,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x2,  i);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
4	[BUG]  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x1,  i);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x1,  i);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x1,  i);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
5	[BUG]  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x2  -  x1);  }  [CE]  reached  end  of  file  while  parsing  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x2  -  x1);  }  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	    if(Math.abs(y2)  <=  functionValueAccuracy)  {  setResult(x1,  i);  if(!(Math.abs(y2)  <=  functionValueAccuracy))  {  setResult(x2  -  x1);  }		non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	add
31	[BUG]  [BUGGY]    double  x0  =  Math.exp(-x1)+  Math.exp(-x2);  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.exp(-x1)+  Math.exp(-x2);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.exp(-x1)+  Math.exp(-x2);		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
32	[BUG]  [BUGGY]    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-x2));  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-x2));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-x2));		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
33	[BUG]  [BUGGY]    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-x3));  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-x3));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-x3));		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
34	[BUG]  [BUGGY]    double  x0  =  Math.exp(-x1);  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.exp(-x1);  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.exp(-x1);		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
35	[BUG]  [BUGGY]    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-y0));  [CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-y0));  [BUGGY]  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	    double  x0  =  Math.max(x0,  Math.exp(-x1),  Math.exp(-y0));		non-compiled	[CE]  variable  x0  is  already  defined  in  method  solve(double,double,double,double,double,double)	12	None	add
63	[BUG]  [BUGGY]  return  ret  =  solve(min,  yMin,  max,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]  return  ret  =  solve(min,  yMin,  max,  yMax);  [BUGGY]  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	return  ret  =  solve(min,  yMin,  max,  yMax);	return  ret;  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	9	None	replace
64	[BUG]  [BUGGY]  return  ret  =  solve(min,  yMax,  yMin,  sign);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]  return  ret  =  solve(min,  yMax,  yMin,  sign);  [BUGGY]  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	return  ret  =  solve(min,  yMax,  yMin,  sign);	return  ret;  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	9	None	replace
92	[BUG]  [BUGGY]    double  y2  =  Math.ceil(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.ceil(delta);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.ceil(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
93	[BUG]  [BUGGY]    double  y2  =  Math.floor(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.floor(delta);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.floor(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
94	[BUG]  [BUGGY]    double  y2  =  Math.random();  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.random();  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.random();		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
95	[BUG]  [BUGGY]    double  y2  =  Math.pow(x0,  Math.sqrt(delta));  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]    double  y2  =  Math.pow(x0,  Math.sqrt(delta));  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	    double  y2  =  Math.pow(x0,  Math.sqrt(delta));		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	14	None	add
122	[BUG]  [BUGGY]    ret  =  solve(min,  yMin,  max,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(min,  yMin,  max,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(min,  yMin,  max,  yMax);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	10	None	add
123	[BUG]  [BUGGY]    ret  =  solve(endpoints,  min,  max,  yMin,  sign);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  min,  max,  yMin,  sign);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  min,  max,  yMin,  sign);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
124	[BUG]  [BUGGY]    ret  =  solve(min,  yMin,  max,  yMin,  sign);  [CE]  no  suitable  method  found  for  solve(double,double,double,double,double)  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(min,  yMin,  max,  yMin,  sign);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(min,  yMin,  max,  yMin,  sign);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double,double)	10	None	add
125	[BUG]  [BUGGY]    ret  =  solve(endpoints,  min,  max,  yMax);  [CE]  cannot  find  symbol  endpoints  [CONTEXT]  throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [BUGGY]    ret  =  solve(endpoints,  min,  max,  yMax);  [BUGGY]  return  ret;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	    ret  =  solve(endpoints,  min,  max,  yMax);		non-compiled	[CE]  cannot  find  symbol  endpoints	10	None	add
151	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    min  =  Math.min(min,  sign);  max  =  Math.max(max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	add	    min  =  Math.min(min,  sign);  max  =  Math.max(max,  sign);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	2	1
152	[BUG]  [BUGGY]    min  =  Math.min(min,  sign);  max  =  Math.max(max,  sign);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    min  =  Math.min(min,  sign);  max  =  Math.max(max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    min  =  Math.min(min,  sign);  max  =  Math.max(max,  sign);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	2	1	add
153	[BUG]  [BUGGY]    ret  =  solve(yMin,  min,  max,  sign);  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(yMin,  min,  max,  sign);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(yMin,  min,  max,  sign);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	2	None	add
154	[BUG]  [BUGGY]    ret  =  solve(min,  yMin,  sign,  f.value(yMax));  [CE]  no  suitable  method  found  for  solve(double,double,double,double)  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMin,  sign,  f.value(yMax));  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  yMin,  sign,  f.value(yMax));		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double)	2	None	add
155	[BUG]  [BUGGY]    ret  =  solve(min,  yMin,  sign,  f);  [CE]  no  suitable  method  found  for  solve(double,double,double,UnivariateRealFunction)  [CONTEXT]  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >=  0)  {    [BUGGY]    ret  =  solve(min,  yMin,  sign,  f);  [BUGGY]  throw  new  IllegalArgumentException    ( "Function  values  at  endpoints  do  not  have  different  signs. "  +             "  Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  return  ret;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	    ret  =  solve(min,  yMin,  sign,  f);		non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,UnivariateRealFunction)	2	None	add
181	[BUG]  [BUGGY]    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)	18	None	add
182	[BUG]  [BUGGY]    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);		non-compiled	[CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)	18	None	add
183	[BUG]  [BUGGY]    setResult(x0,  i);  return  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  unreachable  statement  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    setResult(x0,  i);  return  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    setResult(x0,  i);  return  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  unreachable  statement	18	None	add
184	[BUG]  [BUGGY]    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    int  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);		non-compiled	[CE]  variable  i  is  already  defined  in  method  solve(double,double,double,double,double,double)	18	None	add
185	[BUG]  [BUGGY]    setResult(x0,  y1,  oldDelta,  i);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]    setResult(x0,  y1,  oldDelta,  i);  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	    setResult(x0,  y1,  oldDelta,  i);		non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	18	None	add
211	[BUG]  [BUGGY]  ret  =  solve(min,  min,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(min,  min,  max,  yMin,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(min,  min,  max,  yMin,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double,double)	7	None	replace
214	[BUG]  [BUGGY]  ret  =  solve(yMin,  min,  max,  yMin,  yMax);  [CE]  no  suitable  method  found  for  solve(double,double,double,double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]  ret  =  solve(yMin,  min,  max,  yMin,  yMax);  [BUGGY]    }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	ret  =  solve(yMin,  min,  max,  yMin,  yMax);	ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  	non-compiled	[CE]  no  suitable  method  found  for  solve(double,double,double,double,double)	7	None	replace
241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.sqrt(delta);  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  *  Math.sqrt(delta);	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
242	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  Math.sqrt(delta);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.sqrt(delta);  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  Math.sqrt(delta);	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
242	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  x1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  *  x1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
243	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  x1;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  x1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  x1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
243	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  -  x1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	double  oldDelta  =  delta  -  x1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1
244	[BUG]  [BUGGY]  double  oldDelta  =  delta  -  x1;  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  -  x1;  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  -  x1;	double  oldDelta  =  delta;  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	13	1	replace
244	[BUG]  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.exp(1.0),  Math.exp(-x1),  Math.exp(-x3)));  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  [BUGGY]  double  oldDelta  =  delta  *  Math.pow(Math.exp(1.0),  Math.exp(-x1),  Math.exp(-x3)));  [BUGGY]    int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	double  oldDelta  =  delta  *  Math.pow(Math.exp(1.0),  Math.exp(-x1),  Math.exp(-x3)));	double  oldDelta  =  delta;  	non-compiled	[CE]  ';'  expected	13	None	replace
274	[BUG]  [BUGGY]  double  delta  =  x1  -  x0  *  Math.sqrt(Token.EMPTY);  [CE]  cannot  find  symbol  Token  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  double  delta  =  x1  -  x0  *  Math.sqrt(Token.EMPTY);  [BUGGY]  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	double  delta  =  x1  -  x0  *  Math.sqrt(Token.EMPTY);	double  delta  =  x1  -  x0;  	non-compiled	[CE]  cannot  find  symbol  Token	11	None	replace
301	[BUG]  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
302	[BUG]  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
303	[BUG]  [BUGGY]    double  y1  =  Math.random();  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.random();  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.random();		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
304	[BUG]  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  oldDelta  =  Math.abs(y0);  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  oldDelta  =  Math.abs(y0);  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  oldDelta  =  Math.abs(y0);		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
305	[BUG]  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  oldDelta  =  delta;  [CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  oldDelta  =  delta;  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	    double  y1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  oldDelta  =  delta;		non-compiled	[CE]  variable  y1  is  already  defined  in  method  solve(double,double,double,double,double,double)	20	None	add
333	[BUG]  [BUGGY]  int  i  =(delta  *  oldDelta  *  delta)?  0  :  oldDelta  *  x1  -  x0;  [CE]  incompatible  types  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =(delta  *  oldDelta  *  delta)?  0  :  oldDelta  *  x1  -  x0;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(delta  *  oldDelta  *  delta)?  0  :  oldDelta  *  x1  -  x0;	int  i  =  0;  	non-compiled	[CE]  incompatible  types	15	None	replace
334	[BUG]  [BUGGY]  int  i  =(delta  *  oldDelta  *  x1)?  x0  :  x1;  [CE]  incompatible  types  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]  int  i  =(delta  *  oldDelta  *  x1)?  x0  :  x1;  [BUGGY]  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	int  i  =(delta  *  oldDelta  *  x1)?  x0  :  x1;	int  i  =  0;  	non-compiled	[CE]  incompatible  types	15	None	replace
364	[BUG]  [BUGGY]  while(i  <  minimalIterationCount)  {  [CE]  cannot  find  symbol  minimalIterationCount  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  [BUGGY]  while(i  <  minimalIterationCount)  {  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	while(i  <  minimalIterationCount)  {	while  (i  <  maximalIterationCount)  {  	non-compiled	[CE]  cannot  find  symbol  minimalIterationCount	17	None	replace
393	[BUG]  [BUGGY]  return  result  *  Math.sqrt((  Math.abs(y2)  >=  functionValueAccuracy))?  result  :  0;  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  *  Math.sqrt((  Math.abs(y2)  >=  functionValueAccuracy))?  result  :  0;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  *  Math.sqrt((  Math.abs(y2)  >=  functionValueAccuracy))?  result  :  0;	return  result;  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	5	None	replace
394	[BUG]  [BUGGY]  return  result  *(Math.abs(y2)  <=  Math.abs(y1))?  result  :  0;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  [BUGGY]  return  result  *(Math.abs(y2)  <=  Math.abs(y1))?  result  :  0;  [BUGGY]  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	return  result  *(Math.abs(y2)  <=  Math.abs(y1))?  result  :  0;	return  result;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	5	None	replace
423	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i  -  1);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	setResult(x1,  i  -  1);	setResult(x1,  i);  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	3	1
424	[BUG]  [BUGGY]  setResult(x1,  i  -  1);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(x1,  i  -  1);  [BUGGY]  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	setResult(x1,  i  -  1);	setResult(x1,  i);  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	3	1	replace
452	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x2,  i);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	    setResult(x2,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1
453	[BUG]  [BUGGY]    setResult(x2,  i);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x2,  i);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x2,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1	add
453	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x0,  i);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	    setResult(x0,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1
454	[BUG]  [BUGGY]    setResult(x0,  i);  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x0,  i);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x0,  i);		compilable	  [FE]  IllegalArgumentException  testRootEndpoints	4	1	add
454	[BUG]  [BUGGY]    setResult(x0,  y1);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x0,  y1);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x0,  y1);		non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	4	None	add
455	[BUG]  [BUGGY]    setResult(x2,  y1);  [CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;  [CONTEXT]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {      [BUGGY]    setResult(x2,  y1);  [BUGGY]  setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	    setResult(x2,  y1);		non-compiled	[CE]  method  setResult  in  class  UnivariateRealSolverImpl  cannot  be  applied  to  given  types;	4	None	add
514	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1)||  Math.abs(y0)  <=  Math.abs(y1))  {  [BUGGY]    x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	add	if(Math.abs(y2)  <  Math.abs(y1)||  Math.abs(y0)  <=  Math.abs(y1))  {	if  (Math.abs(y2)  <  Math.abs(y1))  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	19	1
515	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1)||  Math.abs(y0)  <=  Math.abs(y1))  {  [FE]  IllegalArgumentException  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1)||  Math.abs(y0)  <=  Math.abs(y1))  {  [BUGGY]    x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	if(Math.abs(y2)  <  Math.abs(y1)||  Math.abs(y0)  <=  Math.abs(y1))  {	if  (Math.abs(y2)  <  Math.abs(y1))  {  	compilable	  [FE]  IllegalArgumentException  testRootEndpoints	19	1	replace
541	[BUG]  [BUGGY]    double  min  =  getMinimumValue(min);  sign  =  getMax();  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValue(min);  sign  =  getMax();  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValue(min);  sign  =  getMax();		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
542	[BUG]  [BUGGY]    clearResult();  sign  =  getValues();  [CE]  cannot  find  symbol  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    clearResult();  sign  =  getValues();  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    clearResult();  sign  =  getValues();		non-compiled	[CE]  cannot  find  symbol	8	None	add
543	[BUG]  [BUGGY]    double  min  =  getMinimumValues();  sign  =  getMax();  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValues();  sign  =  getMax();  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValues();  sign  =  getMax();		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
544	[BUG]  [BUGGY]    double  min  =  getMinimumValues();  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValues();  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValues();		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
545	[BUG]  [BUGGY]    double  min  =  getMinimumValue(min);  max  =  getMax();  [CE]  variable  min  is  already  defined  in  method  solve(double,double)  [CONTEXT]  if  (sign  >=  0)  {    throw  new  IllegalArgumentException  ( "Function  values  at  endpoints  do  not  have  different  signs. "  +   "Endpoints:  [ "  +  min  +   ", "  +  max  +   "] "  +   "Values:  [ "  +  yMin  +   ", "  +  yMax  +   "] ");  }  else  {    [BUGGY]    double  min  =  getMinimumValue(min);  max  =  getMax();  [BUGGY]  ret  =  solve(min,  yMin,  max,  yMax,  min,  yMin);  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  min  double  max  [VARIABLES]  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	    double  min  =  getMinimumValue(min);  max  =  getMax();		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(double,double)	8	None	add
571	[BUG]  [BUGGY]    double  y2  =  Math.sqrt(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y2  =  Math.sqrt(delta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y2  =  Math.sqrt(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
572	[BUG]  [BUGGY]    double  y2  =  Math.random();  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y2  =  Math.random();  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y2  =  Math.random();		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
573	[BUG]  [BUGGY]    int  y2  =  Math.min(y0,  oldDelta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    int  y2  =  Math.min(y0,  oldDelta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    int  y2  =  Math.min(y0,  oldDelta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
574	[BUG]  [BUGGY]    double  y2  =  Math.floor(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y2  =  Math.floor(delta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y2  =  Math.floor(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
575	[BUG]  [BUGGY]    double  y2  =  Math.ceil(delta);  [CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  [BUGGY]    double  y2  =  Math.ceil(delta);  [BUGGY]  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	    double  y2  =  Math.ceil(delta);		non-compiled	[CE]  variable  y2  is  already  defined  in  method  solve(double,double,double,double,double,double)	16	None	add
