bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw new IllegalArgumentException ("Function values at endpoints do not have different signs." +   " Endpoints: [" + min + "," + max + "]" + [FE] IllegalArgumentException testRootEndpoints [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign >= 0) {   [BUGGY] throw new IllegalArgumentException    ("Function values at endpoints do not have different signs." +            " Endpoints: [" + min + "," + max + "]" + [BUGGY] ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  ret = solve(min, yMin, max, yMax, min, yMin);  } return ret; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	replace	
2	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign >= 0) {   [BUGGY] [BUGGY] throw new IllegalArgumentException    ("Function values at endpoints do not have different signs." +            " Endpoints: [" + min + "," + max + "]" + ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  ret = solve(min, yMin, max, yMax, min, yMin);  } return ret; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.7071067811865475	141	143	1	add	
3	[BUG] [BUGGY] setResult(x1, i); [FE] IllegalArgumentException testRootEndpoints [CONTEXT] x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {    [BUGGY] setResult(x1, i); [BUGGY] return result; } double dx = (x2 - x1); double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy); if (Math.abs(dx) <= tolerance) { setResult(x1, i); return result; } if ((Math.abs(oldDelta) < tolerance) || [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	replace	
4	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {    [BUGGY] [BUGGY] setResult(x1, i); return result; } double dx = (x2 - x1); double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy); if (Math.abs(dx) <= tolerance) { setResult(x1, i); return result; } if ((Math.abs(oldDelta) < tolerance) || [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	193	193	1	add	
5	[BUG] [BUGGY] return result; [FE] IllegalArgumentException testRootEndpoints [CONTEXT] x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {    setResult(x1, i); [BUGGY] return result; [BUGGY] } double dx = (x2 - x1); double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy); if (Math.abs(dx) <= tolerance) { setResult(x1, i); return result; } if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	replace	
6	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {    setResult(x1, i); [BUGGY] [BUGGY] return result; } double dx = (x2 - x1); double tolerance = Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy); if (Math.abs(dx) <= tolerance) { setResult(x1, i); return result; } if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5773502691896258	194	194	1	add	
7	[BUG] [BUGGY] ret = solve(min, yMin, max, yMax, min, yMin); [FE] IllegalArgumentException testRootEndpoints [CONTEXT] if (sign >= 0) {   throw new IllegalArgumentException ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  [BUGGY] ret = solve(min, yMin, max, yMax, min, yMin); [BUGGY]  } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	replace	
8	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] if (sign >= 0) {   throw new IllegalArgumentException ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  [BUGGY] [BUGGY] ret = solve(min, yMin, max, yMax, min, yMin);  } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	147	147	1	add	
9	[BUG] [BUGGY] return ret; [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throw new IllegalArgumentException ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  ret = solve(min, yMin, max, yMax, min, yMin);  } [BUGGY] return ret; [BUGGY] } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	replace	
10	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throw new IllegalArgumentException ("Function values at endpoints do not have different signs." + "Endpoints: [" + min + "," + max + "]" + "Values: [" + yMin + "," + yMax + "]"); } else {  ret = solve(min, yMin, max, yMax, min, yMin);  } [BUGGY] [BUGGY] return ret; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double min double max [VARIABLES] long serialVersionUID double max min ret sign yMax yMin boolean  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	151	151	1	add	
11	[BUG] [BUGGY] double delta = x1 - x0; [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] double delta = x1 - x0; [BUGGY] double oldDelta = delta; int i = 0; while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	replace	
12	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] [BUGGY] double delta = x1 - x0; double oldDelta = delta; int i = 0; while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	175	175	1	add	
13	[BUG] [BUGGY] double oldDelta = delta; [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; [BUGGY] double oldDelta = delta; [BUGGY]  int i = 0; while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	replace	
14	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; [BUGGY] [BUGGY] double oldDelta = delta; int i = 0; while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	176	176	1	add	
15	[BUG] [BUGGY] int i = 0; [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; double oldDelta = delta; [BUGGY] int i = 0; [BUGGY] while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	replace	
16	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; double oldDelta = delta; [BUGGY] [BUGGY] int i = 0; while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	178	178	1	add	
17	[BUG] [BUGGY] while (i < maximalIterationCount) { [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; double oldDelta = delta; int i = 0; [BUGGY] while (i < maximalIterationCount) { [BUGGY] if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	replace	
18	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; double oldDelta = delta; int i = 0; [BUGGY] [BUGGY] while (i < maximalIterationCount) { if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	179	179	1	add	
19	[BUG] [BUGGY] if (Math.abs(y2) < Math.abs(y1)) { [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; double oldDelta = delta; int i = 0; while (i < maximalIterationCount) { [BUGGY] if (Math.abs(y2) < Math.abs(y1)) { [BUGGY]  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	replace	
20	[BUG] [BUGGY] [FE] IllegalArgumentException testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { double delta = x1 - x0; double oldDelta = delta; int i = 0; while (i < maximalIterationCount) { [BUGGY] [BUGGY] if (Math.abs(y2) < Math.abs(y1)) {  x0 = x1; x1 = x2; x2 = x0; y0 = y1; y1 = y2; y2 = y0; } if (Math.abs(y1) <= functionValueAccuracy) {  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  double x0 double y0 double x1 double y1 double x2 double y2 [VARIABLES] boolean long serialVersionUID double delta dx oldDelta p p1 r1 r2 r3 tolerance x0 x1 x2 y0 y1 y2 int i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	180	180	1	add	
