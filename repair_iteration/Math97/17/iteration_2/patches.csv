bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x2))  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x2))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x2))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
2	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy  *  Math.abs(x1))  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy  *  Math.abs(x1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy  *  Math.abs(x1))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
3	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.max(relativeAccuracy  *  Math.abs(x1)))  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.max(relativeAccuracy  *  Math.abs(x1)))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.max(relativeAccuracy  *  Math.abs(x1)))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
4	[BUG]  [BUGGY]  if  (Math.abs(x1)  <  =  x2)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(x1)  <  =  x2)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(x1)  <  =  x2)  {	  if    (Math.abs(y1)    <    =    y2)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  if  (Math.abs(y1)  <  =  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(y1)  <  =  Math.abs(y2))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(y1)  <  =  Math.abs(y2))  {	  if    (Math.abs(y1)    <    =    y2)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
6	[BUG]  [BUGGY]  int  result  =  Math.min(x0,  result);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x0,  result);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x0,  result);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
7	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x0,  y1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x0,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x0,  y1);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
8	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x0,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x0,  i);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
9	[BUG]  [BUGGY]  setResult(x0,  y1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x0,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x0,  y1);	  setResult(x1,    y1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  result  =  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  setResult(x1,  i);	  setResult(x1,    y1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]  setResult(x2,  i  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x2,  i  +  1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x2,  i  +  1);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
12	[BUG]  [BUGGY]  if  (Math.abs(x1)  <  absoluteAccuracy)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(x1)  <  absoluteAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(x1)  <  absoluteAccuracy)  {	  if    (Math.abs(y1)    <    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
13	[BUG]  [BUGGY]  double  result  =  Math.min(result,  x2);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(result,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(result,  x2);	  int    result    =    Math.min(result,    x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  int  result  =  Math.min(x1,  x2);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x1,  x2);	  int    result    =    Math.min(result,    x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x1,  y2);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x1,  y2);	  int    result    =    Math.min(result,    x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  setResult(x0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x0,  i  +  1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x0,  i  +  1);	  setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
17	[BUG]  [BUGGY]  setResult(x0,  y0);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x0,  y0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x0,  y0);	  setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
18	[BUG]  [BUGGY]  while(i  <  maximalIterationCount)  {  if(i  >  0)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  while(i  <  maximalIterationCount)  {  if(i  >  0)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	while(i  <  maximalIterationCount)  {  if(i  >  0)  {  setResult(x1,  i);  return  result;  }	  if(i    >    0)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
19	[BUG]  [BUGGY]  if(i  >  0)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(i  >  0)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(i  >  0)  {  setResult(x0,  i);  return  result;  }	  if(i    >    0)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
20	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(i  <  maximalIterationCount)  {  setResult(x0,  i);  return  result;  }	  setResult(x0,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
21	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x1,  y1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x1,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x1,  y1);	  int    result    =    Math.min(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
22	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x2,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x2,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x2,  i);	  int    result    =    Math.min(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
23	[BUG]  [BUGGY]  int  result  =  Math.min(result,  y1,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  y1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  y1,  i);	  int    result    =    Math.min(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
24	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  &&  Math.abs(y0)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  &&  Math.abs(y0)  <  =  Math.abs(y1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  &&  Math.abs(y0)  <  =  Math.abs(y1))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    &&    Math.abs(y2)    <    =    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
25	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  &&  Math.abs(y1)  <  =  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  &&  Math.abs(y1)  <  =  Math.abs(y2))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  &&  Math.abs(y1)  <  =  Math.abs(y2))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    &&    Math.abs(y2)    <    =    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
26	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy  &&  Math.abs(y2)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy  &&  Math.abs(y2)  <  =  Math.abs(y1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy  &&  Math.abs(y2)  <  =  Math.abs(y1))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    &&    Math.abs(y2)    <    =    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
27	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy  &&  Math.abs(y2)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy  &&  Math.abs(y2)  <  =  Math.abs(y1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy  &&  Math.abs(y2)  <  =  Math.abs(y1))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    &&    Math.abs(y2)    <    =    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
28	[BUG]  [BUGGY]  result  =  Math.min(result,  x1);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x1);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x1);  setResult(x1,  i);	  result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  result  =  Math.max(result,  x0);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x0);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x0);  setResult(x1,  i);	  result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  double  result  =  Math.max(x0,  result);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(x0,  result);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(x0,  result);	  double    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  double  result  =  Math.max(x1,  x0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(x1,  x0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(x1,  x0);	  double    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x0,  y1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x0,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x0,  y1);	  double    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x0);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x0);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x0);  setResult(x1,  i);	  int    result    =    Math.max(result,    x0);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
34	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x0);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x0);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x0);  setResult(x1,  i);	  int    result    =    Math.max(result,    x0);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
35	[BUG]  [BUGGY]  int  result  =  Math.max(result,  x0,  i);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  x0,  i);	  int    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
36	[BUG]  [BUGGY]  int  result  =  Math.max(result,  x0,  y1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  x0,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  x0,  y1);	  int    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
37	[BUG]  [BUGGY]  result  =  Math.max(result,  x1,  x2);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x1,  x2);	  result    =    Math.max(result,    x2);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  if  (Math.abs(x2)  <  =  absoluteAccuracy)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(x2)  <  =  absoluteAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(x2)  <  =  absoluteAccuracy)  {	  if    (Math.abs(x1)    <    =    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  if(Math.abs(x2)  <  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(x2)  <  functionValueAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(x2)  <  functionValueAccuracy)  {	  if    (Math.abs(dx)    <    functionValueAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {	  if    (Math.abs(dx)    <    functionValueAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
41	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    Math.abs(y2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
42	[BUG]  [BUGGY]  double  result  =  Math.min(result,  x2);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(result,  x2);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(result,  x2);  setResult(x1,  i);	  int    result    =    Math.min(result,    x2);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  double  result  =  Math.min(result,  x1,  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(result,  x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(result,  x1,  i);	  double    result    =    Math.min(result,    x1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  double  result  =  Math.min(x1,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(x1,  i);	  double    result    =    Math.min(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  tolerance);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  tolerance);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  tolerance);	  i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
46	[BUG]  [BUGGY]  result  =  Math.max(result,  x1);  setResult(x1,  y2);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x1);  setResult(x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x1);  setResult(x1,  y2);	  double    result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  result  =  Math.min(result,  x0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x0);	  result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
48	[BUG]  [BUGGY]  result  =  Math.max(x0,  result);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(x0,  result);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(x0,  result);	  result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
49	[BUG]  [BUGGY]  result  =  Math.max(result,  x0,  i);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x0,  i);	  result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
50	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
51	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  tolerance),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  tolerance),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  tolerance),  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
52	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  tolerance);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  tolerance);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  tolerance);	  i    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
53	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x0,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x0,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x0,  absoluteAccuracy),  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
54	[BUG]  [BUGGY]  int  result  =  Math.min(result,  0);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  0);	  int    result    =    Math.min(result,    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
55	[BUG]  [BUGGY]  int  result  =  Math.min(result,  2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  2);	  int    result    =    Math.min(result,    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
56	[BUG]  [BUGGY]  int  result  =  Math.max(result,  1);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  1);	  int    result    =    Math.min(result,    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
57	[BUG]  [BUGGY]  int  result  =  Math.max(result,  x2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  x2);	  int    result    =    Math.max(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  result  =  Math.max(result,  x1,  y2);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x1,  y2);	  result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  result  =  Math.max(result,  x1,  y1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x1,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x1,  y1);	  result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  result  =  Math.max(result,  x2,  i);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x2,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x2,  i);	  result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x1,  y2);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x1,  y2);	  double    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x1,  y1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x1,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x1,  y1);	  double    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x1,  x2);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x1,  x2);	  double    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x0,  i);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x0,  i);	  double    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  double  result  =  Math.max(x1,  x2);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(x1,  x2);	  double    result    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
66	[BUG]  [BUGGY]  double  result  =  Math.max(result1,  x1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result1,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result1,  x1);	  double    result    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
67	[BUG]  [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.min(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);	  i    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
68	[BUG]  [BUGGY]  if(i  <  =  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(i  <  =  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(i  <  =  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }	  if(i    <    maximalIterationCount)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  while(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  while(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	while(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;	  if(i    <    maximalIterationCount)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
70	[BUG]  [BUGGY]  result  =  Math.min(result,  x1);  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x1);  setResult(x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x1);  setResult(x0,  i);	  result    =    Math.max(result,    x1);    setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  result  =  Math.min(result,  x1);  setResult(x0,  y1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x1);  setResult(x0,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x1);  setResult(x0,  y1);	  result    =    Math.max(result,    x1);    setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  result  =  Math.min(result,  x2);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x2);	  result    =    Math.min(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  result  =  Math.min(result,  y1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  y1);	  result    =    Math.min(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
74	[BUG]  [BUGGY]  int  result  =  Math.max(result,  x1,  y2);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  x1,  y2);	  int    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  int  result  =  Math.max(result,  x1,  x2);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  x1,  x2);	  int    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  int  result  =  Math.max(result,  x1,  y1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(result,  x1,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(result,  x1,  y1);	  int    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  setResult(x1,  i  +  2);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x1,  i  +  2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x1,  i  +  2);	  setResult(x1,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
78	[BUG]  [BUGGY]  if  (Math.abs(dx)  <  absoluteAccuracy)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(dx)  <  absoluteAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(dx)  <  absoluteAccuracy)  {	  if    (Math.abs(dx)    <    =    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
79	[BUG]  [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.min(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);	  i    =    Math.min(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
80	[BUG]  [BUGGY]  result  =  Math.min(result,  x1,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x1,  i);	  result    =    Math.min(result,    x1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  double  result  =  Math.min(result,  x1);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(result,  x1);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(result,  x1);  setResult(x1,  i);	  int    result    =    Math.min(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  result  =  Math.max(result,  x2);  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x2);  setResult(x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x2);  setResult(x0,  i);	  result    =    Math.max(result,    x1);    setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  result  =  Math.min(result,  x1);  setResult(x0,  x2);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x1);  setResult(x0,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x1);  setResult(x0,  x2);	  result    =    Math.max(result,    x1);    setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  absoluteAccuracy  *  Math.abs(x1))  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  absoluteAccuracy  *  Math.abs(x1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  absoluteAccuracy  *  Math.abs(x1))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
85	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(y2))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(y2))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
86	[BUG]  [BUGGY]  double  result  =  Math.min(result,  x0);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(result,  x0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(result,  x0);	  double    result    =    Math.min(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  double  result  =  Math.max(x0,  x2);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(x0,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(x0,  x2);	  double    result    =    Math.max(result,    x2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
88	[BUG]  [BUGGY]  if  (Math.abs(y0)  <  =  absoluteAccuracy)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(y0)  <  =  absoluteAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(y0)  <  =  absoluteAccuracy)  {	  if    (Math.abs(x1)    <    =    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  int  result  =  Math.min(x2,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x2,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x2,  i);	  int    result    =    Math.min(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
90	[BUG]  [BUGGY]  int  result  =  Math.min(i,  x1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(i,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(i,  x1);	  int    result    =    Math.min(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  double  result  =  Math.max(x0,  y0);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(x0,  y0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(x0,  y0);	  double    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  if  (Math.abs(y1)  <  =  y0)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(y1)  <  =  y0)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(y1)  <  =  y0)  {	  if    (Math.abs(y1)    <    =    y2)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
93	[BUG]  [BUGGY]  if  (Math.abs(y0)  <  =  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(y0)  <  =  Math.abs(y2))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(y0)  <  =  Math.abs(y2))  {	  if    (Math.abs(y1)    <    =    y2)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
94	[BUG]  [BUGGY]  int  result  =  Math.min(x0,  y1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x0,  y1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x0,  y1);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
95	[BUG]  [BUGGY]  int  result  =  Math.min(x0,  y2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x0,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x0,  y2);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
96	[BUG]  [BUGGY]  int  result  =  Math.min(result,  y0);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  y0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  y0);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
97	[BUG]  [BUGGY]  int  result  =  Math.max(x0,  x2);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(x0,  x2);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(x0,  x2);  setResult(x1,  i);	  int    result    =    Math.max(result,    x0);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
98	[BUG]  [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(y2)  <  Math.abs(y1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(y2)  <  Math.abs(y1))  {	  if    (Math.abs(y1)    <    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
99	[BUG]  [BUGGY]  if(i  <  maximumIterationCount)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(i  <  maximumIterationCount)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(i  <  maximumIterationCount)  {  setResult(x0,  i);  return  result;  }	  if(i    <    maximalIterationCount)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
100	[BUG]  [BUGGY]  double  result  =  Math.max(x0,  x1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(x0,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(x0,  x1);	  double    result    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
101	[BUG]  [BUGGY]  double  result  =  Math.min(x1,  x2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(x1,  x2);	  double    result    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
102	[BUG]  [BUGGY]  result  =  Math.max(result,  x2);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x2);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x2);  setResult(x1,  i);	  result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
103	[BUG]  [BUGGY]  result  =  Math.min(result,  x1);  setResult(x1,  y2);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  x1);  setResult(x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  x1);  setResult(x1,  y2);	  result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
104	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x2,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x2,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x2,  i);	  double    result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
105	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x1,  x2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x1,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x1,  x2);	  int    result    =    Math.min(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
106	[BUG]  [BUGGY]  int  result  =  Math.max(x0,  y0);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.max(x0,  y0);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.max(x0,  y0);	  int    result    =    Math.max(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
107	[BUG]  [BUGGY]  double  result  =  Math.min(x1,  x1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.min(x1,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.min(x1,  x1);	  double    result    =    Math.min(result,    x1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
108	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x1);  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x1);  setResult(x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x1);  setResult(x0,  i);	  double    result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
109	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x1);  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x1);  setResult(x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x1);  setResult(x0,  i);	  int    result    =    Math.min(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
110	[BUG]  [BUGGY]  int  result  =  Math.min(result,  y0);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  y0);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  y0);  setResult(x1,  i);	  int    result    =    Math.min(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
111	[BUG]  [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	  i    =    Math.min(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
112	[BUG]  [BUGGY]  int  result  =  Math.min(x1,  x1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x1,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x1,  x1);	  int    result    =    Math.min(result,    x1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
113	[BUG]  [BUGGY]  int  result  =  Math.min(x1,  x2);  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(x1,  x2);  setResult(x1,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(x1,  x2);  setResult(x1,  i);	  int    result    =    Math.min(result,    x2);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
114	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x2);  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x2);  setResult(x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x2);  setResult(x0,  i);	  int    result    =    Math.min(result,    x2);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
115	[BUG]  [BUGGY]  setResult(x0,  y2);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x0,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x0,  y2);	  setResult(x1,    y2);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
116	[BUG]  [BUGGY]  setResult(x0,  x2);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x0,  x2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x0,  x2);	  setResult(x1,    y2);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
117	[BUG]  [BUGGY]  setResult(x0,  x1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  setResult(x0,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	setResult(x0,  x1);	  setResult(x1,    y1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
118	[BUG]  [BUGGY]  result  =  Math.min(result,  y2);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  y2);	  result    =    Math.min(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  if  (Math.abs(y2)  <  absoluteAccuracy)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if  (Math.abs(y2)  <  absoluteAccuracy)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if  (Math.abs(y2)  <  absoluteAccuracy)  {	  if    (Math.abs(y2)    <    =    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
120	[BUG]  [BUGGY]  result  =  Math.max(result,  i);  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  i);  setResult(x0,  i);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  i);  setResult(x0,  i);	  result    =    Math.max(result,    x1);    setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
121	[BUG]  [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);	  i    =    Math.max(relativeAccuracy    *    Math.abs(y2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
122	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x1)||  Math.abs(y2)  <  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy))  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x1)||  Math.abs(y2)  <  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x1)||  Math.abs(y2)  <  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
123	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x1)||  Math.abs(y2)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x1)||  Math.abs(y2)  <  =  Math.abs(y1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  functionValueAccuracy  *  Math.abs(x1)||  Math.abs(y2)  <  =  Math.abs(y1))  {	  if(Math.abs(dx)    <    =    functionValueAccuracy    *    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
124	[BUG]  [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.min(relativeAccuracy  *  Math.abs(x2,  absoluteAccuracy),  absoluteAccuracy);	  i    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  while(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  while(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	while(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }	  if(i    <    maximalIterationCount)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
126	[BUG]  [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  i  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	i  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);	  i    =    Math.min(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
127	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1))  {	  if    (Math.abs(y1)    <    =    y2)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
128	[BUG]  [BUGGY]  int  result  =  Math.min(result,  i,  x1);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  i,  x1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  i,  x1);	  int    result    =    Math.min(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
129	[BUG]  [BUGGY]  result  =  Math.max(result,  x1,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.max(result,  x1,  i  +  1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.max(result,  x1,  i  +  1);	  result    =    Math.max(result,    x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
130	[BUG]  [BUGGY]  double  result  =  Math.max(result,  x1);  setResult(x1,  y2);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  double  result  =  Math.max(result,  x1);  setResult(x1,  y2);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	double  result  =  Math.max(result,  x1);  setResult(x1,  y2);	  double    result    =    Math.max(result,    x1);    setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
131	[BUG]  [BUGGY]  int  result  =  Math.min(result,  x0  -  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  int  result  =  Math.min(result,  x0  -  1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	int  result  =  Math.min(result,  x0  -  1);	  int    result    =    Math.min(result,    x0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
132	[BUG]  [BUGGY]  result  =  Math.min(result,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  result  =  Math.min(result,  i  +  1);  [BUGGY]      if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	result  =  Math.min(result,  i  +  1);	  result    =    Math.min(result,    i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
133	[BUG]  [BUGGY]  if(Math.abs(dx)  <  =  tolerance)  {  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }      [BUGGY]  if(Math.abs(dx)  <  =  tolerance)  {  [BUGGY]          setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	189	189	1	replace	if(Math.abs(dx)  <  =  tolerance)  {	  if    (Math.abs(dx)    <    =    absoluteAccuracy)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
