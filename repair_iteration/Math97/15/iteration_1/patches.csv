bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y2;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(i  <  maximalIterationCount)  {  y1  =  y2;  y2  =  y0;  }	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y1  =  y1;  y2  =  y0;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y1  =  y1;  y2  =  y0;	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y2  =  y1;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y2  =  y1;	      y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  y2  =  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y2  =  y0  +  1;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y2  =  y0  +  1;	      y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  y2  =  y3;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y2  =  y3;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y2  =  y3;	      y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y1)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y1)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(oldDelta)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(oldDelta)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(oldDelta)  <  tolerance)  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(oldDelta)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  y1  =  y0  +  1;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y1  =  y0  +  1;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y1  =  y0  +  1;	  y1    =    y2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  y1  =  y2  /  1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y1  =  y2  /  1;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y1  =  y2  /  1;	  y1    =    y2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  tolerance)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y0)  <  =  tolerance)  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y0)  <  =  tolerance)  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  double  y1  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y1  =  oldDelta;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y1  =  oldDelta;	      double    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  double  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y1  =  y2;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y1  =  y2;	      double    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  double  y1  =  y1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y1  =  y1;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y1  =  y1;	      double    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y0;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y0;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(i  <  maximalIterationCount)  {  y1  =  y0;  y2  =  y0;  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y0;  y2  =  y0;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y0;  y2  =  y0;  }  else  {  setResult(x1,  i);  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(i  <  maximalIterationCount)  {  y1  =  y0;  y2  =  y0;  }  else  {  setResult(x1,  i);  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y0)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y0)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  y1  =  y;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y1  =  y;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y1  =  y;	  y1    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  double  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y2  =  y0;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y2  =  y0;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  double  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y2  =  y1;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y2  =  y1;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  if(Math.abs(y2)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(oldDelta)  <  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(oldDelta)  <  tolerance)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(oldDelta)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(oldDelta)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(oldDelta)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y2  =  oldDelta;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y2  =  oldDelta;	      y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  if(Math.abs(y1)>  tolerance)  {  y1  =  y0;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)>  tolerance)  {  y1  =  y0;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)>  tolerance)  {  y1  =  y0;  y2  =  y0;  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  y1  =  y2  -  1;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y1  =  y2  -  1;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y1  =  y2  -  1;	  y1    =    y2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  if(Math.abs(y2)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  setResult(x0,  i);  return  result;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  setResult(x0,  i);  return  result;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	setResult(x0,  i);  return  result;	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y2;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y2;  y2  =  y0;  }	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  if(Math.abs(y1)>  tolerance)  {  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)>  tolerance)  {  y1  =  y2;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)>  tolerance)  {  y1  =  y2;  y2  =  y0;  }	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  y1  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  y1  =  oldDelta;  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	y1  =  oldDelta;	  y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  double  y1  =  y3;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y1  =  y3;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y1  =  y3;	      double    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  setResult(x1,  i);  return  result;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  setResult(x1,  i);  return  result;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	setResult(x1,  i);  return  result;	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(y1  <  =  tolerance)  {  y1  =  y2;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(y1  <  =  tolerance)  {  y1  =  y2;  y2  =  y0;  }	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta);  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta);	      y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  y1  =  y0;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  y1  =  y0;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  y1  =  y0;  y2  =  y0;  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  Math.abs(y1))  {  y1  =  y0;  y2  =  y0;  }	      y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
54	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	      if(Math.abs(y1)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  if(Math.abs(y3)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y3)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y3)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	      if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  }  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  }	  y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]    y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	if(Math.abs(y1)  <  =  tolerance)  {  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  double  y1  =  y0  +  1;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;    [BUGGY]  double  y1  =  y0  +  1;  [BUGGY]    y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  (x2  -  x1);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math97/src/java/org/apache/commons/math/analysis/BrentSolver.java	0.5	186	186	1	replace	double  y1  =  y0  +  1;	      double    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
