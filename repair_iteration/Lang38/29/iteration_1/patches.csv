bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mRules.select(field,  2);  break;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  2);  break;  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  2);  break;	      mRules.select(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  mRules.select(field,  padding  +  1);  break;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding  +  1);  break;  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding  +  1);  break;	      mRules.select(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  mRules.select(field,  padding,  1);  break;  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding,  1);  break;  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding,  1);  break;	      mRules.select(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  degree(field,  padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degree(field,  padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degree(field,  padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  degree(field,  padding)  {  return  new  TwoDigitNumberField(field);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degree(field,  padding)  {  return  new  TwoDigitNumberField(field);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degree(field,  padding)  {  return  new  TwoDigitNumberField(field);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
6	[BUG]  [BUGGY]  degree(field,  padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degree(field,  padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degree(field,  padding  >  0)  {  return  new  TwoDigitNumberField(field);  }	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
7	[BUG]  [BUGGY]  degree(field,  padding)  {  return  new  TwoDigitNumberField(field);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degree(field,  padding)  {  return  new  TwoDigitNumberField(field);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degree(field,  padding)  {  return  new  TwoDigitNumberField(field);  }	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  2);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  2);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  selectNumberRule(field,  2);	      NodeRule    ruleRule    =    selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  NodeRule  ruleRule  =  selectNullRule(field,  padding);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  selectNullRule(field,  padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  selectNullRule(field,  padding);	      NodeRule    ruleRule    =    selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  3);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  3);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  selectNumberRule(field,  3);	      NodeRule    ruleRule    =    selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  padding  +  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  selectNumberRule(field,  padding  +  1);	      NodeRule    ruleRule    =    selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  padding);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  new  NodeRule(field,  padding);	      NodeRule    ruleRule    =    new    NodeRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  3);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  3);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  new  NodeRule(field,  3);	      NodeRule    ruleRule    =    new    NodeRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  new  NodeRule(field,  1);	      NodeRule    ruleRule    =    new    NodeRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(mRules);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(mRules);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  new  NodeRule(mRules);	      NodeRule    ruleRule    =    new    NodeRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  mRules.select(field,  2);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  2);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  2);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  mRules.select(field,  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  1);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  mRules.select(field,  3);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  3);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  3);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  mRules.select(field,  4);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  4);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  4);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i);  }	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    i);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
21	[BUG]  [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i  +  1);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i  +  1);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i  +  1);  }	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    i);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
22	[BUG]  [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  field.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    i);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FilterField  <?>  padding  =  padding  >  0)  {  for(int  i  =  0,  len  =  fields.length();  i  <  len;  ++i)  {  return  new  TwoDigitNumberField(field,  i);  }	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    i);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  FieldUtils.selectField(padding,  field);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.selectField(padding,  field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.selectField(padding,  field);	      FieldUtils.selectField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  FieldUtils.selectField(field,  0);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.selectField(field,  0);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.selectField(field,  0);	      FieldUtils.selectField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  FieldUtils.selectField(field,  3);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.selectField(field,  3);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.selectField(field,  3);	      FieldUtils.selectField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  FieldUtils.selectField(field,  2);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.selectField(field,  2);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.selectField(field,  2);	      FieldUtils.selectField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  return  new  TwoDigitJearField(field,  padding);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitJearField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitJearField(field,  padding);	  return    new    TwoDigitJearField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  return  new  TwoDigitDoubleField(field,  padding);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitDoubleField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitDoubleField(field,  padding);	  return    new    TwoDigitJearField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  return  new  TwoDigitDoubleField(field);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitDoubleField(field);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitDoubleField(field);	  return    new    TwoDigitJearField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  3);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitNumberField(field,  3);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitNumberField(field,  3);	  return    new    TwoDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitNumberField(field,  1);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitNumberField(field,  1);	  return    new    TwoDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  pendingWhile(padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  pendingWhile(padding  >  0)  {  return  new  TwoDigitNumberField(field);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	pendingWhile(padding  >  0)  {  return  new  TwoDigitNumberField(field);  }	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  pendingWhile(padding  >  0)  {  return  new  TwoDigitNumberField(field,  padding);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  pendingWhile(padding  >  0)  {  return  new  TwoDigitNumberField(field,  padding);  }  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	pendingWhile(padding  >  0)  {  return  new  TwoDigitNumberField(field,  padding);  }	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwInternal();	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
37	[BUG]  [BUGGY]  mRules.select(field,  padding  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding  +  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding  +  1);	      mRules.select(field,    padding);    case    3:    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  FieldUtils.select(padding,  field);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.select(padding,  field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.select(padding,  field);	      FieldUtils.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  FieldUtils.select(field,  0);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.select(field,  0);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.select(field,  0);	      FieldUtils.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  FieldUtils.select(field,  3);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.select(field,  3);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.select(field,  3);	      FieldUtils.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  FieldUtils.select(field,  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.select(field,  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.select(field,  1);	      FieldUtils.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  degrees.add(FieldUtils.safeMultiply(field,  padding));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degrees.add(FieldUtils.safeMultiply(field,  padding));  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degrees.add(FieldUtils.safeMultiply(field,  padding));	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
43	[BUG]  [BUGGY]  degrees.add(FieldUtils.safeNumber(field,  padding));  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degrees.add(FieldUtils.safeNumber(field,  padding));  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degrees.add(FieldUtils.safeNumber(field,  padding));	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
44	[BUG]  [BUGGY]  angleField.select(field,  padding);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  angleField.select(field,  padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	angleField.select(field,  padding);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
45	[BUG]  [BUGGY]  degrees.add(FieldUtils.safeMultiply(field));  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  degrees.add(FieldUtils.safeMultiply(field));  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	degrees.add(FieldUtils.safeMultiply(field));	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
46	[BUG]  [BUGGY]  return  new  TwoDigitYearField(field,  padding);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitYearField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitYearField(field,  padding);	  return    new    TwoDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  return  new  TwoDigitYearField(field,  0);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitYearField(field,  0);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitYearField(field,  0);	  return    new    TwoDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  return  new  TwoDigitMonthField(field);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitMonthField(field);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitMonthField(field);	  return    new    TwoDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  return  new  2DigitNumberField(field,  padding);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  2DigitNumberField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  2DigitNumberField(field,  padding);	  return    new    2DigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  return  new  Double(field);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  Double(field);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  Double(field);	  return    new    2DigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  3);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitNumberField(field,  3);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitNumberField(field,  3);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  2);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitNumberField(field,  2);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitNumberField(field,  2);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitNumberField(field,  1);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitNumberField(field,  1);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
54	[BUG]  [BUGGY]  return  new  DoubleDigitNumberField(field,  0);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitNumberField(field,  0);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitNumberField(field,  0);	  return    new    DoubleDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  FieldUtils.setPadding(padding);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.setPadding(padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.setPadding(padding);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
56	[BUG]  [BUGGY]  return  new  DoubleDigitField(field,  padding);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitField(field,  padding);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]  return  new  DoubleDigitNullField(field,  padding);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitNullField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitNullField(field,  padding);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
58	[BUG]  [BUGGY]  return  new  TwoDigitShortField(field,  padding);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitShortField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitShortField(field,  padding);	  return    new    TwoDigitShortField(field);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  return  new  TwoDigitLongField(field);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitLongField(field);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitLongField(field);	  return    new    TwoDigitShortField(field);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
60	[BUG]  [BUGGY]  return  new  TwoDigitField(field,  padding);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitField(field,  padding);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitField(field,  padding);	  return    new    TwoDigitShortField(field);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  return  new  TwoDigitYearField(field,  2);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitYearField(field,  2);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitYearField(field,  2);	  return    new    TwoDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  return  new  TwoDigitYearField(field,  3);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitYearField(field,  3);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitYearField(field,  3);	  return    new    TwoDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
63	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnpaddedNumberException( " ");  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwAsUnpaddedNumberException( " ");  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwAsUnpaddedNumberException( " ");	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
64	[BUG]  [BUGGY]  aughtExceptionHandler.throwException( " ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwException( " ");  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwException( " ");	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
65	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsNumberException( " ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwAsNumberException( " ");  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwAsNumberException( " ");	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  return  new  TwoDigitShortField(field,  0);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitShortField(field,  0);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitShortField(field,  0);	  return    new    TwoDigitShortField(field);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  return  new  TwoDigitShortField(field,  2);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitShortField(field,  2);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitShortField(field,  2);	  return    new    TwoDigitShortField(field);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
68	[BUG]  [BUGGY]  mRules.select(field,  3);  break;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  3);  break;  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  3);  break;	      mRules.select(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  mRules.select(field,  1);  break;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  1);  break;  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  1);  break;	      mRules.select(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
70	[BUG]  [BUGGY]  FieldUtils.checkPadding(padding);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.checkPadding(padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.checkPadding(padding);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
71	[BUG]  [BUGGY]  FieldUtils.checkPadding(padding,  field);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.checkPadding(padding,  field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.checkPadding(padding,  field);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
72	[BUG]  [BUGGY]  Integer  i  =  getPosition(field);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  i  =  getPosition(field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  i  =  getPosition(field);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
73	[BUG]  [BUGGY]  int  padding  =  field.length();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  int  padding  =  field.length();  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	int  padding  =  field.length();	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    i);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(new  NumberRule(field,  padding));  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.handleMatcher(new  NumberRule(field,  padding));  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.handleMatcher(new  NumberRule(field,  padding));	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mRule,  field,  padding);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.handleMatcher(mRule,  field,  padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.handleMatcher(mRule,  field,  padding);	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  4);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  new  NodeRule(field,  4);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  new  NodeRule(field,  4);	      NodeRule    ruleRule    =    new    NodeRule(field);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  0);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  0);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  selectNumberRule(field,  0);	      NodeRule    ruleRule    =    selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
78	[BUG]  [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  NodeRule  ruleRule  =  selectNumberRule(field,  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	NodeRule  ruleRule  =  selectNumberRule(field,  1);	      NodeRule    ruleRule    =    selectNumberRule(field,    padding);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
79	[BUG]  [BUGGY]  return  new  2DigitYearField(field);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  2DigitYearField(field);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  2DigitYearField(field);	  return    new    2DigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  return  new  TwoDigitJearField(field,  0);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitJearField(field,  0);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitJearField(field,  0);	  return    new    TwoDigitJearField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  return  new  TwoDigitJearField(field,  2);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitJearField(field,  2);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitJearField(field,  2);	  return    new    TwoDigitJearField(field);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  int  len  =  field.length();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  int  len  =  field.length();  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	int  len  =  field.length();	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
83	[BUG]  [BUGGY]  FieldUtils.select(field,  2);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.select(field,  2);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.select(field,  2);	      FieldUtils.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  return  new  TwoDigitNumberField(field,  4);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitNumberField(field,  4);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitNumberField(field,  4);	  return    new    TwoDigitNumberField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnpaddedIntegerRule(field,  padding);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwAsUnpaddedIntegerRule(field,  padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwAsUnpaddedIntegerRule(field,  padding);	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
86	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwUnquotedException( " ");	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
87	[BUG]  [BUGGY]  Integer  padding  =  field.get(padding);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  field.get(padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  field.get(padding);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
88	[BUG]  [BUGGY]  Integer  padding  =  getPosition(field.length()  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  getPosition(field.length()  -  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  getPosition(field.length()  -  1);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
89	[BUG]  [BUGGY]  Integer  padding  =  getPattern();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  getPattern();  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  getPattern();	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
90	[BUG]  [BUGGY]  Integer  padding  =  getPosition(field);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  getPosition(field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  getPosition(field);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    padding);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
91	[BUG]  [BUGGY]  mRules.select(field,  padding,  2);  break;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding,  2);  break;  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding,  2);  break;	      mRules.select(field,    padding);    break;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
92	[BUG]  [BUGGY]  mRules.select(field,  padding,  true);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding,  true);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding,  true);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
93	[BUG]  [BUGGY]  mRules.select(field,  padding,  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding,  1);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding,  1);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
94	[BUG]  [BUGGY]  mRules.select(field,  padding,  false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  mRules.select(field,  padding,  false);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	mRules.select(field,  padding,  false);	      mRules.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
95	[BUG]  [BUGGY]  return  new  DoubleDigitYearField(field);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  DoubleDigitYearField(field);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  DoubleDigitYearField(field);	  return    new    DoubleDigitNumberField(field);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
96	[BUG]  [BUGGY]  FieldUtils.selectField(this,  field);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.selectField(this,  field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.selectField(this,  field);	      FieldUtils.selectField(field,    padding);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
97	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(field);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  mRules.get(field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  mRules.get(field);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
98	[BUG]  [BUGGY]  Integer  padding  =  getPadding(field);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  getPadding(field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  getPadding(field);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
99	[BUG]  [BUGGY]  FieldUtils.select(field,  padding,  0);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  FieldUtils.select(field,  padding,  0);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	FieldUtils.select(field,  padding,  0);	      FieldUtils.select(field,    padding);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
100	[BUG]  [BUGGY]  Integer  padding  =  mRules.get(padding);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  Integer  padding  =  mRules.get(padding);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	Integer  padding  =  mRules.get(padding);	      if(padding    >    0)    {    for(int    i    =    0,    len    =    field.length();    i    <    len;    ++i)    {    return    new    TwoDigitNumberField(field,    i);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
101	[BUG]  [BUGGY]  return  new  TwoDigitYearField(field,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  return  new  TwoDigitYearField(field,  mMaxLengthEstimate);  [BUGGY]    default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	return  new  TwoDigitYearField(field,  mMaxLengthEstimate);	  return    new    TwoDigitYearField(field);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
102	[BUG]  [BUGGY]  aughtException.printStackTrace();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtException.printStackTrace();  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtException.printStackTrace();	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
103	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnpaddedIntegerRule(field);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    protected  NumberRule  selectNumberRule(int  field,  int  padding)  {  switch  (padding)  {  case  1:  return  new  UnpaddedNumberField(field);  case  2:    [BUGGY]  aughtExceptionHandler.throwAsUnpaddedIntegerRule(field);  [BUGGY]    return  new  TwoDigitNumberField(field);  default:  return  new  PaddedNumberField(field,  padding);  }  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  selectNumberRule  [RETURN_TYPE]  FastDateFormat$NumberRule  int  field  int  padding  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  padding  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2886751345948129	771	771	1	replace	aughtExceptionHandler.throwAsUnpaddedIntegerRule(field);	      if(padding    >    0)    {    return    new    TwoDigitNumberField(field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
