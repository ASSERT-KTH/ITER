bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mDaylight);	  this(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
2	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mPattern);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mPattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mPattern);	  this(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
3	[BUG]  [BUGGY]  mRule  =(pattern  ==  null)?  Locale.getDefault()  :  null;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(pattern  ==  null)?  Locale.getDefault()  :  null;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(pattern  ==  null)?  Locale.getDefault()  :  null;	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
4	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(this.timeZone,  pattern,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(this.timeZone,  pattern,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(this.timeZone,  pattern,  locale);	  this.mRule    =    Pattern.compile(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]  super(pattern,  TimeZone.getDefault(),  timeZone);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  TimeZone.getDefault(),  timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  TimeZone.getDefault(),  timeZone);	  super(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  super(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  TimeZone.getDefault(),  timeZone,  locale);	  super(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  Locale  locale  =  locale.toLowerCase();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale.toLowerCase();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale.toLowerCase();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
8	[BUG]  [BUGGY]  Locale  locale  =  locale.toLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale.toLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale.toLocale();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  +  1];  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  +  1];  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Locale.getDefault()  +  1];	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  pattern;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  pattern;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Locale.getDefault()  ],  pattern;	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  pattern);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  pattern);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Locale.getDefault()  ],  pattern);	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  mLocale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  locale,  mLocale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
15	[BUG]  [BUGGY]  this(pattern,  TimeZone.getDefault(),  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  TimeZone.getDefault(),  timeZone,  locale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  TimeZone.getDefault(),  timeZone,  locale,  false);	  this(pattern,    TimeZone.getDefault(),    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
16	[BUG]  [BUGGY]  this(pattern,  TimeZone.getDefault(),  timeZone,  locale,  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  TimeZone.getDefault(),  timeZone,  locale,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  TimeZone.getDefault(),  timeZone,  locale,  null);	  this(pattern,    TimeZone.getDefault(),    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
17	[BUG]  [BUGGY]  this(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  null,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  null,  false);	  this(pattern,    timeZone,    locale,    true);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
18	[BUG]  [BUGGY]  this(pattern,  timeZone,  null,  true);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  null,  true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  null,  true);	  this(pattern,    timeZone,    locale,    true);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
19	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale)/  1;	  mRule    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
20	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  2;	  mRule    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
21	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getDefault(),  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getDefault(),  locale);	  mPattern    =    Pattern.compile(pattern,    timeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
22	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  locale,  mLocale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  locale,  mLocale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
23	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  null,  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  null,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  null,  null);	  this(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
24	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  null,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  null,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  null,  false);	  this(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
25	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getValue(),  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getValue(),  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getValue(),  locale);	  mPattern    =    Pattern.compile(pattern,    timeZone.getValue());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
29	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getValue()  +  1);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getValue()  +  1);	  mPattern    =    Pattern.compile(pattern,    timeZone.getValue());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
30	[BUG]  [BUGGY]  ||  pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  ||  pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	||  pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }	  if(pattern    ==    null)    {    mPattern    =    Pattern.compile(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
31	[BUG]  [BUGGY]  pattern  =  Pattern.compile(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  pattern  =  Pattern.compile(pattern,  timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	pattern  =  Pattern.compile(pattern,  timeZone);	  if(pattern    ==    null)    {    mPattern    =    Pattern.compile(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
32	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getLocale(),  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getLocale(),  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getLocale(),  locale);	  mPattern    =    Pattern.compile(pattern,    timeZone.getLocale());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
33	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getMillis());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getMillis());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getMillis());	  mPattern    =    Pattern.compile(pattern,    timeZone.getLocale());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
34	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getParent());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getParent());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getParent());	  mPattern    =    Pattern.compile(pattern,    timeZone.getLocale());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
35	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  false,  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  false,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  false,  null);	  this(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
36	[BUG]  [BUGGY]  super(mPattern,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(mPattern,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(mPattern,  locale);	  super(mPattern);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)/  1;	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
38	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  2;	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
39	[BUG]  [BUGGY]  this(pattern,  timeZone.getType(),  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getType(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getType(),  locale);	  this(pattern,    TimeZone.getDefault(),    timeZone);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
40	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toUpperCase();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toUpperCase();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toUpperCase();	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
41	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toLowerCase(Locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toLowerCase(Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toLowerCase(Locale.getDefault());	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
42	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toString();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toString();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toString();	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
43	[BUG]  [BUGGY]  mRule  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(locale  ==  null)?  Locale.getDefault()  :  locale;	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
44	[BUG]  [BUGGY]  mRule  =(timeZone!=  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(timeZone!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(timeZone!=  null)?  Locale.getDefault()  :  locale;	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
45	[BUG]  [BUGGY]  mRule  =(pattern  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(pattern  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(pattern  ==  null)?  Locale.getDefault()  :  locale;	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
46	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  null,  locale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
47	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());	  this.mRule    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
48	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale.getDefault());	  mRule    =    Pattern.compile(pattern,    timeZone,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
49	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale).getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale).getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale).getDefault();	  mRule    =    Pattern.compile(pattern,    timeZone,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
50	[BUG]  [BUGGY]  this(pattern,  timeZone.getValue(),  locale,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getValue(),  locale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getValue(),  locale,  false);	  this(pattern,    timeZone.getValue(),    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
51	[BUG]  [BUGGY]  this(pattern,  timeZone.getValue(),  locale,  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getValue(),  locale,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getValue(),  locale,  null);	  this(pattern,    timeZone.getValue(),    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  this(pattern,  timeZone.getValue(),  locale,  true);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getValue(),  locale,  true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getValue(),  locale,  true);	  this(pattern,    timeZone.getValue(),    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  this(pattern,  timeZone.getKey(),  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getKey(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getKey(),  locale);	  this(pattern,    timeZone.getValue(),    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  mTimeZoneForced);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  mTimeZoneForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
55	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  mTimeZoneForced);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  locale,  mTimeZoneForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
56	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  this);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  this);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  this);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
57	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
58	[BUG]  [BUGGY]  super(pattern,  timeZone.getValue(),  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getValue(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getValue(),  locale);	  super(pattern,    timeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
59	[BUG]  [BUGGY]  super(pattern,  timeZone.getType(),  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getType(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getType(),  locale);	  super(pattern,    timeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
60	[BUG]  [BUGGY]  super(pattern,  timeZone.getLocale(),  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getLocale(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getLocale(),  locale);	  super(pattern,    timeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
61	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mMaxLengthEstimate,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mMaxLengthEstimate,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mMaxLengthEstimate,  locale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    mStyle,    locale);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
62	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mSize,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mSize,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mSize,  locale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    mStyle,    locale);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
63	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
64	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  locale;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  locale;	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
65	[BUG]  [BUGGY]  super(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone,  locale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone,  locale,  false);	  super(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  super(pattern,  timeZone,  locale,  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone,  locale,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone,  locale,  null);	  super(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  super(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone,  locale,  true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone,  locale,  true);	  super(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  mRule  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getDefault();	  mRule    =(timeZone!=    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
69	[BUG]  [BUGGY]  mRule  =(pattern  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(pattern  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(pattern  ==  null)?  Locale.getDefault()  :  Locale.getDefault();	  mRule    =(timeZone!=    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
70	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale).withLocale();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale).withLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale).withLocale();	  mRule    =    Pattern.compile(pattern,    timeZone,    locale).withUTC();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
71	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  null).withUTC();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  null).withUTC();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  null).withUTC();	  mRule    =    Pattern.compile(pattern,    timeZone,    locale).withUTC();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
72	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale).withLong();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale).withLong();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale).withLong();	  mRule    =    Pattern.compile(pattern,    timeZone,    locale).withUTC();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
73	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class,  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class,  locale);	  this.mRule    =    Pattern.compile(pattern,    TimeZoneNameRule.class);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
74	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNumberRule.class);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNumberRule.class);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  TimeZoneNumberRule.class);	  this.mRule    =    Pattern.compile(pattern,    TimeZoneNameRule.class);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
75	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.SHORT);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.SHORT);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.SHORT);	  this.mRule    =    Pattern.compile(pattern,    TimeZoneNameRule.class);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  super(timeZone);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(timeZone);	  super(locale);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStandard,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStandard,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStandard,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  this(pattern,  timeZone.getType(),  locale,  true);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getType(),  locale,  true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getType(),  locale,  true);	  this(pattern,    timeZone.getDefault(),    locale,    true);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
81	[BUG]  [BUGGY]  this(pattern,  timeZone.getType(),  locale,  null);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getType(),  locale,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getType(),  locale,  null);	  this(pattern,    timeZone.getDefault(),    locale,    null);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
82	[BUG]  [BUGGY]  this(pattern,  timeZone.getDefault(),  locale,  null,  false);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getDefault(),  locale,  null,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getDefault(),  locale,  null,  false);	  this(pattern,    timeZone.getDefault(),    locale,    null);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
83	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale,  true);	  mRule    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
84	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  null,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  null,  false);	  mRule    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
85	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  true,  false);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  true,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  true,  false);	  mRule    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone);	  mPattern    =    Pattern.compile(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
87	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone,  locale);	  mPattern    =    Pattern.compile(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
88	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);	  Locale    locale    =(locale    ==    null?    Locale.getDefault()    :    locale);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
89	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
90	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
91	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
92	[BUG]  [BUGGY]  mRule  =(timeZone  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(timeZone  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(timeZone  ==  null)?  Locale.getDefault()  :  Locale.getLocale();	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
93	[BUG]  [BUGGY]  this(pattern,  timeZone.getLocale(),  locale,  false);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getLocale(),  locale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getLocale(),  locale,  false);	  this(pattern,    timeZone.getDefault(),    locale,    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
94	[BUG]  [BUGGY]  this(pattern,  timeZone.getType(),  locale,  false);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getType(),  locale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getType(),  locale,  false);	  this(pattern,    timeZone.getDefault(),    locale,    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
95	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
96	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
97	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
98	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mColon);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mColon);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mColon);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
99	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
100	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
101	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
102	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
103	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  getLocale()  :  locale;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  getLocale()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale  ==  null)?  getLocale()  :  locale;	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
104	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  locale.getLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  locale.getLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale  ==  null)?  null  :  locale.getLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
105	[BUG]  [BUGGY]  Locale  locale  =  getDefaultLocale();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  getDefaultLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  getDefaultLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
106	[BUG]  [BUGGY]  super(mValue,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(mValue,  timeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(mValue,  timeZone,  locale);	  super(mValue,    locale);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
107	[BUG]  [BUGGY]  mRule  =  pattern.get();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  pattern.get();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  pattern.get();	  mRule    =    locale.get();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
108	[BUG]  [BUGGY]  mRule  =  new  NumberRule(pattern,  timeZone.get());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  new  NumberRule(pattern,  timeZone.get());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  new  NumberRule(pattern,  timeZone.get());	  mRule    =    locale.get();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
109	[BUG]  [BUGGY]  mRule  =  timeZone.get();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  timeZone.get();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  timeZone.get();	  mRule    =    locale.get();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
110	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
111	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
112	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
113	[BUG]  [BUGGY]  mRules  =  pattern.getDefault();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  pattern.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  pattern.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
114	[BUG]  [BUGGY]  mRules  =  pattern.get();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  pattern.get();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  pattern.get();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
115	[BUG]  [BUGGY]  mRules  =  locale.get();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  locale.get();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  locale.get();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
116	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
117	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
118	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
119	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  locale,  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  locale,  null);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  locale,  null);	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
120	[BUG]  [BUGGY]  mRule  =  pattern.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  pattern.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  pattern.getDefault();	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
121	[BUG]  [BUGGY]  mRule  =  pattern.getValue();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  pattern.getValue();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  pattern.getValue();	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
122	[BUG]  [BUGGY]  mRule  =  pattern.get(locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  pattern.get(locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  pattern.get(locale);	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
123	[BUG]  [BUGGY]  Locale  locale  =  locale.getDefaultLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale.getDefaultLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale.getDefaultLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
124	[BUG]  [BUGGY]  Locale  locale  =  pattern.getLocale();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  pattern.getLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  pattern.getLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
125	[BUG]  [BUGGY]  super(pattern,  timeZone.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getDefault());	  super(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
126	[BUG]  [BUGGY]  super(pattern,  timeZone.getLocale());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getLocale());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getLocale());	  super(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
127	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  null,  false);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
128	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  true,  false);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
129	[BUG]  [BUGGY]  mRules  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =(locale  ==  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
130	[BUG]  [BUGGY]  mRules  =(timeZone  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =(timeZone  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =(timeZone  ==  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
131	[BUG]  [BUGGY]  mRules  =(pattern  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =(pattern  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =(pattern  ==  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
132	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNameRule.getInstance();	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
133	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNameRule.getInstance(locale);	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
134	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.get();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNameRule.get();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNameRule.get();	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
135	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mColon);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mColon);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mColon);	  this(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
136	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mValue);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mValue);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mValue);	  this(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
137	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern),  locale.getDefault());	  mRules    =    new    Rule[Long.parseLong(pattern),    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	58	None	replace
138	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale,  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern),  locale,  Locale.getDefault());	  mRules    =    new    Rule[Long.parseLong(pattern),    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	58	None	replace
139	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1],  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1],  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern)+  1],  Locale.getDefault());	  mRules    =    new    Rule[Long.parseLong(pattern),    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	58	None	replace
140	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  null,  locale);	  mRule    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
141	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
142	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
143	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1];  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1];  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern)+  1];	  mRules    =    new    Rule[Long.parseLong(pattern)];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
144	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern),  locale);	  mRules    =    new    Rule[Long.parseLong(pattern)];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
145	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)],  locale;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)],  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern)],  locale;	  mRules    =    new    Rule[Long.parseLong(pattern)];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
146	[BUG]  [BUGGY]  mRules  =(rule!=  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =(rule!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =(rule!=  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
147	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1,  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Long.parseLong(pattern)+  1,  Locale.getDefault());	  mRules    =    new    Rule[Long.parseLong(pattern),    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	58	None	replace
148	[BUG]  [BUGGY]  mRule  =  timeZone.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  timeZone.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  timeZone.getDefault();	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  mRule  =  locale!=  null?  null  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  locale!=  null?  null  :  locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  locale!=  null?  null  :  locale.getDefault();	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
150	[BUG]  [BUGGY]  mRule  =  locale  ==  null?  null  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  locale  ==  null?  null  :  locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  locale  ==  null?  null  :  locale.getDefault();	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
151	[BUG]  [BUGGY]  mRule  =  TimeZoneNumberRule.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNumberRule.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNumberRule.getDefault();	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
152	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(timeZone);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNameRule.getInstance(timeZone);	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
153	[BUG]  [BUGGY]  super(false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(false);	  super(locale);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
154	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
155	[BUG]  [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
156	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  new  Rule[Locale.getDefault()  ],  locale);	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
157	[BUG]  [BUGGY]  Locale  locale  =  getLocale(timeZone);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  getLocale(timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  getLocale(timeZone);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
158	[BUG]  [BUGGY]  Locale  locale  =  getLocale(locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  getLocale(locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  getLocale(locale);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
159	[BUG]  [BUGGY]  this(pattern,  timeZone.getDefault(),  null,  false);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getDefault(),  null,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getDefault(),  null,  false);	  this(pattern,    timeZone.getDefault(),    locale,    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
160	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
161	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getTime());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getTime());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getTime());	  mPattern    =    Pattern.compile(pattern,    timeZone.getValue());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
162	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  3;	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
163	[BUG]  [BUGGY]  this(pattern,  TimeZone.getDefault(),  locale,  timeZone);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  TimeZone.getDefault(),  locale,  timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  TimeZone.getDefault(),  locale,  timeZone);	  this(pattern,    TimeZone.getDefault(),    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
164	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale)+  3;	  mRule    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
165	[BUG]  [BUGGY]  mRule  =(this.timeZone  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(this.timeZone  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(this.timeZone  ==  null)?  Locale.getDefault()  :  Locale.getDefault();	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
166	[BUG]  [BUGGY]  Locale  locale  =  locale.getRawLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale.getRawLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale.getRawLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
167	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mTimeZoneForced);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mTimeZoneForced);	  this(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
168	[BUG]  [BUGGY]  super(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone,  null,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone,  null,  locale);	  super(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
169	[BUG]  [BUGGY]  super(pattern,  timeZone,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone,  Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone,  Locale.getDefault());	  super(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
170	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class,  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class,  Locale.getDefault());	  mRule    =    Pattern.compile(pattern,    timeZone,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
171	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  locale,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  locale,  Locale.getDefault());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  locale,  Locale.getDefault());	  mRule    =    Pattern.compile(pattern,    timeZone,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
172	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
173	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault()).withUTC();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault()).withUTC();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault()).withUTC();	  mRule    =    Pattern.compile(pattern,    timeZone,    locale).withUTC();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
174	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mPattern,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mPattern,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mPattern,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
175	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
176	[BUG]  [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  MutablePattern  mPattern  =  Pattern.compile(pattern,  timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	MutablePattern  mPattern  =  Pattern.compile(pattern,  timeZone);	  if(pattern    ==    null)    {    mPattern    =    Pattern.compile(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
177	[BUG]  [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }	  if(pattern    ==    null)    {    mPattern    =    Pattern.compile(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
178	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
179	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
180	[BUG]  [BUGGY]  this(pattern,  timeZone.getTime(),  locale,  false);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getTime(),  locale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getTime(),  locale,  false);	  this(pattern,    timeZone.getDefault(),    locale,    true);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
181	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(this.timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(this.timeZone,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(this.timeZone,  locale);	  this.mRule    =    Pattern.compile(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
182	[BUG]  [BUGGY]  mRule  =(locale  ==  null)?  Locale.getDefault()  :  null;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =(locale  ==  null)?  Locale.getDefault()  :  null;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =(locale  ==  null)?  Locale.getDefault()  :  null;	  mRule    =(timeZone    ==    null)?    Locale.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
183	[BUG]  [BUGGY]  super(timeZone,  TimeZone.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(timeZone,  TimeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(timeZone,  TimeZone.getDefault());	  super(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
184	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getID());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getID());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getID());	  mPattern    =    Pattern.compile(pattern,    timeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
185	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this,  pattern,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(this,  pattern,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(this,  pattern,  locale);	  mPattern    =    Pattern.compile(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
186	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  true,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
187	[BUG]  [BUGGY]  this(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  null,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  null,  locale);	  this(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
188	[BUG]  [BUGGY]  super(pattern,  timeZone.getTime(),  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getTime(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getTime(),  locale);	  super(pattern,    timeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
189	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mLocale,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mLocale,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mLocale,  locale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
190	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mStandard);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mStandard);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mStandard);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
191	[BUG]  [BUGGY]  mRules  =  locale!=  null?  null  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  locale!=  null?  null  :  locale.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  locale!=  null?  null  :  locale.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
192	[BUG]  [BUGGY]  mRules  =  timeZone.getDefault();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  timeZone.getDefault();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  timeZone.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
193	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getUpperBound());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getUpperBound());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getUpperBound());	  mPattern    =    Pattern.compile(pattern,    timeZone.getLocale());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
194	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale,  false);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
195	[BUG]  [BUGGY]  mRules  =  pattern.get(locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =  pattern.get(locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =  pattern.get(locale);	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
196	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).append('n');  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).append('n');  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).append('n');	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
197	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZoneForced);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZoneForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
198	[BUG]  [BUGGY]  super(pattern,  timeZone.getID(),  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone.getID(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone.getID(),  locale);	  super(pattern,    timeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
199	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class),  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class),  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class),  locale);	  this.mRule    =    Pattern.compile(pattern,    TimeZoneNameRule.class);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
200	[BUG]  [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  locale);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  locale);  }  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	if(mPattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  locale);  }	  mPattern    =    Pattern.compile(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
201	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getName());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getName());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getName());	  mPattern    =    Pattern.compile(pattern,    timeZone.getValue());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
202	[BUG]  [BUGGY]  this(pattern,  timeZone.getDefault(),  null,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getDefault(),  null,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getDefault(),  null,  locale);	  this(pattern,    timeZone.getDefault(),    locale,    null);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
203	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(pattern);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(pattern);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNameRule.getInstance(pattern);	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
204	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(pattern,  timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  TimeZoneNameRule.getInstance(pattern,  timeZone);	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
205	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mLocaleForced);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mLocaleForced);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mLocaleForced);	  this(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
206	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  0);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  0);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  0);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
207	[BUG]  [BUGGY]  mRules  =(rule  ==  null)?  locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRules  =(rule  ==  null)?  locale.getDefault()  :  locale;  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRules  =(rule  ==  null)?  locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
208	[BUG]  [BUGGY]  super(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  super(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	super(pattern,  timeZone,  locale,  mLocale);	  super(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
209	[BUG]  [BUGGY]  Locale  locale  =  locale.getImplicitReturn();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =  locale.getImplicitReturn();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =  locale.getImplicitReturn();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
210	[BUG]  [BUGGY]  this(pattern,  timeZone,  locale,  mStyle,  mLocale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone,  locale,  mStyle,  mLocale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone,  locale,  mStyle,  mLocale);	  this(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
211	[BUG]  [BUGGY]  this(pattern,  timeZone.getName(),  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this(pattern,  timeZone.getName(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this(pattern,  timeZone.getName(),  locale);	  this(pattern,    timeZone.getValue(),    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
212	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
213	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
214	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  0L  :  getLocale();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Locale  locale  =(locale  ==  null)?  0L  :  getLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Locale  locale  =(locale  ==  null)?  0L  :  getLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
215	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone);	  mRule    =    locale.get();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
216	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  TimeZoneNameRule.class);	  mRule    =    locale.get();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
217	[BUG]  [BUGGY]  mRule  =  pattern.getLocale();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  pattern.getLocale();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  pattern.getLocale();	  mRule    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
218	[BUG]  [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  if(pattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	if(pattern!=  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone);  }	  if(pattern    ==    null)    {    mPattern    =    Pattern.compile(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
219	[BUG]  [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  locale);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  locale);  }  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  locale);  }	  if(pattern    ==    null)    {    mPattern    =    Pattern.compile(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
220	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getPeriod());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getPeriod());  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getPeriod());	  mPattern    =    Pattern.compile(pattern,    timeZone.getLocale());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
221	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocaleForced);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocaleForced);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocaleForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
222	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZoneForced,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZoneForced,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZoneForced,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
223	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
224	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  true);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  true);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  true);	  mRule    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
225	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale),  cDateInstanceCtxt.withUTC();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale),  cDateInstanceCtxt.withUTC();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale),  cDateInstanceCtxt.withUTC();	  mRule    =    Pattern.compile(pattern,    timeZone,    locale).withUTC();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
226	[BUG]  [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale),  cDateInstanceCtxt).withUTC();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  mRule  =  Pattern.compile(pattern,  timeZone,  locale),  cDateInstanceCtxt).withUTC();  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	mRule  =  Pattern.compile(pattern,  timeZone,  locale),  cDateInstanceCtxt).withUTC();	  mRule    =    Pattern.compile(pattern,    timeZone,    locale).withUTC();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
227	[BUG]  [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mMinLengthEstimate,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {      [BUGGY]  this.mRule  =  Pattern.compile(pattern,  timeZone,  mMinLengthEstimate,  locale);  [BUGGY]      super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	535	535	1	replace	this.mRule  =  Pattern.compile(pattern,  timeZone,  mMinLengthEstimate,  locale);	  this.mRule    =    Pattern.compile(pattern,    timeZone,    mStyle,    locale);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
