bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
2	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  &&  c  <  =  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  &&  c  <  =  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  &&  c  <  =  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
3	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  >=  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  >=  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  >=  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
4	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  1,  length  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i  +  1,  length  +  1);  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i  +  1,  length  +  1);	  c    =    pattern.charAt(i    +    1,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  1,  length  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i  +  1,  length  -  1);  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i  +  1,  length  -  1);	  c    =    pattern.charAt(i    +    1,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  1,  indexRef);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i  +  1,  indexRef);  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i  +  1,  indexRef);	  c    =    pattern.charAt(i    +    1,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  1,  len);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i  +  1,  len);  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i  +  1,  len);	  c    =    pattern.charAt(i    +    1,    length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  if(c  >=  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  >=  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  >=  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    break;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)!=    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
10	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)!=    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    break;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  break;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    break;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(c!=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  }  else  {  inLiteral  =  false;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c!=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  }  else  {  inLiteral  =  false;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c!=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  }  else  {  inLiteral  =  false;  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(''');    }    else    {    inLiteral    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i++  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i++  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i++  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  >=  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  >=  'a'  &&  c  <  =  'z')  {  [BUGGY]        i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  >=  'a'  &&  c  <  =  'z')  {	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    'a'    &&    c    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {  [BUGGY]        i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    'a'    &&    c    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  if(i  +  1  <  length  ||  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  ||  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {  [BUGGY]        i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  ||  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    'a'    &&    c    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(''');    break;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    else    {    inLiteral    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)!=  ''')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)!=  ''')  {  [BUGGY]        i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)!=  ''')  {	  if(i    +    1    <    length    ||    pattern.charAt(i    +    1)!=    ''')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  if(c  >=  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  >=  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  >=  ''')  {  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  false;  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  false;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  false;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    else    {    inLiteral    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(c  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  '''  ||  c  ==  'a'  &&  c  <  =  'z')  {	  if(c    ==    ''')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
24	[BUG]  [BUGGY]  if(c  ==  '''  ||  c  ==  ''')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  '''  ||  c  ==  ''')  {  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  '''  ||  c  ==  ''')  {	  if(c    ==    ''')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
25	[BUG]  [BUGGY]  if(c  ==  '''  ||  c  ==  'A'  &&  c  <  =  'Z')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  '''  ||  c  ==  'A'  &&  c  <  =  'Z')  {  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  '''  ||  c  ==  'A'  &&  c  <  =  'Z')  {	  if(c    ==    ''')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
26	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append('-');  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append('-');  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append('-');  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append('-');    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  c  =  pattern.charAt(i++)+  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i++)+  1;  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i++)+  1;	  c    =    pattern.charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  2)  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  2)  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  2)  ==  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    2)    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    else    {    inLiteral    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  >=  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  else  {  inLiteral  =  true;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    else    {    inLiteral    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  else  {  inLiteral  =  false;  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  else  {  inLiteral  =  false;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  else  {  inLiteral  =  false;  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    else    {    inLiteral    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(''');  break;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(''');  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(''');  break;  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(''');    break;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  &&  c  <  =  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  &&  c  <  =  'a'  &&  c  <  =  'z')  {  [BUGGY]        i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  &&  c  <  =  'a'  &&  c  <  =  'z')  {	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    '''    ||    c    ==    'a'    &&    c    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
34	[BUG]  [BUGGY]  if(c  ==  '''  &&  c  <  =  'Z'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  '''  &&  c  <  =  'Z'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  '''  &&  c  <  =  'Z'  ||  c  >=  'a'  &&  c  <  =  'z')  {	  if(c    ==    ''')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
35	[BUG]  [BUGGY]  if(!inLiteral  &&(c  >=  '''  ||  c  ==  'a'  &&  c  <  =  'z'))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(!inLiteral  &&(c  >=  '''  ||  c  ==  'a'  &&  c  <  =  'z'))  {  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(!inLiteral  &&(c  >=  '''  ||  c  ==  'a'  &&  c  <  =  'z'))  {	  if(c    ==    ''')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
36	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  break;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  break;  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    break;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
37	[BUG]  [BUGGY]  if(c!=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c!=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c!=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  2)  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  >=  length  &&  pattern.charAt(i  +  2)  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  >=  length  &&  pattern.charAt(i  +  2)  ==  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    2)    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  c  =  pattern.charAt(i++  +  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i++  +  1);  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i++  +  1);	  c    =    pattern.charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  if(i  >  0)  {  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  >  0)  {  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  >  0)  {  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(''');    break;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  if(i  >  0)  {  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  >  0)  {  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  >  0)  {  if(c  ==  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(''');  break;  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(''');    break;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  if(i  +  1  <  length  ||  pattern.charAt(i  +  1)  ==  ''')  {  buf.append('-');  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  ||  pattern.charAt(i  +  1)  ==  ''')  {  buf.append('-');  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  ||  pattern.charAt(i  +  1)  ==  ''')  {  buf.append('-');  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append('-');    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  c  =  pattern.charAt(i  +  1,  c);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  c  =  pattern.charAt(i  +  1,  c);  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	c  =  pattern.charAt(i  +  1,  c);	  c    =    pattern.charAt(i    +    2);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  ''')  {  buf.append(c);  break;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  ''')  {  buf.append(c);  break;  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '''  ||  c  ==  ''')  {  buf.append(c);  break;  }	  if(i    +    1    >=    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    break;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  >=  ''')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append(c);  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  if(i  +  1  <  length  ||  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(i  +  1  <  length  ||  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(i  +  1  <  length  ||  pattern.charAt(i  +  1)!=  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)!=    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
47	[BUG]  [BUGGY]  if(c  >=  ''')  {  buf.append(c);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  >=  ''')  {  buf.append(c);  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  >=  ''')  {  buf.append(c);  }	  if(i    +    1    <    length    &&    pattern.charAt(i    +    1)!=    ''')    {    buf.append(c);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  if(c  ==  '''  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  '''  &&  c  <  =  'z')  {  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  '''  &&  c  <  =  'z')  {	  if(c    ==    ''')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  if(c  ==  '-')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append('-');  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      }  else  {  buf.append('\'');  boolean  inLiteral  =  false;  for  (;  i  <  length;  i++)  {  c  =  pattern.charAt(i);  if  (c  ==  '\'')  {      [BUGGY]  if(c  ==  '-')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append('-');  }  [BUGGY]      if  (i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  '\'')  {  i++;  buf.append(c);  }  else  {  inLiteral  =  !inLiteral;  }  }  else  if  (!inLiteral  &&  (c  >=  'A'  &&  c  <=  'Z'  ||  c  >=  'a'  &&  c  <=  'z'))  {  i--;  break;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parseToken  [RETURN_TYPE]  String  String  pattern  int[]  indexRef  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  StringBuilder  buf  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  inLiteral  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  peek  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	738	738	1	replace	if(c  ==  '-')  {  if(i  +  1  <  length  &&  pattern.charAt(i  +  1)  ==  ''')  {  buf.append('-');  }	  if(c    ==    ''')    {    if(i    +    1    <    length    &&    pattern.charAt(i    +    1)    ==    ''')    {    buf.append('-');    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
