bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (timeZone!=  null)  {  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]  if  (timeZone!=  null)  {  [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	if  (timeZone!=  null)  {	if  (timeZone  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	69	None	replace
2	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    [BUGGY]  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	  	if  (timeZone  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	69	None	replace
3	[BUG]  [BUGGY]    mTimeZoneForced  =(timeZone!=  null);  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mTimeZoneForced  =(timeZone!=  null);  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mTimeZoneForced  =(timeZone!=  null);		non-compiled	[CE]  <identifier>  expected	70	None	add
4	[BUG]  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null);  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null);  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mTimeZoneForced  =(timeZone  ==  null);		non-compiled	[CE]  <identifier>  expected	70	None	add
5	[BUG]  [BUGGY]    Locale  locale  =  Locale.getDefault();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    Locale  locale  =  Locale.getDefault();  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    Locale  locale  =  Locale.getDefault();		non-compiled	[CE]  <identifier>  expected	70	None	add
6	[BUG]  [BUGGY]    mStandard  =  Pattern.compile(mPattern);  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mStandard  =  Pattern.compile(mPattern);  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mStandard  =  Pattern.compile(mPattern);		non-compiled	[CE]  <identifier>  expected	70	None	add
7	[BUG]  [BUGGY]    mTimeZoneForced  =  TimeZone.getDefault();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mTimeZoneForced  =  TimeZone.getDefault();  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mTimeZoneForced  =  TimeZone.getDefault();		non-compiled	[CE]  <identifier>  expected	70	None	add
8	[BUG]  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null)?  null  :  timeZone.getDefault();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null)?  null  :  timeZone.getDefault();  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mTimeZoneForced  =(timeZone  ==  null)?  null  :  timeZone.getDefault();		non-compiled	[CE]  <identifier>  expected	70	None	add
9	[BUG]  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null)?  null  :  TimeZone.getDefault();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mTimeZoneForced  =(timeZone  ==  null)?  null  :  TimeZone.getDefault();  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mTimeZoneForced  =(timeZone  ==  null)?  null  :  TimeZone.getDefault();		non-compiled	[CE]  <identifier>  expected	70	None	add
10	[BUG]  [BUGGY]    mPattern  =  pattern.toLowerCase();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mPattern  =  pattern.toLowerCase();  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mPattern  =  pattern.toLowerCase();		non-compiled	[CE]  <identifier>  expected	70	None	add
11	[BUG]  [BUGGY]    mPattern  =  pattern.toString();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mPattern  =  pattern.toString();  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mPattern  =  pattern.toString();		non-compiled	[CE]  <identifier>  expected	70	None	add
12	[BUG]  [BUGGY]    mPattern  =  Pattern.compile(mPattern);  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();  if  (pattern  ==  null)  {  throw  new  IllegalArgumentException( "The  pattern  must  not  be  null ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  [BUGGY]    mPattern  =  Pattern.compile(mPattern);  [BUGGY]  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  mLocaleForced  =  (locale  !=  null);  if  (locale  ==  null)  {  locale  =  Locale.getDefault();  }  mLocale  =  locale;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	542	542	1	replace	    mPattern  =  Pattern.compile(mPattern);		non-compiled	[CE]  <identifier>  expected	70	None	add
