bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  this);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  true);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  false);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  false);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	  	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]    String  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    String  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    String  pattern  =  getInstance(pattern,  timeZone);		non-compiled	[CE]  illegal  start  of  type	10	None	add
7	[BUG]  [BUGGY]    if(pattern  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
8	[BUG]  [BUGGY]    if(pattern  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
9	[BUG]  [BUGGY]    if(pattern  ==  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
10	[BUG]  [BUGGY]    Pattern  pattern  =  Pattern.compile(mStyle,  timeZone);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    Pattern  pattern  =  Pattern.compile(mStyle,  timeZone);  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    Pattern  pattern  =  Pattern.compile(mStyle,  timeZone);		non-compiled	[CE]  illegal  start  of  type	10	None	add
11	[BUG]  [BUGGY]    FastDateFormat  getInstance(pattern,  timeZone,  null);  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    FastDateFormat  getInstance(pattern,  timeZone,  null);  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    FastDateFormat  getInstance(pattern,  timeZone,  null);		non-compiled	[CE]  <identifier>  expected	10	None	add
12	[BUG]  [BUGGY]    if(pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
13	[BUG]  [BUGGY]    if(pattern  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
14	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  0);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]    if(pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
17	[BUG]  [BUGGY]    if(pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
18	[BUG]  [BUGGY]    if(pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
19	[BUG]  [BUGGY]    if(pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]    if(pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]  return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	    if(pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
20	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule);  [BUGGY]  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule);	return  getInstance(pattern,  timeZone,  null);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
