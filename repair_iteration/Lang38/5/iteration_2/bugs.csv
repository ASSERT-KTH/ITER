bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(pattern,  timeZone);	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(timeZone));  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  vices.put(pattern,  new  Integer(timeZone));  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(timeZone));	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(timeZone),  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  vices.put(pattern,  getInstance(timeZone),  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(timeZone),  null);	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
5	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
6	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  true);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  true);	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
7	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null);	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  false,  true);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  false,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  false,  true);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  false);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  this,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  false);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  false,  true);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  false,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  false,  true);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  true);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  true);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle,  null,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle,  null,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mStyle,  null,  true);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(timeZone));  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  vices.put(pattern,  getInstance(timeZone));  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(timeZone));	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  value);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  value);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  value);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  values);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  true);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  null);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  while(pattern  ==  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  while(pattern  ==  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern  ==  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  if(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  while(timeZone!=  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  while(timeZone!=  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  rule);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  rule);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  rule);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  style);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  style);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  style);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  rule,  mRules);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  rule,  mRules);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  rule,  mRules);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  true);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  this,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  true);	  return    getInstance(pattern,    timeZone,    this);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  null);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  this,  null);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  null);	  return    getInstance(pattern,    timeZone,    this);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone);	      Pattern    pattern    =    Pattern.compile(mStyle,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate);	      Pattern    pattern    =    Pattern.compile(mStyle,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinLengthEstimate);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinLengthEstimate);	      Pattern    pattern    =    Pattern.compile(mStyle,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null);	      Pattern    pattern    =    Pattern.compile(mStyle,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(timeZone),  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  vices.put(pattern,  new  Integer(timeZone),  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(timeZone),  null);	      if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone);	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  1);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  1);	  return    getInstance(pattern,    timeZone,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  0);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  0,  0);	  return    getInstance(pattern,    timeZone,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  3);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  3);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  3);	  return    getInstance(pattern,    timeZone,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
50	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
51	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  false);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  true);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  true);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  null);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null);	      String    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  false);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  false);	      String    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  true);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  true);	      String    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  if(timeZone!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  0);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  0);	  return    getInstance(pattern,    timeZone,    this);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
62	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this.values);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  this.values);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this.values);	  return    getInstance(pattern,    timeZone,    this);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule.toString());  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule.toString());  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule.toString());	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
66	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mTimeZone);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mTimeZone);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mTimeZone);	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
67	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  if(timeZone!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  0);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  0);	      String    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	char  pattern  =  getInstance(pattern,  timeZone);	      String    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
73	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
74	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  if(pattern!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  if(pattern  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }	      if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mSize);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mSize);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mSize);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  null,  true);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  null,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mColon,  null,  true);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
85	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  false);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  true,  false);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null,  false);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  null,  false);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
87	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  null,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  null,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mColon,  null,  false);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
88	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mColon,  false);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
89	[BUG]  [BUGGY]  safeMultiply(pattern)  {  return  getInstance(pattern,  timeZone);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  safeMultiply(pattern)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	safeMultiply(pattern)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
90	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
91	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
92	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone);	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
93	[BUG]  [BUGGY]  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern!=  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
96	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
97	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
98	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStyle);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStyle);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
101	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mLocale);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mLocale);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mLocale);	  return    getInstance(pattern,    timeZone,    null,    mRule);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
103	[BUG]  [BUGGY]  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
104	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(pattern    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mTimeZone);	  return    getInstance(pattern,    timeZone,    this);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
106	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mLocale);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mLocale);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mLocale);	  return    getInstance(pattern,    timeZone,    this);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
107	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  mRules);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
108	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mStandard);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mStandard);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mStandard);	      FastDateFormat    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
109	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null,  true);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  null,  true);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  null,  true);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  null,  true);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  null,  true);	  return    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
111	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone);	      String    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
112	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  false);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  false);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  false);	  return    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
113	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
114	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
115	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
116	[BUG]  [BUGGY]  if(mRule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(mRule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
117	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
118	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	      if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
119	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mStandard);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mStandard);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
120	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mDaylight);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mDaylight);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
121	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mStyle);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mStyle);  [BUGGY]    }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
122	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mDaylight);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mDaylight);  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mDaylight);	      Pattern    pattern    =    Pattern.compile(mStyle,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
123	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
124	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
125	[BUG]  [BUGGY]  if(pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {    [BUGGY]  if(pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]    return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }	      if(pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
