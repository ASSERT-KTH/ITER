bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()!=  0)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.length()!=  0)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.length()!=  0)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.length()    ==    0)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
2	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
3	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStandard);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStandard);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
6	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  true);	  return    getInstance(pattern,    timeZone,    mValues,    false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
7	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  values,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  values,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  values,  false);	  return    getInstance(pattern,    timeZone,    mValues,    false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
8	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  value,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  value,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  value,  false);	  return    getInstance(pattern,    timeZone,    mValues,    false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
9	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard,  mDaylight);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
10	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mStandard,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
11	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMinLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMinLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
12	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  false,  true);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  false,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  false,  true);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
13	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone,  null);	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
14	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone,  false);	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
15	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone,  true);	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
16	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  mStandard);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone,  mStandard);	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
17	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mStyle);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
18	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mSize);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mSize);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mSize);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
19	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mSize,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mSize,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mSize,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
20	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  true,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  true,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  true,  false);	  String    pattern    =    getInstance(pattern,    timeZone,    true);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
21	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  null,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  null,  false);	  return    getInstance(pattern,    timeZone,    mRules,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  rule,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  rule,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  rule,  true);	  return    getInstance(pattern,    timeZone,    mRules,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  TimeZoneNameRule.class,  null));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  TimeZoneNameRule.class,  null));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(getInstance(pattern,  TimeZoneNameRule.class,  null));	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
24	[BUG]  [BUGGY]  NumberRule  rule  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NumberRule  rule  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NumberRule  rule  =  getInstance(pattern,  timeZone);	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
25	[BUG]  [BUGGY]  AnnotationRule  rule  =  mRules.get(pattern);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  AnnotationRule  rule  =  mRules.get(pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	AnnotationRule  rule  =  mRules.get(pattern);	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
26	[BUG]  [BUGGY]  NumberRule  rule  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NumberRule  rule  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NumberRule  rule  =  getInstance(pattern,  timeZone,  null);	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
27	[BUG]  [BUGGY]  vices.put(pattern,  mRule);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  mRule);	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
28	[BUG]  [BUGGY]  pattern  ==  null  &&  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  &&  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  &&  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
29	[BUG]  [BUGGY]  fastDateFormat  getInstance(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  fastDateFormat  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	fastDateFormat  getInstance(pattern,  timeZone,  null,  false);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
30	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  true,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  true,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  true,  false);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
31	[BUG]  [BUGGY]  Character  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Character  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Character  pattern  =  getInstance(pattern,  timeZone);	  char    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
32	[BUG]  [BUGGY]  Char  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Char  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Char  pattern  =  getInstance(pattern,  timeZone);	  char    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
33	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern  ==  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern  ==  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern  ==  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone,  null);	  if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
34	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mValues);	  return    getInstance(pattern,    timeZone,    null,    values);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
35	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  values,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  values,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  values,  null);	  return    getInstance(pattern,    timeZone,    null,    values);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
36	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  values);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  values);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  values);	  return    getInstance(pattern,    timeZone,    null,    values);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
37	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
38	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone  ==  null)  {  pattern  =  getInstance(pattern,  timeZone);	  if(pattern    ==    null    ||    timeZone    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
39	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mMaxLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
40	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mMinLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mMinLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
41	[BUG]  [BUGGY]  Annotation  <?>  timeZone  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Annotation  <?>  timeZone  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Annotation  <?>  timeZone  =  getInstance(pattern,  timeZone);	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
42	[BUG]  [BUGGY]  vices.put(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  timeZone);	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
43	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mMinLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mMinLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
44	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mMaxLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
45	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinLengthEstimate,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinLengthEstimate,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinLengthEstimate,  mMaxLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
46	[BUG]  [BUGGY]  pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
47	[BUG]  [BUGGY]  this.pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  this.pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	this.pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
48	[BUG]  [BUGGY]  while(pattern  ==  null  &&  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern  ==  null  &&  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern  ==  null  &&  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
49	[BUG]  [BUGGY]  while(pattern!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(timeZone!=    null)    {    if(pattern    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
50	[BUG]  [BUGGY]  while(timeZone  ==  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone  ==  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone  ==  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(timeZone!=    null)    {    if(pattern    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
51	[BUG]  [BUGGY]  while(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(timeZone!=    null)    {    if(pattern    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
52	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  false,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  false,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  false,  null);	  String    pattern    =    getInstance(pattern,    timeZone,    false);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
53	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone);	  if(pattern!=    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
54	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  value);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  value);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  value);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mStandard);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
55	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRule);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRule);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mStandard);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
56	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
57	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
58	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  1);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  0,  1);	  return    getInstance(pattern,    timeZone,    null,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
59	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  2);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  2);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  0,  2);	  return    getInstance(pattern,    timeZone,    null,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
60	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  3);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  0,  3);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  0,  3);	  return    getInstance(pattern,    timeZone,    null,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
61	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  true);	  return    getInstance(pattern,    timeZone,    mColon,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
62	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  false,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  false,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  false,  true);	  return    getInstance(pattern,    timeZone,    mRules,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
63	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  rule,  null,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  rule,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  rule,  null,  true);	  return    getInstance(pattern,    timeZone,    mRules,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
64	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValue);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValue);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValue);	  return    getInstance(pattern,    timeZone,    null,    value);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
65	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  false);	  return    getInstance(pattern,    timeZone,    null,    value);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
66	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  true);	  return    getInstance(pattern,    timeZone,    null,    value);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
67	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
68	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mSize);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mSize);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mSize);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
69	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
70	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate,  mStyle);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
71	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mLocale);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mLocale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mLocale);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
72	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle,  null,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mStyle,  null,  false);	  return    getInstance(pattern,    timeZone,    mStyle,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mMaxLengthEstimate,  null,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mMaxLengthEstimate,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mMaxLengthEstimate,  null,  true);	  return    getInstance(pattern,    timeZone,    mStyle,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
74	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
75	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  Pattern  pattern  =  pattern.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  Pattern  pattern  =  pattern.toLowerCase();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern!=  null)  {  Pattern  pattern  =  pattern.toLowerCase();	  if(pattern    ==    null    ||    pattern!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
76	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  true);	  return    getInstance(pattern,    timeZone,    this,    false);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
77	[BUG]  [BUGGY]  while(timeZone!=  null)  {  pattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  pattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  pattern  =  getInstance(pattern,  timeZone,  null);	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
78	[BUG]  [BUGGY]  while(timeZone!=  null)  {  pattern  =  timeZone.getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  pattern  =  timeZone.getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  pattern  =  timeZone.getInstance(pattern,  timeZone,  null);	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
79	[BUG]  [BUGGY]  while(timeZone!=  null)  {  Pattern  pattern  =  pattern.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  Pattern  pattern  =  pattern.toLowerCase();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  Pattern  pattern  =  pattern.toLowerCase();	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
80	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  false);	  MutablePattern    <    NumberRule>    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
81	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  true);	  MutablePattern    <    NumberRule>    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
82	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  mRules);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  null,  mRules);	  MutablePattern    <    NumberRule>    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
83	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  values);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  values);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  values);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
84	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  value);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  value);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  value);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
85	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  true);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  true);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
86	[BUG]  [BUGGY]  String  pattern  =  pattern.equals(mValue)?  null  :  pattern.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  pattern.equals(mValue)?  null  :  pattern.toLowerCase();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  pattern.equals(mValue)?  null  :  pattern.toLowerCase();	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
87	[BUG]  [BUGGY]  String  pattern  =  pattern.equals(mValue);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  pattern.equals(mValue);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  pattern.equals(mValue);	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
88	[BUG]  [BUGGY]  Pattern  pattern  =  pattern.equals(mValue);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  pattern.equals(mValue);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  pattern.equals(mValue);	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
89	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(0));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(0));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(0));	  vices.put(pattern,    new    Integer(timeZone));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  vices.put(pattern,  new  Long(timeZone));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Long(timeZone));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Long(timeZone));	  vices.put(pattern,    new    Integer(timeZone));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
91	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(1));  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(1));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(1));	  vices.put(pattern,    new    Integer(timeZone));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
92	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  false);	  return    getInstance(pattern,    timeZone,    null,    mRule,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  false);	  return    getInstance(pattern,    timeZone,    null,    mRule,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mStyle,  true);	  return    getInstance(pattern,    timeZone,    null,    mRule,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
95	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mSize);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mSize);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mSize);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
96	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mRules);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mRules);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
97	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mRule);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMaxLengthEstimate,  mRule);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
98	[BUG]  [BUGGY]  Annotation  <?>  timeZone  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Annotation  <?>  timeZone  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Annotation  <?>  timeZone  =  getInstance(pattern,  timeZone,  null);	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
99	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mMaxLengthEstimate,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mMaxLengthEstimate,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mMaxLengthEstimate,  false);	  return    getInstance(pattern,    timeZone,    mColon,    false);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
100	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  true);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mColon,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mColon,  true);	  return    getInstance(pattern,    timeZone,    mColon,    false);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
101	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle,  false);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mStyle,  false);	  return    getInstance(pattern,    timeZone,    mColon,    false);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
102	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  false);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  false);	  return    getInstance(pattern,    timeZone,    mColon,    false);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
103	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mStandard);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mStandard);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
104	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mStandard);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mStandard);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
105	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  values,  null,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  values,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  values,  null,  true);	  return    getInstance(pattern,    timeZone,    mValues,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
106	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  value,  null,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  value,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  value,  null,  true);	  return    getInstance(pattern,    timeZone,    mValues,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
107	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules);	  return    getInstance(pattern,    timeZone,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
108	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule);	  return    getInstance(pattern,    timeZone,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
109	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mDaylight);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mDaylight);	  return    getInstance(pattern,    timeZone,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
110	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mStyle);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
111	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  mRules);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mStyle,  mRules);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
112	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mStyle,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
113	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  rule,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  rule,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  rule,  false);	  return    getInstance(pattern,    timeZone,    mRules,    false);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
114	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null,  false);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null,  false);	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
115	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(0),  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(0),  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(0),  null);	  vices.put(pattern,    new    Integer(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
116	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(timeZone),  this);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(timeZone),  this);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(timeZone),  this);	  vices.put(pattern,    new    Integer(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
117	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  false,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  false,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  false,  false);	  return    getInstance(pattern,    timeZone,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
118	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  true,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  true,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  true,  true);	  return    getInstance(pattern,    timeZone,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  true,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  true,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  true,  false);	  return    getInstance(pattern,    timeZone,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
120	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  false);	  return    getInstance(pattern,    timeZone,    mColon,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
121	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  4);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  4);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  4);	  return    getInstance(pattern,    timeZone,    null,    3);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
122	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  2);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  2);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  2);	  return    getInstance(pattern,    timeZone,    null,    3);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
123	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  values,  null,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  values,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  values,  null,  false);	  return    getInstance(pattern,    timeZone,    mValues,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
124	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  value,  null,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  value,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  value,  null,  false);	  return    getInstance(pattern,    timeZone,    mValues,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
125	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  Pattern.compile(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  Pattern.compile(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  Pattern.compile(pattern,  timeZone,  null);	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
126	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  false);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
127	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  true);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
128	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  pattern);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  pattern);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
129	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone,  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone,  null);	  aughtExceptionHandler.handleMatcher(mRules,    pattern,    timeZone);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
130	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone,  false);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone,  false);	  aughtExceptionHandler.handleMatcher(mRules,    pattern,    timeZone);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
131	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  null);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
132	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  false);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
133	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  true);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
134	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(mTimeZone));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(mTimeZone));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(mTimeZone));	  vices.put(pattern,    getInstance(timeZone));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
135	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(TimeZone.getDefault()));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(TimeZone.getDefault()));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(TimeZone.getDefault()));	  vices.put(pattern,    getInstance(timeZone));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
136	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    mRule,    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
137	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mStyle);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  mStyle);	  return    getInstance(pattern,    timeZone,    mRule,    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
138	[BUG]  [BUGGY]  pattern  ==  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
139	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
140	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
141	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  1);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  1);	  return    getInstance(pattern,    timeZone,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
142	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  3);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  3);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  3);	  return    getInstance(pattern,    timeZone,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
143	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  4);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  4);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  4);	  return    getInstance(pattern,    timeZone,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
144	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  true);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  null,  true);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
145	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  null,  false);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
146	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this.values,  this.daylight);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this.values,  this.daylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this.values,  this.daylight);	  return    getInstance(pattern,    timeZone,    this.values);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
147	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this.values,  this.timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this.values,  this.timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this.values,  this.timeZone);	  return    getInstance(pattern,    timeZone,    this.values);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
148	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues);	  return    getInstance(pattern,    timeZone,    this.values);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
149	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  false,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  false,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  false,  false);	  return    getInstance(pattern,    timeZone,    null,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
150	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  true,  true);	  return    getInstance(pattern,    timeZone,    null,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
151	[BUG]  [BUGGY]  while(timeZone!=  null)  {  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  pattern  =  getInstance(pattern,  timeZone);	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
152	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  null);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
153	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  0);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  0);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
154	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  false);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  false);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
155	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate.toString());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate.toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate.toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
156	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  rule.toString());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  rule.toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  rule.toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
157	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  pattern.toString());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  pattern.toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  pattern.toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
158	[BUG]  [BUGGY]  safeMultiply(pattern)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  safeMultiply(pattern)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	safeMultiply(pattern)  {  return  getInstance(pattern,  timeZone,  null);  }	  safeMultiply(pattern)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
159	[BUG]  [BUGGY]  safeMultiply(pattern,  timeZone,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  safeMultiply(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	safeMultiply(pattern,  timeZone,  null);	  safeMultiply(pattern)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
160	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }	  aughtExceptionHandler.handleMatcher(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
161	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(pattern,  timeZone,  false);	  aughtExceptionHandler.handleMatcher(pattern,    timeZone);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
162	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone,  null));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone,  null));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone,  null));	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
163	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mMinLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mMinLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
164	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mMaxLengthEstimate,  mRules);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mMaxLengthEstimate,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mMaxLengthEstimate,  mRules);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
165	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
166	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  false);	  return    getInstance(pattern,    timeZone,    null,    mValues,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
167	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  true);	  return    getInstance(pattern,    timeZone,    null,    mValues,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
168	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  true,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  true,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  true,  false);	  return    getInstance(pattern,    timeZone,    null,    mValues,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
169	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  false);	  MutablePattern    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
170	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  true);	  MutablePattern    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
171	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mStandard);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mStandard);	  MutablePattern    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
172	[BUG]  [BUGGY]  ParchetalRule  rule  =  mRules.get(pattern);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  ParchetalRule  rule  =  mRules.get(pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	ParchetalRule  rule  =  mRules.get(pattern);	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
173	[BUG]  [BUGGY]  vices.put(pattern,  mRules);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  mRules);	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
174	[BUG]  [BUGGY]  vices.put(pattern,  null);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  null);	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
175	[BUG]  [BUGGY]  Pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
176	[BUG]  [BUGGY]  Pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
177	[BUG]  [BUGGY]  Pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
178	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mRules);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mRules);	  return    getInstance(pattern,    timeZone,    this,    null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
179	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mStandard);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mStandard);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mStandard);	  return    getInstance(pattern,    timeZone,    this,    null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
180	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  null,  mRules);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  null,  mRules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  null,  mRules);	  return    getInstance(pattern,    timeZone,    this,    null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
181	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mStyle,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mStyle,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mStyle,  null);	  return    getInstance(pattern,    timeZone,    this,    null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
182	[BUG]  [BUGGY]  Pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
183	[BUG]  [BUGGY]  Pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern!=  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
184	[BUG]  [BUGGY]  Pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  ==  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
185	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight,  mStandard);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight,  mStandard);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
186	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();	  while(pattern    ==    null    &&    pattern!=    null)    {    pattern    =    pattern.trim();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
187	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();	  while(pattern    ==    null    &&    pattern!=    null)    {    pattern    =    pattern.trim();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
188	[BUG]  [BUGGY]  while(pattern  ==  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern  ==  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern  ==  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();	  while(pattern    ==    null    &&    pattern!=    null)    {    pattern    =    pattern.trim();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
189	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  pattern  =  pattern.trim();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  pattern  =  pattern.trim();  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone  ==  null)  {  pattern  =  pattern.trim();	  while(pattern    ==    null    &&    pattern!=    null)    {    pattern    =    pattern.trim();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
190	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mStyle);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
191	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mSize);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mSize);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mSize);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
192	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mSize);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mSize);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mSize);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
193	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  false);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  false);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
194	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  true);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
195	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mStandard);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  mStandard);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
196	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mDaylight);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mValues,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
197	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mDaylight);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  mValues,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
198	[BUG]  [BUGGY]  this.pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  this.pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	this.pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
199	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
200	[BUG]  [BUGGY]  while(timeZone  ==  null)  {  pattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone  ==  null)  {  pattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone  ==  null)  {  pattern  =  getInstance(pattern,  timeZone,  null);	  if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
201	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  false);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
202	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  true);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
203	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  pattern);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  pattern);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
204	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  1);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  1);	  String    pattern    =    getInstance(pattern,    timeZone,    0);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
205	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  pattern);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMissingException( " ",  pattern);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
206	[BUG]  [BUGGY]  While(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  While(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	While(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
207	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
208	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getInstanceClassLoader());  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getInstanceClassLoader());  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Thread.currentThread().setContextClassLoader(getInstanceClassLoader());	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
209	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  FastDateFormat(pattern,  timeZone));  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Thread.currentThread().setContext(new  FastDateFormat(pattern,  timeZone));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Thread.currentThread().setContext(new  FastDateFormat(pattern,  timeZone));	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
210	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.length()    ==    0)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
211	[BUG]  [BUGGY]  String  pattern  =  pattern.substring(0,  pattern.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  pattern.substring(0,  pattern.length()  -  1);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  pattern.substring(0,  pattern.length()  -  1);	  if(pattern    ==    null    ||    pattern.length()    ==    0)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
212	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null,  false);	  aughtExceptionHandler.handleMatcher(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
213	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  this);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  this);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(pattern,  timeZone,  this);	  aughtExceptionHandler.handleMatcher(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
214	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  values,  true);	  return    getInstance(pattern,    timeZone,    null,    mValues,    values);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
215	[BUG]  [BUGGY]  Each  timeZone  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Each  timeZone  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Each  timeZone  =  getInstance(pattern,  timeZone);	  if(timeZone!=    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
216	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  null);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
217	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  false);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
218	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  true);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
219	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  mStandard);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  mStandard);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
220	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mDaylight);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
221	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  return    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
222	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
223	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    this,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
224	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mDaylight);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mDaylight);	  return    getInstance(pattern,    timeZone,    this,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
225	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
226	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
227	[BUG]  [BUGGY]  Pattern  pattern  =  pattern.equals(timeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  pattern.equals(timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  pattern.equals(timeZone);	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
228	[BUG]  [BUGGY]  Pattern!=  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern!=  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern!=  null  ||  pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  pattern    ==    null    ||    pattern!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
229	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  mValues);	  return    getInstance(pattern,    timeZone,    null,    mValues,    value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
230	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  value);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  value);	  return    getInstance(pattern,    timeZone,    null,    mValues,    value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
231	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
232	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard,  mDaylight);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mStandard,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
233	[BUG]  [BUGGY]  AnnotationRule  rule  =  mRule.getRule(pattern);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  AnnotationRule  rule  =  mRule.getRule(pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	AnnotationRule  rule  =  mRule.getRule(pattern);	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
234	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  null);	  MutablePattern    <    NumberRule>    pt    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
235	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  false);	  MutablePattern    <    NumberRule>    pt    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
236	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  true);	  MutablePattern    <    NumberRule>    pt    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
237	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  pattern);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  pattern);	  MutablePattern    <    NumberRule>    pt    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
238	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  rule);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  rule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  rule);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
239	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  true);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  true);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
240	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  false);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  false);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
241	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  rule,  true);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  rule,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  rule,  true);	  return    getInstance(pattern,    timeZone,    null,    mRules,    rule);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
242	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  rule,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  rule,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  rule,  false);	  return    getInstance(pattern,    timeZone,    null,    mRules,    rule);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
243	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone);	  if(pattern    ==    null    ||    timeZone!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
244	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  mRules,  null);	  FastDateFormat    getInstance(pattern,    timeZone,    mRules);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
245	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  new  Rule[]  {  mRules  }  );  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  new  Rule[]  {  mRules  }  );  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  new  Rule[]  {  mRules  }  );	  FastDateFormat    getInstance(pattern,    timeZone,    mRules);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
246	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  style,  true);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  style,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  style,  true);	  return    getInstance(pattern,    timeZone,    null,    mRules,    style);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
247	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  style,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  style,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  style,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    style);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
248	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
249	[BUG]  [BUGGY]  if(mRule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
250	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
251	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
252	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
253	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
254	[BUG]  [BUGGY]  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
255	[BUG]  [BUGGY]  While(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  While(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	While(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
256	[BUG]  [BUGGY]  wires.put(pattern,  timeZone)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  wires.put(pattern,  timeZone)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	wires.put(pattern,  timeZone)  {  throw  new  IllegalArgumentException( " ");  }	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
257	[BUG]  [BUGGY]  NullPointerFactory  factory  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NullPointerFactory  factory  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NullPointerFactory  factory  =  getInstance(pattern,  timeZone);	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
258	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  null);	  return    getInstance(pattern,    timeZone,    null,    values);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
259	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(TimeZone.valueOf(timeZone)),  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(TimeZone.valueOf(timeZone)),  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(TimeZone.valueOf(timeZone)),  null);	  vices.put(pattern,    new    Integer(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
260	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
261	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
262	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mStyle);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
263	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  mValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mStyle,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mStyle,  mValues);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
264	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  0);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  true,  0);	  return    getInstance(pattern,    timeZone,    null,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
265	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  null);	  return    getInstance(pattern,    timeZone,    mRules,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
266	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mRules);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mRules);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
267	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  false);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
268	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  this);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  this);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pt  =  getInstance(pattern,  timeZone,  this);	  MutablePattern    <    NumberRule>    pt    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
269	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  value,  null,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  value,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  value,  null,  true);	  return    getInstance(pattern,    timeZone,    mRules,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
270	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mColon);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mColon);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mColon);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
271	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValue);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValue);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValue);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mStandard);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
272	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  value,  null,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  value,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  value,  null,  false);	  return    getInstance(pattern,    timeZone,    mValues,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
273	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.length()  ==  0)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
274	[BUG]  [BUGGY]  if(pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
275	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
276	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mColon);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mColon);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mColon);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
277	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
278	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(timeZone  >=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(timeZone  >=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(timeZone  >=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
279	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(this.timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(this.timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(this.timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
280	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules.toString());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules.toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules.toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
281	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules[i].toString());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules[i].toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules[i].toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
282	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules[0].toString());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules[0].toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules[0].toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
283	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mValue);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mValue);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mValue);	  MutablePattern    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
284	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  0);	  MutablePattern    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
285	[BUG]  [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mDaylight);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mDaylight);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  pattern  =  getInstance(pattern,  timeZone,  null,  mDaylight);	  MutablePattern    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
286	[BUG]  [BUGGY]  fastDateFormat  getInstance(pattern,  timeZone,  null,  true);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  fastDateFormat  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	fastDateFormat  getInstance(pattern,  timeZone,  null,  true);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
287	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  0L);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  0L);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  0L);	  String    pattern    =    getInstance(pattern,    timeZone,    0);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
288	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(TimeZoneNameRule.class),  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(TimeZoneNameRule.class),  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(TimeZoneNameRule.class),  null);	  vices.put(pattern,    getInstance(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
289	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(timeZone)+  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(timeZone)+  1);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(timeZone)+  1);	  vices.put(pattern,    getInstance(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
290	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.length()    ==    0)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
291	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern.length()  ==  0)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.length()    ==    0)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
292	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  value);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  value);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  value);	  return    getInstance(pattern,    timeZone,    null,    mRules,    style);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
293	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mTimeZone);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mTimeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mTimeZone);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
294	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight,  mLocale);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight,  mLocale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight,  mLocale);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
295	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mValues);	  return    getInstance(pattern,    timeZone,    null,    mRules,    rule);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
296	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinuteLengthEstimate);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinuteLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mMinuteLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
297	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }	  aughtExceptionHandler.handleMatcher(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
298	[BUG]  [BUGGY]  if(mRule  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone);  }	  aughtExceptionHandler.handleMatcher(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
299	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone!=  null)  {  pattern  =  pattern.trim();  }	  while(pattern    ==    null    &&    pattern!=    null)    {    pattern    =    pattern.trim();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
300	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  value);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  value);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  value);	  return    getInstance(pattern,    timeZone,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
301	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
302	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  FastDateFormat.getInstance(pattern,  timeZone,  null);	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
303	[BUG]  [BUGGY]  if(pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
304	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mValues);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mValues);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  mValues);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
305	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mValue);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mValue);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  mValue);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
306	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  0);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
307	[BUG]  [BUGGY]  if(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null)  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }	  if(pattern!=    null)    {    if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
308	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  0);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
309	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mDaylight);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mDaylight);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mDaylight);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
310	[BUG]  [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	char  pattern  =  getInstance(pattern,  timeZone,  true);	  String    pattern    =    getInstance(pattern,    timeZone,    true);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
311	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values.length);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values.length);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  values.length);	  return    getInstance(pattern,    timeZone,    null,    mValues,    values);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
312	[BUG]  [BUGGY]  NullPointer  <  NumberRule>  n  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NullPointer  <  NumberRule>  n  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NullPointer  <  NumberRule>  n  =  getInstance(pattern,  timeZone);	  if(timeZone!=    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
313	[BUG]  [BUGGY]  NullPointer  <  NumberRule>  temp  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NullPointer  <  NumberRule>  temp  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NullPointer  <  NumberRule>  temp  =  getInstance(pattern,  timeZone);	  if(timeZone!=    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
314	[BUG]  [BUGGY]  NullPointer  <  String>  it  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NullPointer  <  String>  it  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NullPointer  <  String>  it  =  getInstance(pattern,  timeZone);	  if(timeZone!=    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
315	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mColon,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mColon,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mColon,  true);	  return    getInstance(pattern,    timeZone,    null,    mRule,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
316	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(timeZone),  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(timeZone),  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(timeZone),  false);	  vices.put(pattern,    getInstance(timeZone));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
317	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
318	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
319	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  -1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  -1);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  -1);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
320	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
321	[BUG]  [BUGGY]  if(getInstance(pattern,  timeZone)!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(getInstance(pattern,  timeZone)!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(getInstance(pattern,  timeZone)!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
322	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
323	[BUG]  [BUGGY]  if(mRule!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
324	[BUG]  [BUGGY]  if(rule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(rule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(rule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
325	[BUG]  [BUGGY]  if(timeZone!=  null)  {  if(mRule!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone!=  null)  {  if(mRule!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone!=  null)  {  if(mRule!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
326	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  true);	  return    getInstance(pattern,    timeZone,    null,    mValues,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
327	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mValue);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mValue);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mValue);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
328	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this.values,  mValues);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this.values,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this.values,  mValues);	  return    getInstance(pattern,    timeZone,    this.values);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
329	[BUG]  [BUGGY]  return  getInstance(pattern,  this.values,  timeZone);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  this.values,  timeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  this.values,  timeZone);	  return    getInstance(pattern,    timeZone,    this.values);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
330	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
331	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
332	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
333	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  this);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  this);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  this);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
334	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mTimeZone);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mTimeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mTimeZone);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
335	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mColon);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mColon);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mColon);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
336	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mRules);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  null,  mRules);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
337	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  value,  null,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  value,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  value,  null,  true);	  return    getInstance(pattern,    timeZone,    mValues,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
338	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  values,  null,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  values,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  values,  null,  true);	  return    getInstance(pattern,    timeZone,    mValues,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
339	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mTimeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mTimeZone);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate,  mTimeZone);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
340	[BUG]  [BUGGY]  safeMultiply(pattern,  timeZone)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  safeMultiply(pattern,  timeZone)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	safeMultiply(pattern,  timeZone)  {  return  getInstance(pattern,  timeZone,  null);  }	  safeMultiply(pattern)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
341	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mDaylight,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mDaylight,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mDaylight,  mMaxLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
342	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mRules);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mRules);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
343	[BUG]  [BUGGY]  MutableFieldUtils.checkNotNull(pattern);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutableFieldUtils.checkNotNull(pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutableFieldUtils.checkNotNull(pattern);	  if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
344	[BUG]  [BUGGY]  ParchetState.checkNotNull(pattern);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  ParchetState.checkNotNull(pattern);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	ParchetState.checkNotNull(pattern);	  if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
345	[BUG]  [BUGGY]  MutableFieldUtils.checkState(timeZone  ==  null);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutableFieldUtils.checkState(timeZone  ==  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutableFieldUtils.checkState(timeZone  ==  null);	  if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
346	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mColon);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mColon);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mColon);	  return    getInstance(pattern,    timeZone,    this,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
347	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mValue);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mValue);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mValue);	  return    getInstance(pattern,    timeZone,    this,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
348	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  value);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  value);	  return    getInstance(pattern,    timeZone,    this,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
349	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate,  mStyle);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mMinLengthEstimate,  mStyle);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
350	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
351	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  if(mTimeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  if(mTimeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  if(mTimeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
352	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  if(pattern  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  if(pattern  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  if(pattern  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
353	[BUG]  [BUGGY]  while(this.timeZone!=  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(this.timeZone!=  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(this.timeZone!=  null)  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(timeZone!=    null)    {    if(pattern    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
354	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone,  0);	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
355	[BUG]  [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  mLocale);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  FastDateFormat.getInstance(pattern,  timeZone,  mLocale);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  FastDateFormat.getInstance(pattern,  timeZone,  mLocale);	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
356	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  INSTANCE);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  INSTANCE);  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  INSTANCE);  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
357	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
358	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }	  aughtExceptionHandler.handleMatcher(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
359	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }	  aughtExceptionHandler.handleMatcher(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
360	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMatcher(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
361	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mValues);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mValues);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mValues);	  return    getInstance(pattern,    timeZone,    this,    null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
362	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
363	[BUG]  [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  timeZone!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
364	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
365	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(value))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(value))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(value))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
366	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValue);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  value,  mValue);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  value,  mValue);	  return    getInstance(pattern,    timeZone,    null,    value);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
367	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  values,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  values,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
368	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.length()!=  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.length()!=  0)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.length()!=  0)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.length()    ==    0)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
369	[BUG]  [BUGGY]  if(mRule!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule!=  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
370	[BUG]  [BUGGY]  if(mRule!=  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule!=  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule!=  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
371	[BUG]  [BUGGY]  if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  TimeZoneNameRule,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  TimeZoneNameRule,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  TimeZoneNameRule,  null);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
372	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
373	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
374	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  mTimeZone,  null,  true);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  mTimeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  mTimeZone,  null,  true);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
375	[BUG]  [BUGGY]  MutableFieldUtils.checkState(timeZone!=  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutableFieldUtils.checkState(timeZone!=  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutableFieldUtils.checkState(timeZone!=  null);	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
376	[BUG]  [BUGGY]  NullPointer  <  NumberRule>  temp  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NullPointer  <  NumberRule>  temp  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NullPointer  <  NumberRule>  temp  =  getInstance(pattern,  timeZone,  null);	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
377	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  mRules);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  profile  =  getInstance(pattern,  timeZone,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  mRules);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
378	[BUG]  [BUGGY]  Profile  profile  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Profile  profile  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Profile  profile  =  getInstance(pattern,  timeZone,  null);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
379	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  0);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
380	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  mLocale);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  mLocale);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  mLocale);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
381	[BUG]  [BUGGY]  safeMultiply(pattern,  timeZone);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  safeMultiply(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	safeMultiply(pattern,  timeZone);	  if(pattern!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
382	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  }	  aughtExceptionHandler.handleMatcher(mRules,    pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
383	[BUG]  [BUGGY]  Number  pattern  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Number  pattern  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Number  pattern  =  getInstance(pattern,  timeZone);	  char    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
384	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
385	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  mRules);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  mRules);	  MutablePattern    <    NumberRule>    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
386	[BUG]  [BUGGY]  if(mRule  ==  null)  {  if(timeZone  >=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule  ==  null)  {  if(timeZone  >=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  if(timeZone  >=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
387	[BUG]  [BUGGY]  NullField  <  NumberRule>  mRule  =  getInstance(pattern,  timeZone);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NullField  <  NumberRule>  mRule  =  getInstance(pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NullField  <  NumberRule>  mRule  =  getInstance(pattern,  timeZone);	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
388	[BUG]  [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	char  pattern  =  getInstance(pattern,  timeZone,  false);	  String    pattern    =    getInstance(pattern,    timeZone,    false);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
389	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  mValues,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  mValues,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  mValues,  true);	  return    getInstance(pattern,    timeZone,    null,    mValues,    true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
390	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  mRule);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  pattern  =  getInstance(pattern,  timeZone,  mRule);	  MutablePattern    <    NumberRule>    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
391	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(mValue));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(mValue));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(mValue));	  vices.put(pattern,    new    Integer(timeZone));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
392	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(mTimeZone));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(mTimeZone));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(mTimeZone));	  vices.put(pattern,    new    Integer(timeZone));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
393	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mMaxLengthEstimate);	  FastDateFormat    getInstance(pattern,    timeZone,    mRules);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
394	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mStandard);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mStandard);	  FastDateFormat    getInstance(pattern,    timeZone,    mRules);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
395	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mDaylight);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mDaylight);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  mRules,  mDaylight);	  FastDateFormat    getInstance(pattern,    timeZone,    mRules);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
396	[BUG]  [BUGGY]  if(mRules  ==  null  ||  mRules.length  ==  0)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null  ||  mRules.length  ==  0)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null  ||  mRules.length  ==  0)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
397	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(mRule  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(mRule  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(mRule  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRules    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
398	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
399	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mTimeZone,  false);	  return    getInstance(pattern,    timeZone,    mColon,    false);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
400	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values,  mStandard);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values,  mStandard);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  values,  mStandard);	  return    getInstance(pattern,    timeZone,    null,    mValues,    values);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
401	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  values,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  values,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues,    values);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
402	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(mTimeZone),  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(mTimeZone),  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(mTimeZone),  null);	  vices.put(pattern,    new    Integer(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
403	[BUG]  [BUGGY]  vices.put(pattern,  new  Integer(mValue),  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  new  Integer(mValue),  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  new  Integer(mValue),  null);	  vices.put(pattern,    new    Integer(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
404	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mStandard);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mStandard);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
405	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mMaxLengthEstimate);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
406	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mDaylight);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
407	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mStyle);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mStyle);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mRules,  mStyle);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mRules);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
408	[BUG]  [BUGGY]  if(mTimeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mTimeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mTimeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
409	[BUG]  [BUGGY]  if(pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
410	[BUG]  [BUGGY]  if(mTimeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mTimeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mTimeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
411	[BUG]  [BUGGY]  if(pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
412	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern!=    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
413	[BUG]  [BUGGY]  if(timeZone  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null  ||  pattern.equals(timeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
414	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mLocale);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mLocale);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mLocale);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
415	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mTimeZone);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mTimeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  tempPattern  =  getInstance(pattern,  timeZone,  mTimeZone);	  MutablePattern    <    NumberRule>    tempPattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
416	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
417	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
418	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mStyle,  mLocale);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mStyle,  mLocale);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mStyle,  mLocale);	  return    getInstance(pattern,    timeZone,    this,    mLocale);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
419	[BUG]  [BUGGY]  while(timeZone!=  null  &&  timeZone.equals(mValue))  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null  &&  timeZone.equals(mValue))  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null  &&  timeZone.equals(mValue))  {  if(pattern  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(timeZone!=    null)    {    if(pattern    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
420	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null,  values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValues,  null,  values);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValues,  null,  values);	  return    getInstance(pattern,    timeZone,    null,    values);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
421	[BUG]  [BUGGY]  if(mTimeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mTimeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mTimeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(timeZone!=    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
422	[BUG]  [BUGGY]  if(pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	  if(pattern!=    null    ||    pattern    ==    null)    {    return    FastDateFormat.getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
423	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMinLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mMinLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
424	[BUG]  [BUGGY]  while(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
425	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getInstance(pattern,  timeZone));  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getInstance(pattern,  timeZone));  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Thread.currentThread().setContextClassLoader(getInstance(pattern,  timeZone));	  if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
426	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mValues,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this,  mValues,  null);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this,  mValues,  null);	  return    getInstance(pattern,    timeZone,    this,    null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
427	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate,  mRule);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate,  mRule);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mMaxLengthEstimate,  mRule);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
428	[BUG]  [BUGGY]  if(mRule  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
429	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
430	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  mStandard);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  mStandard);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
431	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  mDaylight);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  mDaylight);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  mValues,  mDaylight);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    mValues);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
432	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mValue,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mValue,  value);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mValue,  value);	  return    getInstance(pattern,    timeZone,    null,    value);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
433	[BUG]  [BUGGY]  if(pattern!=  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null)  {  if(timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    if(timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
434	[BUG]  [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(pattern!=  null  &&  pattern!=  null)  {  pattern  =  pattern.trim();  }	  while(pattern    ==    null    &&    pattern!=    null)    {    pattern    =    pattern.trim();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
435	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(timeZone),  null).setTimeZone(mTimeZone);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(timeZone),  null).setTimeZone(mTimeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(timeZone),  null).setTimeZone(mTimeZone);	  vices.put(pattern,    getInstance(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
436	[BUG]  [BUGGY]  vices.put(pattern,  getInstance(timeZone),  mRule);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  vices.put(pattern,  getInstance(timeZone),  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	vices.put(pattern,  getInstance(timeZone),  mRule);	  vices.put(pattern,    getInstance(timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
437	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mRule.toString());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mRule.toString());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  mRule.toString());	  return    getInstance(pattern,    timeZone,    null,    mRule.toString());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
438	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValue,  true);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValue,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValue,  true);	  return    getInstance(pattern,    timeZone,    null,    mRule,    true);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
439	[BUG]  [BUGGY]  if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
440	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  return  getInstance(pattern,  TimeZoneNameRule.class,  null);  }	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
441	[BUG]  [BUGGY]  NumberRule  rule  =  getInstance(pattern,  TimeZoneNameRule.class,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NumberRule  rule  =  getInstance(pattern,  TimeZoneNameRule.class,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NumberRule  rule  =  getInstance(pattern,  TimeZoneNameRule.class,  null);	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    TimeZoneNameRule.class,    null);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
442	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStyle,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRules,  mStyle,  mMaxLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRules,  mStyle,  mMaxLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mStyle);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
443	[BUG]  [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mRule);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  String  pattern  =  getInstance(pattern,  timeZone,  null,  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	String  pattern  =  getInstance(pattern,  timeZone,  null,  mRule);	  String    pattern    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
444	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  mRules);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  mRules);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
445	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  mValues);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  mValues);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  null,  null,  mValues);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
446	[BUG]  [BUGGY]  if(timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(timeZone  ==  null)  {  return  FastDateFormat.getInstance(pattern,  timeZone);  }	  return    FastDateFormat.getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
447	[BUG]  [BUGGY]  if(pattern!=  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  timeZone!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null    ||    timeZone!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
448	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern.equals(mTimeZone))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
449	[BUG]  [BUGGY]  if(mRule  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRule  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRule  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  return    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
450	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  false);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  false);	  return    getInstance(pattern,    timeZone,    this,    true);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
451	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mStandard);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mStandard);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  mStandard);	  return    getInstance(pattern,    timeZone,    mRule,    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
452	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mValue);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mValue);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  mValue);	  return    getInstance(pattern,    timeZone,    mRule,    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
453	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mColon);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRule,  null,  mColon);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRule,  null,  mColon);	  return    getInstance(pattern,    timeZone,    mRule,    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
454	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  mColon);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  true,  mColon);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  true,  mColon);	  return    getInstance(pattern,    timeZone,    null,    false,    true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
455	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null);  }	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone),    null);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
456	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null,  mRules);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(getInstance(pattern,  timeZone),  null,  mRules);	  aughtExceptionHandler.handleMatcher(getInstance(pattern,    timeZone),    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
457	[BUG]  [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  mTimeZone);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  getInstance(pattern,  timeZone,  mTimeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  getInstance(pattern,  timeZone,  mTimeZone);	  Pattern    pattern    =    getInstance(pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
458	[BUG]  [BUGGY]  if(rule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(rule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(rule  ==  null)  {  if(timeZone  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
459	[BUG]  [BUGGY]  NumberRule  ruleRule  =  getInstance(pattern,  timeZone,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  NumberRule  ruleRule  =  getInstance(pattern,  timeZone,  null);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	NumberRule  ruleRule  =  getInstance(pattern,  timeZone,  null);	  if(mRule    ==    null)    {    if(timeZone    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
460	[BUG]  [BUGGY]  safeMultiply(pattern)  {  return  getInstance(pattern,  mTimeZone,  null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  safeMultiply(pattern)  {  return  getInstance(pattern,  mTimeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	safeMultiply(pattern)  {  return  getInstance(pattern,  mTimeZone,  null);  }	  safeMultiply(pattern)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
461	[BUG]  [BUGGY]  if(rule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(rule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(rule  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(mRule    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
462	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  this.rules);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  this.rules);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  this.rules);	  return    getInstance(pattern,    timeZone,    this.values);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
463	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  mMaxLengthEstimate,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  mMaxLengthEstimate,  mMinLengthEstimate);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  mMaxLengthEstimate,  mMinLengthEstimate);	  return    getInstance(pattern,    timeZone,    null,    mRules,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
464	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mStyle);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mStyle);	  return    getInstance(pattern,    timeZone,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
465	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone.getDefaultPattern());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone.getDefaultPattern());  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mTimeZone.getDefaultPattern());	  return    getInstance(pattern,    timeZone,    mTimeZone);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
466	[BUG]  [BUGGY]  if(pattern!=  null  &&  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  &&  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  &&  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern!=    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
467	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mStandard);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  timeZone,  mStandard);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mDaylight);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
468	[BUG]  [BUGGY]  Pattern  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  	50	None	replace
469	[BUG]  [BUGGY]  Pattern  {  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  {  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  {  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
470	[BUG]  [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  FastDateFormat  getInstance(pattern,  timeZone,  mRules,  false);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	FastDateFormat  getInstance(pattern,  timeZone,  mRules,  false);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    false);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
471	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  mMaxLengthEstimate,  mMinLengthEstimate);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  mMaxLengthEstimate,  mMinLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  mMaxLengthEstimate,  mMinLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
472	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  mMinLengthEstimate,  mMaxLengthEstimate);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  =  Pattern.compile(mStyle,  mMinLengthEstimate,  mMaxLengthEstimate);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  =  Pattern.compile(mStyle,  mMinLengthEstimate,  mMaxLengthEstimate);	  Pattern    pattern    =    Pattern.compile(mStyle,    timeZone,    mMinLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
473	[BUG]  [BUGGY]  if(pattern!=  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern!=  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern!=  null  ||  timeZone  ==  null)  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    timeZone    ==    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
474	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mRule))  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mRule))  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(mRule))  {  return  getInstance(pattern,  timeZone);  }	  if(pattern    ==    null    ||    pattern.equals(timeZone))    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
475	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mDaylight);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mRule,  mMaxLengthEstimate,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mRule,    mMaxLengthEstimate);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
476	[BUG]  [BUGGY]  pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	pattern  ==  null  ||  pattern.equals(mValue))  {  return  getInstance(pattern,  timeZone,  null);  }	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
477	[BUG]  [BUGGY]  Pattern  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  pattern  ==  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  	25	None	replace
478	[BUG]  [BUGGY]  Pattern  {  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  Pattern  {  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	Pattern  {  null  ||  pattern  ==  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  pattern    ==    null    ||    pattern    ==    null)    {    return    getInstance(pattern,    timeZone,    null);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
479	[BUG]  [BUGGY]  while(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
480	[BUG]  [BUGGY]  while(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  while(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	while(timeZone!=  null)  {  return  getInstance(pattern,  timeZone,  null);  }	  if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
481	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  rules,  null,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mRules,  rules,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mRules,  rules,  null,  true);	  return    getInstance(pattern,    timeZone,    mRules,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
482	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mValue,  pattern,  timeZone);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(mValue,  pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(mValue,  pattern,  timeZone);	  if(pattern!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
483	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(mValues,  pattern,  timeZone);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(mValues,  pattern,  timeZone);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(mValues,  pattern,  timeZone);	  if(pattern!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
484	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone,  null,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone,  null,  false);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mTimeZone,  null,  false);	  return    getInstance(pattern,    timeZone,    mColon,    null,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
485	[BUG]  [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone,  0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  char  pattern  =  getInstance(pattern,  timeZone,  0);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	char  pattern  =  getInstance(pattern,  timeZone,  0);	  String    pattern    =    getInstance(pattern,    timeZone,    0);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
486	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  }  else  {  return  getInstance(pattern,  timeZone,  null);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  }  else  {  return  getInstance(pattern,  timeZone,  null);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(mRules,  pattern,  timeZone);  }  else  {  return  getInstance(pattern,  timeZone,  null);  }	  aughtExceptionHandler.handleMatcher(mRules,    pattern,    timeZone);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
487	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  mRules);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  null,  mRules);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
488	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  mValues);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  mValues);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  null,  mValues);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
489	[BUG]  [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  mStandard);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  profile  =  getInstance(pattern,  timeZone,  null,  mStandard);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	profile  =  getInstance(pattern,  timeZone,  null,  mStandard);	  profile    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
490	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(timeZone))  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(timeZone))  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(pattern  ==  null  ||  pattern.equals(timeZone))  {  if(timeZone  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(pattern    ==    null)    {    if(timeZone    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
491	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mRule);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mRule);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mRule);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
492	[BUG]  [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mStyle);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mStyle);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	MutablePattern  <  NumberRule>  p  =  getInstance(pattern,  timeZone,  null,  mStyle);	  MutablePattern    <    NumberRule>    p    =    getInstance(pattern,    timeZone,    null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
493	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mStandard,  mDaylight);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  null,  mValues,  mStandard,  mDaylight);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  null,  mValues,  mStandard,  mDaylight);	  return    getInstance(pattern,    timeZone,    null,    mValues,    mStandard);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
494	[BUG]  [BUGGY]  if(mTimeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  if(mTimeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	if(mTimeZone  ==  null)  {  if(timeZone!=  null)  {  return  getInstance(pattern,  timeZone);  }	  if(timeZone    ==    null)    {    if(timeZone!=    null)    {    return    getInstance(pattern,    timeZone);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
495	[BUG]  [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone,  null,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  return  getInstance(pattern,  timeZone,  mTimeZone,  null,  true);  [BUGGY]      }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	return  getInstance(pattern,  timeZone,  mTimeZone,  null,  true);	  return    getInstance(pattern,    timeZone,    mColon,    null,    false);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
496	[BUG]  [BUGGY]  SimpleDateFormat  getInstance(pattern,  timeZone,  null,  true);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  SimpleDateFormat  getInstance(pattern,  timeZone,  null,  true);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	SimpleDateFormat  getInstance(pattern,  timeZone,  null,  true);	  FastDateFormat    getInstance(pattern,    timeZone,    null,    true);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
497	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null,  mRules);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  static  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone)  {      [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null,  mRules);  [BUGGY]      return  getInstance(pattern,  timeZone,  null);  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.7071067811865475	182	182	1	replace	aughtExceptionHandler.handleMatcher(pattern,  timeZone,  null,  mRules);	  aughtExceptionHandler.handleMatcher(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
