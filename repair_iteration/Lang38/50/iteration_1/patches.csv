bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(format,  emptyFormat);  }	      cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  	1	None	replace
2	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  cInstanceCache.put(format,  emptyFormat);  }	      cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  	1	None	replace
3	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format    ==    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	7	None	replace
4	[BUG]  [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format    ==    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format    ==    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
7	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  safeFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	safeFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
8	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
9	[BUG]  [BUGGY]  Format.set(format,  values[i]);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format.set(format,  values[i]);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  values[i]);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat.getInstance();  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  emptyFormat.getInstance();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  emptyFormat.getInstance();	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
11	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  emptyFormat;  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  emptyFormat;	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
12	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
13	[BUG]  [BUGGY]  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
14	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
15	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
16	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
17	[BUG]  [BUGGY]  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
18	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
19	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
20	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  format);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  format);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(format,  format);  }	      cInstanceCache.put(format,    format);    	non-compiled	[CE]  	2	None	replace
21	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  cInstanceCache.put(format,  format);  }	      cInstanceCache.put(format,    format);    	non-compiled	[CE]  	2	None	replace
22	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  cInstanceCache.get(emptyFormat);	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
26	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.isEmpty();  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  emptyFormat  =  format.isEmpty();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.isEmpty();	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
27	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.get();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  emptyFormat  =  format.get();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.get();	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
28	[BUG]  [BUGGY]  vice.init(cInstanceCache);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  vice.init(cInstanceCache);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vice.init(cInstanceCache);	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
29	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.throwAsIOException( " ");	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
31	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.throwInternal();	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
32	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(format,  locale);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.handleMatcher(format,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMatcher(format,  locale);	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
33	[BUG]  [BUGGY]  Locale  locale  =  locale.getDefault();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Locale  locale  =  locale.getDefault();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  Locale  locale  =  getLocale();  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Locale  locale  =  getLocale();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  getLocale();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  	5	None	replace
35	[BUG]  [BUGGY]  Locale  locale  =  locale.getLocale();  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Locale  locale  =  locale.getLocale();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale.getLocale();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  	5	None	replace
36	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  pattern,  locale);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  pattern,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  pattern,  locale);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
37	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  locale);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  locale);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
38	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(mValues);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
39	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }	      cInstanceCache.put(emptyFormat,    format);    	non-compiled	[CE]  	10	None	replace
40	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  cInstanceCache.put(emptyFormat,  format);  }	      cInstanceCache.put(emptyFormat,    format);    	non-compiled	[CE]  	10	None	replace
41	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  cInstanceCache.put(emptyFormat);  }	      cInstanceCache.put(emptyFormat);    	non-compiled	[CE]  	14	None	replace
42	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(emptyFormat);  }	      cInstanceCache.put(emptyFormat);    	non-compiled	[CE]  	14	None	replace
43	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	8	None	replace
45	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	8	None	replace
46	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(emptyFormat,  format);  }  else  {  cInstanceCache.put(format,  format);  }	      cInstanceCache.put(emptyFormat,    format);    	non-compiled	[CE]  	10	None	replace
47	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  cInstanceCache.put(format,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  cInstanceCache.put(format,  format);  }  else  {  cInstanceCache.put(format,  format);  }	      cInstanceCache.put(format,    format);    	non-compiled	[CE]  	2	None	replace
48	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(i);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  Integer>  format  =  mValues.get(i);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(i);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
49	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
50	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(i);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  Integer>  format  =  mRules.get(i);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(i);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  mRules.get(c);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  FastDate>  format  =  mRules.get(c);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  mRules.get(c);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
52	[BUG]  [BUGGY]  Format  <?>  format  =  mRules.get(c);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  mRules.get(c);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  mRules.get(c);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
53	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(c);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(c);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cInstanceCache.get(c);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
54	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	6	None	replace
55	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	6	None	replace
56	[BUG]  [BUGGY]  Format.set(format,  values[i],  values[i]);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format.set(format,  values[i],  values[i]);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  values[i],  values[i]);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
57	[BUG]  [BUGGY]  Format.set(i,  values[i],  values[i]);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format.set(i,  values[i],  values[i]);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(i,  values[i],  values[i]);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
58	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
59	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  format;  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  format;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty())  {  return  format;  }	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
60	[BUG]  [BUGGY]  Format  <?>  format  =!format.isEmpty();  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =!format.isEmpty();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isEmpty();	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
61	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty())  {  return  Format;  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(!format.isEmpty())  {  return  Format;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty())  {  return  Format;  }	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
62	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty())  {  return  emptyFormat;  }	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
63	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
64	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.equals(emptyFormat))  {  return  emptyFormat;  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  if(!format.equals(emptyFormat))  {  return  emptyFormat;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.equals(emptyFormat))  {  return  emptyFormat;  }	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
65	[BUG]  [BUGGY]  Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [Delete]  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [Delete]  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [Delete]	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
66	[BUG]  [BUGGY]  Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  >>  [Delete]  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  >>  [Delete]  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  >>  [Delete]	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
67	[BUG]  [BUGGY]  Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta!=  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta!=  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  {  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta!=	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
68	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
69	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
70	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
71	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	6	None	replace
72	[BUG]  [BUGGY]  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	6	None	replace
73	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  values[i]);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  values[i]);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  values[i]);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i],    values[i]);    }    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMoreGuaranteed();	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  locale);	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
76	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(format);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.handleMissingClass(format);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingClass(format);	      if(format!=    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	15	None	replace
77	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format    ==    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	7	None	replace
78	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);	  if(format    ==    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	7	None	replace
79	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(format);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  aughtExceptionHandler.handleMissingValue(format);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingValue(format);	      if(format!=    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	13	None	replace
80	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
81	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	9	None	replace
82	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	11	None	replace
83	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]    cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	8	None	replace
84	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i]);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i]);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  values[i]);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
85	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(i);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <  String,  Object>  format  =  format.get(i);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(i);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
86	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(i);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  <?>  format  =  format.get(i);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.get(i);	      if(format!=    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    format.set(i,    values[i]);    }    	non-compiled	[CE]  	3	None	replace
87	[BUG]  [BUGGY]  Format  Format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  Format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Format  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
88	[BUG]  [BUGGY]  Format  Formatter  formatter  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Format  Formatter  formatter  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Formatter  formatter  =  new  FastDateFormat(pattern,  timeZone,  locale);	      if(format!=    null)    {    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    }    	non-compiled	[CE]  	12	None	replace
89	[BUG]  [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  Locale.getDefault();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  Locale.getDefault();	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  	5	None	replace
90	[BUG]  [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;    [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [BUGGY]    format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;	      Locale    locale    =    Locale.getDefault();    	non-compiled	[CE]  	5	None	replace
