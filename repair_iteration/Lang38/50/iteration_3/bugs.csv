bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  value,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  value,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
2	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  value,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  value,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
3	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(format,  pattern,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(format,  pattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(format,  pattern,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
4	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  values,  locale);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  values,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  values,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
5	[BUG]  [BUGGY]  vice.init();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  vice.init();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vice.init();	  vice.init(cInstanceCache);    	non-compiled	[CE]  	28	None	replace
6	[BUG]  [BUGGY]  vice.setCurrentLocale(locale);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  vice.setCurrentLocale(locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vice.setCurrentLocale(locale);	  vice.init(cInstanceCache);    	non-compiled	[CE]  	28	None	replace
7	[BUG]  [BUGGY]  vice.init(format);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  vice.init(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vice.init(format);	  vice.init(cInstanceCache);    	non-compiled	[CE]  	28	None	replace
8	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.get(0);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  	86	None	replace
9	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(i  +  1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(i  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.get(i  +  1);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  	86	None	replace
10	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(null);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.get(null);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  	86	None	replace
11	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(mValue);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(mValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.get(mValue);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  	86	None	replace
12	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.isEmpty()?  Format  :  null;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.isEmpty()?  Format  :  null;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.isEmpty()?  Format  :  null;	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
13	[BUG]  [BUGGY]  Format  <  T>format  =  cInstanceCache.get(emptyFormat);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  T>format  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  T>format  =  cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
14	[BUG]  [BUGGY]  Format  <?>  format  =!format.isEmpty()  :  Format;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =!format.isEmpty()  :  Format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isEmpty()  :  Format;	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
15	[BUG]  [BUGGY]  if(format!=  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	72	None	replace
16	[BUG]  [BUGGY]  if(format  ==  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	72	None	replace
17	[BUG]  [BUGGY]  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(pattern,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(pattern,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(pattern,  format);	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	72	None	replace
18	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMissingValue(format);  }	  aughtExceptionHandler.handleMissingValue(format);    	non-compiled	[CE]  	79	None	replace
19	[BUG]  [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  aughtExceptionHandler.handleMissingValue(format);  }	  aughtExceptionHandler.handleMissingValue(format);    	non-compiled	[CE]  	79	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(format,  locale);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingValue(format,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingValue(format,  locale);	  aughtExceptionHandler.handleMissingValue(format);    	non-compiled	[CE]  	79	None	replace
21	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	15	None	replace
22	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	15	None	replace
23	[BUG]  [BUGGY]  Format  <?>  cInstanceCache.put(format,  format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache.put(format,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  cInstanceCache.put(format,  format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	20	None	replace
24	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  cInstanceCache.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  cInstanceCache.get(format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	20	None	replace
25	[BUG]  [BUGGY]  vices.put(format,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  vices.put(format,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vices.put(format,  format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	20	None	replace
26	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(form);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  cInstanceCache.get(form);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  cInstanceCache.get(form);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	20	None	replace
27	[BUG]  [BUGGY]  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta	  Format    {    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta!=    	non-compiled	[CE]  	67	None	replace
28	[BUG]  [BUGGY]  represent  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  represent  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	represent  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta	  Format    {    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta!=    	non-compiled	[CE]  	67	None	replace
29	[BUG]  [BUGGY]  reprezintă  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  reprezintă  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	reprezintă  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta	  Format    {    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta!=    	non-compiled	[CE]  	67	None	replace
30	[BUG]  [BUGGY]  représente  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  représente  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	représente  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta  reprezinta	  Format    {    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta    reprezinta!=    	non-compiled	[CE]  	67	None	replace
31	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  emptyFormat);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  emptyFormat);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	44	None	replace
32	[BUG]  [BUGGY]  Format  oneInstanceCache.put(format,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  oneInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  oneInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	44	None	replace
33	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mValues,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mValues,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  mValues,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  	36	None	replace
34	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  timeZone,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  	36	None	replace
35	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  pattern,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  pattern,  timeZone,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  	36	None	replace
36	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache.put(format,  emptyFormat);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache.put(format,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  cInstanceCache.put(format,  emptyFormat);	  if(format    ==    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	2	None	replace
37	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache.put(emptyFormat,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache.put(emptyFormat,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  cInstanceCache.put(emptyFormat,  format);	  if(format    ==    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	2	None	replace
38	[BUG]  [BUGGY]  Format  <?>  temp  =  cInstanceCache.get(emptyFormat);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  temp  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  temp  =  cInstanceCache.get(emptyFormat);	  if(format    ==    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	2	None	replace
39	[BUG]  [BUGGY]  Format  <?>  temp  =  cInstanceCache.get(temp);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  temp  =  cInstanceCache.get(temp);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  temp  =  cInstanceCache.get(temp);	  if(format    ==    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	2	None	replace
40	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	43	None	replace
41	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	45	None	replace
42	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	45	None	replace
43	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format;    }    	non-compiled	[CE]  	82	None	replace
44	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;	  Locale    locale    =    locale    ==    null?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  	90	None	replace
45	[BUG]  [BUGGY]  Format.set(mValues,  values[i],  values[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(mValues,  values[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(mValues,  values[i],  values[i]);	  Format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	57	None	replace
46	[BUG]  [BUGGY]  Format.set(i,  mValues[i],  values[i]);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(i,  mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(i,  mValues[i],  values[i]);	  Format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	57	None	replace
47	[BUG]  [BUGGY]  Format.set(i,  mValues[i],  mValues[i]);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(i,  mValues[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(i,  mValues[i],  mValues[i]);	  Format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	57	None	replace
48	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  mRules.get(format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  mRules.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  mRules.get(format);	  Format    <    FastDate>    format    =    mRules.get(c);    	non-compiled	[CE]  	51	None	replace
49	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cRules.get(false);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cRules.get(false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cRules.get(false);	  Format    <    FastDate>    format    =    mRules.get(c);    	non-compiled	[CE]  	51	None	replace
50	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cRules.get(mValue);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cRules.get(mValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cRules.get(mValue);	  Format    <    FastDate>    format    =    mRules.get(c);    	non-compiled	[CE]  	51	None	replace
51	[BUG]  [BUGGY]  Locale  locale  =  getDefaultLocale();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  getDefaultLocale();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  getDefaultLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  	34	None	replace
52	[BUG]  [BUGGY]  Locale  locale  =  getLocale(timeZone);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  getLocale(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  getLocale(timeZone);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  	34	None	replace
53	[BUG]  [BUGGY]  Locale  locale  =  getLocale(TimeZone.getDefault());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  getLocale(TimeZone.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  getLocale(TimeZone.getDefault());	  Locale    locale    =    getLocale();    	non-compiled	[CE]  	34	None	replace
54	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.clone();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.clone();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.clone();	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  	40	None	replace
55	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.init();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.init();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.init();	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  	40	None	replace
56	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  format.init();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();	  Format    cInstanceCache    =    format.init();//    convert    shell    format    into    UsableOne    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	78	None	replace
57	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(pattern,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(pattern,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(pattern,  format);	  Format    cInstanceCache    =    format.init();//    convert    shell    format    into    UsableOne    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	78	None	replace
58	[BUG]  [BUGGY]  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	87	None	replace
59	[BUG]  [BUGGY]  Format  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	87	None	replace
60	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	87	None	replace
61	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  SafeFormat  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  SafeFormat  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	SafeFormat  safeFormat  =  new  FastDateFormat(format,  timeZone,  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  aughtExceptionHandler.handleInternal();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleInternal();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleInternal();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  	31	None	replace
64	[BUG]  [BUGGY]  aughtExceptionHandler.start();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.start();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.start();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  	31	None	replace
65	[BUG]  [BUGGY]  aughtExceptionHandler.warning( "mRule  not  initialized. ");  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.warning( "mRule  not  initialized. ");  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.warning( "mRule  not  initialized. ");	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  	31	None	replace
66	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	12	None	replace
67	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  cInstanceCache.get(emptyFormat);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat);    }    	non-compiled	[CE]  	42	None	replace
68	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache.put(emptyFormat);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache.put(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  cInstanceCache.put(emptyFormat);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat);    }    	non-compiled	[CE]  	42	None	replace
69	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  cInstanceCache.put(emptyFormat);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  cInstanceCache.put(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  cInstanceCache.put(emptyFormat);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat);    }    	non-compiled	[CE]  	42	None	replace
70	[BUG]  [BUGGY]  Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    c    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	17	None	replace
71	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    c    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	17	None	replace
72	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	18	None	replace
73	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	18	None	replace
74	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.isEmpty()  +  1;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.isEmpty()  +  1;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.isEmpty()  +  1;	  Format    <?>    emptyFormat    =    format.isEmpty();    	non-compiled	[CE]  	26	None	replace
75	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.removeFirst();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.removeFirst();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.removeFirst();	  Format    <?>    emptyFormat    =    format.isEmpty();    	non-compiled	[CE]  	26	None	replace
76	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mValues);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  mValues);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
77	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  mValues);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  mValues);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
78	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
79	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  value);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
80	[BUG]  [BUGGY]  Format.set(format,  mValues[i],  values[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  mValues[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  	56	None	replace
81	[BUG]  [BUGGY]  Format.set(mValues[i],  values[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(mValues[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  	56	None	replace
82	[BUG]  [BUGGY]  Format.set(format,  mValues[i],  mValues[i]);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  mValues[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  mValues[i],  mValues[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  	56	None	replace
83	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(0,  values[i]);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(0,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(0,  values[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
84	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(mValues,  values[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(mValues,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(mValues,  values[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
85	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[0]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[0]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  values[0]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
86	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  locale.getLocale()  :  locale.getDefault();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  locale!=  null?  locale.getLocale()  :  locale.getDefault();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale!=  null?  locale.getLocale()  :  locale.getDefault();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  	33	None	replace
87	[BUG]  [BUGGY]  if(format.init()  &&  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format.init()  &&  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format.init()  &&  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    if(format.init()    ||    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	4	None	replace
88	[BUG]  [BUGGY]  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    if(format.init()    ||    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	4	None	replace
89	[BUG]  [BUGGY]  if(format.init()  &&  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format.init()  &&  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format.init()  &&  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    if(format.init()    ||    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	4	None	replace
90	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(format,  timeZone,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(format,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  getInstance(format,  timeZone,  locale);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  	5	None	replace
91	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  	5	None	replace
92	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	16	None	replace
93	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	19	None	replace
94	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	19	None	replace
95	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(0);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  	85	None	replace
96	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(i  +  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(i  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(i  +  1);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  	85	None	replace
97	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(mValue);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(mValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(mValue);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  	85	None	replace
98	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(null);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(null);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  	85	None	replace
99	[BUG]  [BUGGY]  Format  cInstanceCache  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	3	None	replace
100	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();  }  else  {  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();  }  else  {  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();  }  else  {  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	3	None	replace
101	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	30	None	replace
102	[BUG]  [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	30	None	replace
103	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
104	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(format,  emptyFormat);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMatcher(format,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMatcher(format,  emptyFormat);	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
105	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMatcher(pattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMatcher(pattern,  locale);	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
106	[BUG]  [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
107	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format.get();    }    	non-compiled	[CE]  	70	None	replace
108	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format.get();    }    	non-compiled	[CE]  	70	None	replace
109	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	14	None	replace
110	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	14	None	replace
111	[BUG]  [BUGGY]  Format  cInstanceCache  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	54	None	replace
112	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	54	None	replace
113	[BUG]  [BUGGY]  Locale  locale  =  locale.getDefaultLocale();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  locale.getDefaultLocale();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale.getDefaultLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  	35	None	replace
114	[BUG]  [BUGGY]  Locale  locale  =  mRules.getLocale();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  mRules.getLocale();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  mRules.getLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  	35	None	replace
115	[BUG]  [BUGGY]  Locale  locale  =  format.getLocale();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  format.getLocale();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  format.getLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  	35	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMoreGuaranteed(format);	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  	74	None	replace
117	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(mRules);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(mRules);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMoreGuaranteed(mRules);	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  	74	None	replace
118	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ",  format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ",  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.throwAsIOException( " ",  format);	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  	29	None	replace
119	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( ", ");  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.throwAsIOException( ", ");  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.throwAsIOException( ", ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  	29	None	replace
120	[BUG]  [BUGGY]  Format  <?>  format  =  format.getInstance();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.getInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.getInstance();	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
121	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat.getInstanceUTC();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  emptyFormat.getInstanceUTC();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  emptyFormat.getInstanceUTC();	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
122	[BUG]  [BUGGY]  Format  <?>  format  =  this.emptyFormat.getInstance();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  this.emptyFormat.getInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  this.emptyFormat.getInstance();	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
123	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	55	None	replace
124	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	55	None	replace
125	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  Locale.getDefault();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale!=  null?  Locale.getDefault()  :  Locale.getDefault();	  Locale    locale    =    locale    ==    null?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  	89	None	replace
126	[BUG]  [BUGGY]  Format.set(format,  mValues[i]);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  mValues[i]);	  Format.set(format,    values[i]);    	non-compiled	[CE]  	9	None	replace
127	[BUG]  [BUGGY]  Format.set(mValues,  values[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(mValues,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(mValues,  values[i]);	  Format.set(format,    values[i]);    	non-compiled	[CE]  	9	None	replace
128	[BUG]  [BUGGY]  Format.set(format,  values[0]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  values[0]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  values[0]);	  Format.set(format,    values[i]);    	non-compiled	[CE]  	9	None	replace
129	[BUG]  [BUGGY]  Format.set(values,  format[i]);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(values,  format[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(values,  format[i]);	  Format.set(format,    values[i]);    	non-compiled	[CE]  	9	None	replace
130	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	6	None	replace
131	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	6	None	replace
132	[BUG]  [BUGGY]  Format  format  =  format.get(emptyFormat);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format.get(emptyFormat);	  Format    format    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  	25	None	replace
133	[BUG]  [BUGGY]  Format  format  =  format.get(cInstanceCache);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.get(cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format.get(cInstanceCache);	  Format    format    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  	25	None	replace
134	[BUG]  [BUGGY]  Format  format  =  format.get();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.get();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format.get();	  Format    format    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  	25	None	replace
135	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(format);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mRules.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(format);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
136	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(size);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mRules.get(size);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(size);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
137	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(i  +  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mRules.get(i  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(i  +  1);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
138	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(0);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mRules.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(0);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
139	[BUG]  [BUGGY]  Format  <?>  cInstanceCache  =  new  FastDateFormat(format,  locale);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache  =  new  FastDateFormat(format,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  cInstanceCache  =  new  FastDateFormat(format,  locale);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	47	None	replace
140	[BUG]  [BUGGY]  Format  <?>  cInstanceCache  =  new  FastDateFormat(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache  =  new  FastDateFormat(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  cInstanceCache  =  new  FastDateFormat(format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	47	None	replace
141	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	68	None	replace
142	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  locale);	  Format    format    =    new    FastDateFormat(mValues,    locale);    	non-compiled	[CE]  	37	None	replace
143	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  location,  locale);	  Format    format    =    new    FastDateFormat(mValues,    locale);    	non-compiled	[CE]  	37	None	replace
144	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cInstanceCache.get(format);	  Format    <    FastDate>    format    =    cInstanceCache.get(c);    	non-compiled	[CE]  	53	None	replace
145	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(false);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cInstanceCache.get(false);	  Format    <    FastDate>    format    =    cInstanceCache.get(c);    	non-compiled	[CE]  	53	None	replace
146	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cInstanceCache.get(0);	  Format    <    FastDate>    format    =    cInstanceCache.get(c);    	non-compiled	[CE]  	53	None	replace
147	[BUG]  [BUGGY]  Format  <?>  format  =  null  ||!format.isEmpty();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  null  ||!format.isEmpty();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  null  ||!format.isEmpty();	  Format    <?>    format    =!format.isEmpty();    	non-compiled	[CE]  	60	None	replace
148	[BUG]  [BUGGY]  Format  <?>  format  =  mRules.isEmpty();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  mRules.isEmpty();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  mRules.isEmpty();	  Format    <?>    format    =!format.isEmpty();    	non-compiled	[CE]  	60	None	replace
149	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(0,  values[i],  values[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(0,  values[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(0,  values[i],  values[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	73	None	replace
150	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(mValues[i],  values[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(mValues[i],  values[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	73	None	replace
151	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i],  values[i]);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i],  values[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	73	None	replace
152	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[0],  values[1]);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[0],  values[1]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  values[0],  values[1]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	73	None	replace
153	[BUG]  [BUGGY]  Format  <?>  format  =  mRules.get(format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  mRules.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  mRules.get(format);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
154	[BUG]  [BUGGY]  Format  <?>  format  =  c.get(mRules);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  c.get(mRules);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  c.get(mRules);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
155	[BUG]  [BUGGY]  Format  <?>  format  =  cRules.get(mRules);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  cRules.get(mRules);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  cRules.get(mRules);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
156	[BUG]  [BUGGY]  Format  <?>  format  =  c.getRules();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  c.getRules();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  c.getRules();	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
157	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  TimeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  TimeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  TimeZone,  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  	8	None	replace
158	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  cInstanceCache.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  cInstanceCache.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	71	None	replace
159	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	80	None	replace
160	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	80	None	replace
161	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();  }  else  {  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();  }  else  {  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();  }  else  {  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	22	None	replace
162	[BUG]  [BUGGY]  parent!=  null  &&!parent.equals(emptyFormat))  {  return  emptyFormat;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&!parent.equals(emptyFormat))  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	parent!=  null  &&!parent.equals(emptyFormat))  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.equals(emptyFormat))    {    return    emptyFormat;    }    	non-compiled	[CE]  	64	None	replace
163	[BUG]  [BUGGY]  parent!=  null  &&!parent.equals(format))  {  return  emptyFormat;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&!parent.equals(format))  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	parent!=  null  &&!parent.equals(format))  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.equals(emptyFormat))    {    return    emptyFormat;    }    	non-compiled	[CE]  	64	None	replace
164	[BUG]  [BUGGY]  parent!=  null  &&!parent.equals(emptyFormat);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent!=  null  &&!parent.equals(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	parent!=  null  &&!parent.equals(emptyFormat);	  if(format!=    null)    {    if(!format.equals(emptyFormat))    {    return    emptyFormat;    }    	non-compiled	[CE]  	64	None	replace
165	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  locale);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
166	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  false);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  false);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
167	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  1);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
168	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	58	None	replace
169	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	58	None	replace
170	[BUG]  [BUGGY]  if(format!=  null)  {  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  Format    cInstanceCache    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	77	None	replace
171	[BUG]  [BUGGY]  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	cInstanceCache  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  Format    cInstanceCache    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	77	None	replace
172	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.get(0);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.get(0);	  Format    <?>    emptyFormat    =    format.get();    	non-compiled	[CE]  	27	None	replace
173	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.remove();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.remove();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.remove();	  Format    <?>    emptyFormat    =    format.get();    	non-compiled	[CE]  	27	None	replace
174	[BUG]  [BUGGY]  Format  <?>  format  =  format;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
175	[BUG]  [BUGGY]  Format  <?>  format  =  emptyFormat.cloneTree();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  emptyFormat.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  emptyFormat.cloneTree();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
176	[BUG]  [BUGGY]  Format  <?>  format  =  null;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  null;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  null;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
177	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <  Object>();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
178	[BUG]  [BUGGY]  cast(cInstanceCache,  format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(cInstanceCache,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	cast(cInstanceCache,  format);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
179	[BUG]  [BUGGY]  cast(cInstanceCache.get(format));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(cInstanceCache.get(format));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	cast(cInstanceCache.get(format));	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
180	[BUG]  [BUGGY]  cast(cInstanceCache.get(format),  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(cInstanceCache.get(format),  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	cast(cInstanceCache.get(format),  format);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
181	[BUG]  [BUGGY]  cast(cInstanceCache.get(format),  format,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  cast(cInstanceCache.get(format),  format,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	cast(cInstanceCache.get(format),  format,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
182	[BUG]  [BUGGY]  Format  <?>  cInstanceCache.put(format,  emptyFormat);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache.put(format,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  cInstanceCache.put(format,  emptyFormat);	  if(format!=    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	1	None	replace
183	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    c    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	13	None	replace
184	[BUG]  [BUGGY]  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  c  =  new  FastDateFormat(pattern,  timeZone,  locale);	  Format    c    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	13	None	replace
185	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
186	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  &&  format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  &&  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  &&  format.isEmpty())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
187	[BUG]  [BUGGY]  ||  format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  ||  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	||  format.isEmpty())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
188	[BUG]  [BUGGY]  Format  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  formatter  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Formatter    formatter    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	88	None	replace
189	[BUG]  [BUGGY]  Format  formatter  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  formatter  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  formatter  =  new  FastDateFormat(pattern,  timeZone,  locale);	  Format    Formatter    formatter    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	88	None	replace
190	[BUG]  [BUGGY]  Formatter  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Formatter  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Formatter  formatter  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Formatter    formatter    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	88	None	replace
191	[BUG]  [BUGGY]  Format  Formatter  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Formatter  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Formatter  formatter  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Formatter    formatter    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	88	None	replace
192	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingClass(format);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingClass(format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMissingClass(format);  }	  aughtExceptionHandler.handleMissingClass(format);    	non-compiled	[CE]  	76	None	replace
193	[BUG]  [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMissingClass(format);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMissingClass(format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  aughtExceptionHandler.handleMissingClass(format);  }	  aughtExceptionHandler.handleMissingClass(format);    	non-compiled	[CE]  	76	None	replace
194	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(format,  locale);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingClass(format,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingClass(format,  locale);	  aughtExceptionHandler.handleMissingClass(format);    	non-compiled	[CE]  	76	None	replace
195	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mValues.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(format);	  Format    <    Integer>    format    =    mValues.get(i);    	non-compiled	[CE]  	48	None	replace
196	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(0);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mValues.get(0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(0);	  Format    <    Integer>    format    =    mValues.get(i);    	non-compiled	[CE]  	48	None	replace
197	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(i  +  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mValues.get(i  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(i  +  1);	  Format    <    Integer>    format    =    mValues.get(i);    	non-compiled	[CE]  	48	None	replace
198	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(values[i]);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mValues.get(values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(values[i]);	  Format    <    Integer>    format    =    mValues.get(i);    	non-compiled	[CE]  	48	None	replace
199	[BUG]  [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.MAX_VALUE);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.MAX_VALUE);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.MAX_VALUE);	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
200	[BUG]  [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.MAX_VALUE,  Integer.MAX_VALUE);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.MAX_VALUE,  Integer.MAX_VALUE);	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
201	[BUG]  [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.parseInt(mValue));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.parseInt(mValue));  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(Integer.parseInt(mValue));	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
202	[BUG]  [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(intValue);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(intValue);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  new  FastDateFormat  <  Integer>(intValue);	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
203	[BUG]  [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    emptyFormat;    }    	non-compiled	[CE]  	69	None	replace
204	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();  break  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();  break  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();  break  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	23	None	replace
205	[BUG]  [BUGGY]  Format  <  NumberRule  ==  false)  {  if(format!=  null)  {  format.init();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule  ==  false)  {  if(format!=  null)  {  format.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  NumberRule  ==  false)  {  if(format!=  null)  {  format.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
206	[BUG]  [BUGGY]  Format  <  Integer>  format  =  cInstanceCache.get(intValue);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  cInstanceCache.get(intValue);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  cInstanceCache.get(intValue);	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
207	[BUG]  [BUGGY]  Format  <  Integer>  format  =  cInstanceCache.get(emptyFormat);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  cInstanceCache.get(emptyFormat);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
208	[BUG]  [BUGGY]  Format  <  Integer>  format  =  cInstanceCache.get(new  Integer(format));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  cInstanceCache.get(new  Integer(format));  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  cInstanceCache.get(new  Integer(format));	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
209	[BUG]  [BUGGY]  Format  Format  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Format  formatter  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Formatter    formatter    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	88	None	replace
210	[BUG]  [BUGGY]  FastDateFormat  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  FastDateFormat  formatter  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	FastDateFormat  formatter  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Formatter    formatter    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	88	None	replace
211	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	43	None	replace
212	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.throwAsIOException( " ");  }	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  	29	None	replace
213	[BUG]  [BUGGY]  Format  <  Integer>  format  =  cRules.get(i);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  cRules.get(i);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  cRules.get(i);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
214	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(form);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mRules.get(form);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(form);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
215	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
216	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache  =  new  FastDateFormat  <  N,  V>();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache  =  new  FastDateFormat  <  N,  V>();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  cInstanceCache  =  new  FastDateFormat  <  N,  V>();	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
217	[BUG]  [BUGGY]  Format  <  N,>  cInstanceCache.put(emptyFormat,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,>  cInstanceCache.put(emptyFormat,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,>  cInstanceCache.put(emptyFormat,  format);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
218	[BUG]  [BUGGY]  vice.setTimeZone(timeZone);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  vice.setTimeZone(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vice.setTimeZone(timeZone);	  vice.init(cInstanceCache);    	non-compiled	[CE]  	28	None	replace
219	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  timeZone,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  pattern,  timeZone,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
220	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  timeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  timeZone,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
221	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	6	None	replace
222	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	6	None	replace
223	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	safeFormat  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	7	None	replace
224	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	3	None	replace
225	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  to  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  to  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  emptyFormat.init();//  convert  shell  format  to  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	3	None	replace
226	[BUG]  [BUGGY]  aughtExceptionHandler.init(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.init(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.init(format);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  	31	None	replace
227	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.toArray(new  Format[format.size()  ]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  emptyFormat  =  format.toArray(new  Format[format.size()  ]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  emptyFormat  =  format.toArray(new  Format[format.size()  ]);	  Format    <?>    emptyFormat    =    format.isEmpty();    	non-compiled	[CE]  	26	None	replace
228	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  initFormat();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  initFormat();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  initFormat();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	55	None	replace
229	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    cInstanceCache    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	19	None	replace
230	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format;    }    	non-compiled	[CE]  	82	None	replace
231	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale.getLocale();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale.getLocale();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale.getLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  	35	None	replace
232	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(values);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(values);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(values);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
233	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mDaylight);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  mDaylight);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  mDaylight);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
234	[BUG]  [BUGGY]  Format  <?>  format  =!format.isNullOrEmpty();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =!format.isNullOrEmpty();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isNullOrEmpty();	  Format    <?>    format    =!format.isEmpty();    	non-compiled	[CE]  	60	None	replace
235	[BUG]  [BUGGY]  Format  <?>  format  =  format.get(intValue);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.get(intValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.get(intValue);	  Format    <?>    format    =    format.get(i);    	non-compiled	[CE]  	86	None	replace
236	[BUG]  [BUGGY]  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);	  Format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	72	None	replace
237	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	83	None	replace
238	[BUG]  [BUGGY]  Format  one  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  one  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  one  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	83	None	replace
239	[BUG]  [BUGGY]  Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  c  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    c    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	17	None	replace
240	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>(format);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <  Object>(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <  Object>(format);	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
241	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
242	[BUG]  [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
243	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(format,  timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMatcher(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMatcher(format,  timeZone,  locale);	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
244	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
245	[BUG]  [BUGGY]  Format  oneInstanceCache  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  oneInstance);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  oneInstanceCache  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  oneInstance);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  oneInstanceCache  =  emptyFormat.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  oneInstance);	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	22	None	replace
246	[BUG]  [BUGGY]  Format  {  cInstanceCache.put(format,  format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  cInstanceCache.put(format,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  {  cInstanceCache.put(format,  format);  }	  if(format    ==    null)    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	21	None	replace
247	[BUG]  [BUGGY]  Format  Format  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Format  =  new  FastDateFormat(format,  TimeZone.getDefault(),  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	87	None	replace
248	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	68	None	replace
249	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	68	None	replace
250	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	68	None	replace
251	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  emptyFormat;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    emptyFormat;    }    	non-compiled	[CE]  	69	None	replace
252	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(new  FastDateFormat(format,  locale));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(new  FastDateFormat(format,  locale));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cInstanceCache.get(new  FastDateFormat(format,  locale));	  Format    <    FastDate>    format    =    cInstanceCache.get(c);    	non-compiled	[CE]  	53	None	replace
253	[BUG]  [BUGGY]  Format  <  String,  Object>  format  =  format.get(intValue);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  Object>  format  =  format.get(intValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  Object>  format  =  format.get(intValue);	  Format    <    String,    Object>    format    =    format.get(i);    	non-compiled	[CE]  	85	None	replace
254	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  locale);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  locale);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
255	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  mRules.set(i,  values[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  mRules.set(i,  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  mRules.set(i,  values[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
256	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingException( " ",  format);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  	30	None	replace
257	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	44	None	replace
258	[BUG]  [BUGGY]  Format  one  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  one  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  one  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  one);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	44	None	replace
259	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	44	None	replace
260	[BUG]  [BUGGY]  Format.set(values[i],  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(values[i],  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(values[i],  format);	  Format.set(format,    values[i]);    	non-compiled	[CE]  	9	None	replace
261	[BUG]  [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	71	None	replace
262	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  else  {  cInstanceCache.put(format,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  cInstanceCache.put(format,  format);  }  else  {  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	47	None	replace
263	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);	  Format    cInstanceCache    =    format.init();//    convert    shell    format    into    UsableOne    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	78	None	replace
264	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  INSTANCE);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
265	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  timeZone);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  timeZone);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
266	[BUG]  [BUGGY]  Format  format  =  format!=  null?  format  :  cInstanceCache.get(emptyFormat);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format!=  null?  format  :  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format!=  null?  format  :  cInstanceCache.get(emptyFormat);	  Format    format    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  	25	None	replace
267	[BUG]  [BUGGY]  Format  format  =  format  ==  null?  format  :  cInstanceCache.get(emptyFormat);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format  ==  null?  format  :  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format  ==  null?  format  :  cInstanceCache.get(emptyFormat);	  Format    format    =    cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  	25	None	replace
268	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	45	None	replace
269	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cRules.get(format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cRules.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cRules.get(format);	  Format    <    FastDate>    format    =    mRules.get(c);    	non-compiled	[CE]  	51	None	replace
270	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format.get();    }    	non-compiled	[CE]  	70	None	replace
271	[BUG]  [BUGGY]  Format.set(values[i],  mValues[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(values[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(values[i],  mValues[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  	56	None	replace
272	[BUG]  [BUGGY]  Format.set(values[i],  values[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(values[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(values[i],  values[i]);	  Format.set(format,    values[i],    values[i]);    	non-compiled	[CE]  	56	None	replace
273	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	18	None	replace
274	[BUG]  [BUGGY]  if(format!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	18	None	replace
275	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  	74	None	replace
276	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  	74	None	replace
277	[BUG]  [BUGGY]  Format  <?>  format  =  cInstanceCache.get(mRules);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  cInstanceCache.get(mRules);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  cInstanceCache.get(mRules);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
278	[BUG]  [BUGGY]  Format  <?>  format  =  cRules.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  cRules.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  cRules.get(format);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
279	[BUG]  [BUGGY]  Format  <?>  format  =  cRules.get(mValue);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  cRules.get(mValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  cRules.get(mValue);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
280	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  format;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	59	None	replace
281	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals( " "))  {  return  format;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals( " "))  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals( " "))  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	59	None	replace
282	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	12	None	replace
283	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	12	None	replace
284	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  	5	None	replace
285	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  value,  locale);	  Format    format    =    new    FastDateFormat(mValues,    pattern,    locale);    	non-compiled	[CE]  	36	None	replace
286	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  Format;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(!format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  if(!format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
287	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  Format;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
288	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	80	None	replace
289	[BUG]  [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    if(format.init()    ||    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	4	None	replace
290	[BUG]  [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format.init()  ||  convert  shell  format  into  usable  one  cInstanceCache.get(format,  format);  }	  if(format!=    null)    {    if(format.init()    ||    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	4	None	replace
291	[BUG]  [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  Shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(format.init()  ||  convert  Shell  format  into  usable  one  cInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(format.init()  ||  convert  Shell  format  into  usable  one  cInstanceCache.put(format,  format);  }	  if(format!=    null)    {    if(format.init()    ||    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	4	None	replace
292	[BUG]  [BUGGY]  if(format  ==  null)  {  if(!format.equals(emptyFormat))  {  return  emptyFormat;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  if(!format.equals(emptyFormat))  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  if(!format.equals(emptyFormat))  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.equals(emptyFormat))    {    return    emptyFormat;    }    	non-compiled	[CE]  	64	None	replace
293	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.equals(mValues))  {  return  emptyFormat;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.equals(mValues))  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.equals(mValues))  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.equals(emptyFormat))    {    return    emptyFormat;    }    	non-compiled	[CE]  	64	None	replace
294	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	14	None	replace
295	[BUG]  [BUGGY]  Format  <?>  format  =  format.getInstance(Long.MAX_VALUE);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.getInstance(Long.MAX_VALUE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.getInstance(Long.MAX_VALUE);	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
296	[BUG]  [BUGGY]  Format  <?>  format  =  this.format.getInstance();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  this.format.getInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  this.format.getInstance();	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
297	[BUG]  [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format  ==  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    format;    }    	non-compiled	[CE]  	81	None	replace
298	[BUG]  [BUGGY]  Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  c  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    c    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	13	None	replace
299	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(value);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mValues.get(value);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(value);	  Format    <    Integer>    format    =    mValues.get(i);    	non-compiled	[CE]  	48	None	replace
300	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mValues.get(index);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mValues.get(index);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mValues.get(index);	  Format    <    Integer>    format    =    mValues.get(i);    	non-compiled	[CE]  	48	None	replace
301	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(format,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	16	None	replace
302	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	16	None	replace
303	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(timeZone,  locale);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(timeZone,  locale);	  Format    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  	8	None	replace
304	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i],  mValues[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i],  mValues[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	73	None	replace
305	[BUG]  [BUGGY]  Format  <  N,  V>  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  format  =  init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	54	None	replace
306	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	58	None	replace
307	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	58	None	replace
308	[BUG]  [BUGGY]  Format  <?>  format  =!format.isEmpty()  &&  format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =!format.isEmpty()  &&  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isEmpty()  &&  format.isEmpty())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
309	[BUG]  [BUGGY]  Format  <?>  format  =!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isEmpty()  ||  format.isEmpty())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
310	[BUG]  [BUGGY]  Format!=  null  {  if(format!=  null)  {  format.init();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format!=  null  {  if(format!=  null)  {  format.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format!=  null  {  if(format!=  null)  {  format.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
311	[BUG]  [BUGGY]  Format!=  null)  {  format  =  format.init();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format!=  null)  {  format  =  format.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format!=  null)  {  format  =  format.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
312	[BUG]  [BUGGY]  Format!=  null  {  if(format!=  null)  {  format  =  format.init();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format!=  null  {  if(format!=  null)  {  format  =  format.init();  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format!=  null  {  if(format!=  null)  {  format  =  format.init();  }	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
313	[BUG]  [BUGGY]  Format  <  NumberRule>  format  =  format.init();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  NumberRule>  format  =  format.init();  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  NumberRule>  format  =  format.init();	  if(format!=    null)    {    if(format!=    null)    {    format.init();    }    	non-compiled	[CE]  	24	None	replace
314	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(pattern,  timeZone,  locale);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingValue(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingValue(pattern,  timeZone,  locale);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
315	[BUG]  [BUGGY]  parent  =  cInstanceCache.get(format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  =  cInstanceCache.get(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	parent  =  cInstanceCache.get(format);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	46	None	replace
316	[BUG]  [BUGGY]  Format  <?>  cInstanceCache.put(emptyFormat,  format);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  cInstanceCache.put(emptyFormat,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  cInstanceCache.put(emptyFormat,  format);	  if(format!=    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	1	None	replace
317	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	12	None	replace
318	[BUG]  [BUGGY]  if(format!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  <?>  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  cInstanceCache.get(c);  }	  Format    <?>    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    cInstanceCache.get(c);    }    	non-compiled	[CE]  	14	None	replace
319	[BUG]  [BUGGY]  parent  ==  null  ||!parent.isEmpty())  {  return  format;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  ||!parent.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	parent  ==  null  ||!parent.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	59	None	replace
320	[BUG]  [BUGGY]  parent  ==  null  ||!format.isEmpty())  {  return  format;  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  parent  ==  null  ||!format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	parent  ==  null  ||!format.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	59	None	replace
321	[BUG]  [BUGGY]  Format  <?>  format  =!format.isEmpty())  {  return  format;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =!format.isEmpty())  {  return  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isEmpty())  {  return  format;  }	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    format;    }    	non-compiled	[CE]  	59	None	replace
322	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  formatInstanceCache.get(c);  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    formatInstanceCache.get(c);    }    	non-compiled	[CE]  	80	None	replace
323	[BUG]  [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  format.init();//  convert  shell  format  into  Usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	83	None	replace
324	[BUG]  [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  format.init();//  convert  shell  format  into  UsableOne  cInstanceCache.put(format,  format);	  Format    cInstanceCache    =    format.init();//    convert    shell    format    into    UsableOne    cInstanceCache.put(format,    format);    	non-compiled	[CE]  	78	None	replace
325	[BUG]  [BUGGY]  Format  oneInstanceCache.put(emptyFormat,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  oneInstanceCache.put(emptyFormat,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  oneInstanceCache.put(emptyFormat,  format);	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	22	None	replace
326	[BUG]  [BUGGY]  Format  one  =  cInstanceCache.get(emptyFormat);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  one  =  cInstanceCache.get(emptyFormat);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  one  =  cInstanceCache.get(emptyFormat);	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	22	None	replace
327	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  format);	  if(format!=    null)    {    if(!format.equals(emptyFormat))    {    return    emptyFormat;    }    	non-compiled	[CE]  	64	None	replace
328	[BUG]  [BUGGY]  Format.set(0,  values[i],  values[i]);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(0,  values[i],  values[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(0,  values[i],  values[i]);	  Format.set(i,    values[i],    values[i]);    	non-compiled	[CE]  	57	None	replace
329	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  format);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mValues,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mValues,  format);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
330	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(mStyle,  mValues);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(mStyle,  mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(mStyle,  mValues);	  Format    format    =    new    FastDateFormat(mValues);    	non-compiled	[CE]  	38	None	replace
331	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	55	None	replace
332	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.size();  c++)  {  format  =  format;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.size();    c++)    {    format    =    format;    }    	non-compiled	[CE]  	81	None	replace
333	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(format);	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	23	None	replace
334	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMalformedException( " ");	  if(format    ==    null)    {    if(!format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	62	None	replace
335	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isInstance())  {  return  emptyFormat;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isInstance())  {  return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isInstance())  {  return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
336	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())return  emptyFormat;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())return  emptyFormat;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.isEmpty())return  emptyFormat;  }	  if(format!=    null)    {    if(!format.isEmpty()    ||    format.isEmpty())    {    return    emptyFormat;    }    	non-compiled	[CE]  	63	None	replace
337	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  	74	None	replace
338	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMoreGuaranteed();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  	74	None	replace
339	[BUG]  [BUGGY]  vice.setCurrentIndex(format);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  vice.setCurrentIndex(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	vice.setCurrentIndex(format);	  vice.init(cInstanceCache);    	non-compiled	[CE]  	28	None	replace
340	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  value,  pattern,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleMissingName(mValues,  value,  pattern,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleMissingName(mValues,  value,  pattern,  locale);	  aughtExceptionHandler.handleMissingName(mValues,    pattern,    locale);    	non-compiled	[CE]  	75	None	replace
341	[BUG]  [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(form);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  FastDate>  format  =  cInstanceCache.get(form);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  FastDate>  format  =  cInstanceCache.get(form);	  Format    <    FastDate>    format    =    cInstanceCache.get(c);    	non-compiled	[CE]  	53	None	replace
342	[BUG]  [BUGGY]  Format.set(format,  values[i],  mValues[i]);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format.set(format,  values[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format.set(format,  values[i],  mValues[i]);	  Format.set(format,    values[i]);    	non-compiled	[CE]  	9	None	replace
343	[BUG]  [BUGGY]  if(!mRules.isEmpty())  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(!mRules.isEmpty())  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(!mRules.isEmpty())  {  aughtExceptionHandler.handleMatcher(format,  locale);  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
344	[BUG]  [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(mRules  ==  null)  {  aughtExceptionHandler.handleMatcher(format,  locale);  }	  aughtExceptionHandler.handleMatcher(format,    locale);    	non-compiled	[CE]  	32	None	replace
345	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format.get();  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format.get();    }    	non-compiled	[CE]  	70	None	replace
346	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  value,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  format  =  new  FastDateFormat(pattern,  value,  locale);	  Format    format    =    new    FastDateFormat(mValues,    locale);    	non-compiled	[CE]  	37	None	replace
347	[BUG]  [BUGGY]  Format  <?>  format  =  cInstanceCache.get(c);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  cInstanceCache.get(c);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  cInstanceCache.get(c);	  Format    <?>    format    =    mRules.get(c);    	non-compiled	[CE]  	52	None	replace
348	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(pattern,  timeZone,  locale);	  if(format!=    null)    {    if(format!=    null)    {    format.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	43	None	replace
349	[BUG]  [BUGGY]  Format  <  N,  Branch>  cInstanceCache.put(emptyFormat,  format);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  Branch>  cInstanceCache.put(emptyFormat,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  Branch>  cInstanceCache.put(emptyFormat,  format);	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  	40	None	replace
350	[BUG]  [BUGGY]  Format  <?>  format  =  format!=  null?  format  :  emptyFormat;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format!=  null?  format  :  emptyFormat;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format!=  null?  format  :  emptyFormat;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
351	[BUG]  [BUGGY]  Format  <?>  format  =  format  ==  null?  emptyFormat  :  format;  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format  ==  null?  emptyFormat  :  format;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format  ==  null?  emptyFormat  :  format;	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
352	[BUG]  [BUGGY]  Format  <?>  format  =  format.toString();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.toString();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.toString();	  Format    <?>    format    =    emptyFormat;    	non-compiled	[CE]  	11	None	replace
353	[BUG]  [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  oneInstanceCache.get(format);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  oneInstanceCache.get(format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format.init();//  convert  shell  format  into  Usable  oneInstanceCache.get(format);  }	  if(format!=    null)    {    format.init();//    convert    shell    format    into    Usable    one    cInstanceCache.get(format);    }    	non-compiled	[CE]  	45	None	replace
354	[BUG]  [BUGGY]  Format  <  Integer>  format  =  mRules.get(former);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  Integer>  format  =  mRules.get(former);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  Integer>  format  =  mRules.get(former);	  Format    <    Integer>    format    =    mRules.get(i);    	non-compiled	[CE]  	50	None	replace
355	[BUG]  [BUGGY]  aughtExceptionHandler.handleException( " ");  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  aughtExceptionHandler.handleException( " ");  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	aughtExceptionHandler.handleException( " ");	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  	31	None	replace
356	[BUG]  [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format,  locale);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  getInstance(pattern,  timeZone,  format,  locale);	  Format    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  	5	None	replace
357	[BUG]  [BUGGY]  if(!mRules.isEmpty())  {  aughtExceptionHandler.handleMissingClass(format);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(!mRules.isEmpty())  {  aughtExceptionHandler.handleMissingClass(format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(!mRules.isEmpty())  {  aughtExceptionHandler.handleMissingClass(format);  }	  aughtExceptionHandler.handleMissingClass(format);    	non-compiled	[CE]  	76	None	replace
358	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  4);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  4);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  4);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
359	[BUG]  [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  FORMAT);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  new  FastDateFormat  <?>(format,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  new  FastDateFormat  <?>(format,  FORMAT);	  Format    <?>    format    =    new    FastDateFormat    <?>(format);    	non-compiled	[CE]  	49	None	replace
360	[BUG]  [BUGGY]  Format  <?>  format  =  format.getInstance(Long.parseLong(mValue));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.getInstance(Long.parseLong(mValue));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.getInstance(Long.parseLong(mValue));	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
361	[BUG]  [BUGGY]  Format  <?>  format  =  format.getInstanceUTC();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =  format.getInstanceUTC();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =  format.getInstanceUTC();	  Format    <?>    format    =    emptyFormat.getInstance();    	non-compiled	[CE]  	10	None	replace
362	[BUG]  [BUGGY]  Format  {  cInstanceCache.put(emptyFormat,  format);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  {  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  {  cInstanceCache.put(emptyFormat,  format);  }	  if(format    ==    null)    {    cInstanceCache.put(format,    emptyFormat);    }    	non-compiled	[CE]  	2	None	replace
363	[BUG]  [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale.getLocale();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale.getLocale();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale.getLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  	35	None	replace
364	[BUG]  [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  else  {  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  else  {  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  aughtExceptionHandler.handleMissingValue(format);  }  else  {  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  }	  aughtExceptionHandler.handleMissingValue(format);    	non-compiled	[CE]  	79	None	replace
365	[BUG]  [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  oneInstanceCache.put(format,  format);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  oneInstanceCache.put(format,  format);  }  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  format  =  init();//  convert  shell  format  into  Usable  oneInstanceCache.put(format,  format);  }	  if(format!=    null)    {    format    =    init();//    convert    shell    format    into    Usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	44	None	replace
366	[BUG]  [BUGGY]  Format  <?>  format  =!format.isInstance();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <?>  format  =!format.isInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <?>  format  =!format.isInstance();	  Format    <?>    format    =!format.isEmpty();    	non-compiled	[CE]  	60	None	replace
367	[BUG]  [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  for(int  c  =  0;  c  <  mRules.length;  c++)  {  format  =  format;  }	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    for(int    c    =    0;    c    <    mRules.length;    c++)    {    format    =    format;    }    	non-compiled	[CE]  	82	None	replace
368	[BUG]  [BUGGY]  Format  <  N,  V>  cInstanceCache.put(format,  format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  N,  V>  cInstanceCache.put(format,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  N,  V>  cInstanceCache.put(format,  format);	  if(format!=    null)    {    cInstanceCache.put(format,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	47	None	replace
369	[BUG]  [BUGGY]  if(format!=  null  ||!format.isEmpty())  {  return  Format;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null  ||!format.isEmpty())  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null  ||!format.isEmpty())  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
370	[BUG]  [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals( " "))  {  return  Format;  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals( " "))  {  return  Format;  }  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	if(format!=  null)  {  if(!format.isEmpty()  ||  format.equals( " "))  {  return  Format;  }	  if(format!=    null)    {    if(!format.isEmpty())    {    return    Format;    }    	non-compiled	[CE]  	61	None	replace
371	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i]);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  mValues[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
372	[BUG]  [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  mValues[i]);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  mValues[i]);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  <  String,  FastDate>  format  =  format.set(i,  values[i],  mValues[i]);	  Format    <    String,    FastDate>    format    =    format.set(i,    values[i]);    	non-compiled	[CE]  	84	None	replace
373	[BUG]  [BUGGY]  Format  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  Format  Format  =  new  FastDateFormat(format,  timeZone,  locale);	  Format    Format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	87	None	replace
374	[BUG]  [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone,  locale);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  safeFormat  =  new  FastDateFormat(format,  TimeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one    cInstanceCache.put(format,  format);  //  this  is  OK!    }  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	safeFormat  =  new  FastDateFormat(format,  TimeZone,  locale);	  safeFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  	7	None	replace
375	[BUG]  [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(emptyFormat.init());//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {  format  =  emptyFormat;      [BUGGY]  Format  cInstanceCache  =  new  FastDateFormat(emptyFormat.init());//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);  [BUGGY]      cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	217	219	1	replace	Format  cInstanceCache  =  new  FastDateFormat(emptyFormat.init());//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);	  if(format!=    null)    {    format    =    emptyFormat.init();//    convert    shell    format    into    usable    one    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  	3	None	replace
