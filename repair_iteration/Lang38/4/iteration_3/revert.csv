projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(timeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(tz);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mField.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mBuf.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)]);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mRuleForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf),mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)).toString();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField),mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)],mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mPattern.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(32);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(128);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(256);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(64);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,buf,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mDaylight,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRuleForced,mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mRuleForced,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRule,mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone()));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getMillis()));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setZone(mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(0);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mField);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(false);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getInstance();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(',');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mField.length()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mField.length()-1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(calendar.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf),mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mDaylight));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)]&0xFFFF);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('n');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(')');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(timeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(this.timeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneNameRule,mRuleForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mOb.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZoneForced(mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mLocale);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mObj.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,tz);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.getName());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].getName());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=this.calendar.getTimeZone();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mStyle);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,buf,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,mTimeZone,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,buf,mTimeZone,tz);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)],mSize);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField),mSize);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRule,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,mRule,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTime()));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getMillis()+1));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.toString(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.toString()+":");
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)).append('n');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)).append('/');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)).append('_');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mDaylight,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,buf,mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,mDaylight,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,buf,mStandard,mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(255);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,mDaylight,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mStandard,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mPattern,mDaylight,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,style);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mStyle,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,this.timeStyle);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mTimeZone.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.length()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.length()-1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.length()+2);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.length()*2);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)+1,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf),mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mStandard));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced,buf,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced,buf,false);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField),mMaxLengthEstimate,mSize);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField),mSize,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField),mMaxLengthEstimate).toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].toString()+",");
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.length()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.length()-1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.length(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mDaylight),mMaxLengthEstimate));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone),mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone).toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)+2);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)/1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)+3);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRule,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneNameRule,mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mRuleForced,buf,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRuleForced,mTimeZoneForced,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRule,mTimeZoneForced,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mRuleForced,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(':');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(')').append(mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRule,mTimeZoneNameRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneNameRule,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mRuleForced,mTimeZoneNameRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(calendar.length()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(calendar.length()-1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mPattern.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mStandard.toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mPattern.toString(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(buf,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZoneForced(timeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.length()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.length()-1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.length(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('').append(mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('').append(mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('').append(mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mField,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mField+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,3);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,this.timeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced+2);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced+1L);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced*1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=this.calendar.getTimeZone(0);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=(Calendar)this.calendar.clone();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mDaylight,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,calendar);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,mTimeZone,mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(16);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(40);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone()).toString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone()),mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.getMillis());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.getLocale());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mSize);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,2);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf,true);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf,false);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)+1,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(true);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(false,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,buf,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].getName()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].getLocale());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getInstance(mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=buf.toString();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getRules();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(',').append(mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(',').append(mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(',').append(mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mField.length);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mMaxLengthEstimate+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mSize);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,buf,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,false);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,null);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.toString(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.size());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.toString()+":");
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)]&0xFFFF,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)]&1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)]&0xFFF);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(tz,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,tz,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mStandard,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mStandard,mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('N');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getLocale()));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.getString());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced,buf,mLocale);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced,buf,mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(currToken,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mRuleForced,buf,mLocale);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,mColon,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mField,mTimeZoneForced,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mPattern.toString()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf,mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf,mLocale);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(',').append(mValue);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)&mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf),mDaylight);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mMaxLengthEstimate));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneNameRule,mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone())+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone()+1));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField),mMaxLengthEstimate+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mLocale);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,buf,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(')').append('');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(')').append('n');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('').append(mValue);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('').append(mPattern).append(',');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.toString()).append('n');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.get(mTimeZone)));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=(this.calendar!=null)?this.calendar.getTimeZone():calendar;
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.toString()+"n");
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mOb.toString(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mOb.toString()+mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mField,mTimeZoneNameRule,mRuleForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)&0xFFFF);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,mTimeZone,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone),mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone),mMaxLengthEstimate));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(512);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,buf,mSize);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setMillis(mTimeZoneForced+buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mField)+1;
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mColon,mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.toString()+"n");
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(buf.toString()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)+4);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(-1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.setTimeZone(this.timeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mObj.toString(),buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].toString()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].toString()+"n");
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getInstance(buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getInstanceUTC();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,mRuleForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(4);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(null);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mPattern,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,buf)).append('');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,buf,calendar);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mField,mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneNumberRule,mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,timeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)]&1xFFFF);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mDaylight),mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mStyle));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mValue);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone()),mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone(),mMaxLengthEstimate));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.get(mField)));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.getKey());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=(this.calendar!=null?this.calendar.getTimeZone():calendar.getTimeZone());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=(this.calendar!=null?this.calendar.getTimeZone():calendar);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRule.toString()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,mRule,mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZone,mRule,mColon);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Bufferbuf=newStringBuffer(mField.length());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mStyle,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getRuleForced();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=calendar.getInstance(mField);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar)).toString();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone)).toString();
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(calendar,mTimeZone,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mRule,buf,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mValue).append(')');
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mValue);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getZone()));
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,mRule);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,mStyle);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mTimeZone,mMinuteLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(calendar,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,mTimeZone,mStyle);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,4);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)-1],mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873CalendarmTimeZone=calendar.getTimeZone(mMaxLengthEstimate);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone),mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar.getTimeZone()),mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar),mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(buf,mStyle);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(calendar,buf);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(mTimeZoneForced,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,mTimeZone),mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(this.timeZone,mTimeZoneForced);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873calendar.set(this.timeZone,mTimeZone);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRules[calendar.get(mField)].toPattern());
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873mRules=Calendar.getInstance(calendar,buf,this.mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873StringBufferbuf=newStringBuffer(mRules.toString()+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar)+1);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mStyle,buf,mStandard);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append('').append(mRules[calendar.get(mValue)]);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873buf.append(mRule.format(calendar,calendar);
projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java873Calendarcalendar=Calendar.getInstance(mField,mDaylight);
