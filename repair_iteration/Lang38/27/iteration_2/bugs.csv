bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  1);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  +  1);	      rule    =    SelectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  SelectNumberRule(Calendar.YEAR,  tokenLen  -  1);	      rule    =    SelectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR,  tokenLen));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.HOUR,  tokenLen));	      rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  shortMonths);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  shortMonths);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  shortMonths);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  month);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  month);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  month);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  break;  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  break;  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1);  break;	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  SelectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  SelectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  shortMonths));  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  shortMonths));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  shortMonths));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  dayLen));  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  dayLen));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  dayLen));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  monthLen));  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  monthLen));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  monthLen));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  month));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  month));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  month));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    shortWeekdays));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  day));  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  day));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  day));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    shortWeekdays));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  days));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  days));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  days));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    shortWeekdays));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
20	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen));  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen));	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  shortMonths));  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  shortMonths));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  shortMonths));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  3);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  3);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MILLISECOND,  3);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  2);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  2);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MILLISECOND,  2);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  shortMonths));  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  shortMonths));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  shortMonths));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.YEAR,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen  -  1));  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen  -  1));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen  -  1));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.YEAR,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen  +  1));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen  +  1));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen  +  1));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.YEAR,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  rule  =  new  TwoDigitMonthField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen));  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwoDigitMonthField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen));  [BUGGY]    rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwoDigitMonthField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen));	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  12));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  12));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  12));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    shortWeekdays));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  break;  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  break;  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1);  break;	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
32	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1));  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  +  1));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1));  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen  -  1));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen)+  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen)+  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen)+  1);	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MILLISECOND,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.MILLISECOND,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen)+  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen)+  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.YEAR,  tokenLen)+  1);	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.YEAR,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen)+  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen)+  1;  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen)+  1;	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  +  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  tokenLen  -  1);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  3);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  3);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.YEAR,  tokenLen  +  3);	      rule    =    selectNumberRule(Calendar.YEAR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.HOUR_OF_DAY,  tokenLen);	      rule    =    selectNumberRule(Calendar.HOUR,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen);  [BUGGY]    rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  SelectNumberRule(Calendar.MONTH,  tokenLen);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  rule  =  SelectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  SelectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  SelectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);	      rule    =    selectNumberRule(Calendar.DAY_OF_MONTH,    tokenLen);    break;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  monthLen);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  selectNumberRule(Calendar.MONTH,  monthLen);  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  selectNumberRule(Calendar.MONTH,  monthLen);	      rule    =    selectNumberRule(Calendar.MONTH,    tokenLen);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
45	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  hours));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  hours));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  hours));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    shortWeekdays));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  monthLen));  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    rule  =  selectNumberRule(Calendar.YEAR,  tokenLen);  }  else  {  rule  =  TwoDigitYearField.INSTANCE;  }  break;  case  'M':  //  month  in  year  (text  and  number)  if  (tokenLen  >=  4)  {  rule  =  new  TextField(Calendar.MONTH,  months);  }  else  if  (tokenLen  ==  3)  {  rule  =  new  TextField(Calendar.MONTH,  shortMonths);    [BUGGY]  rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  monthLen));  [BUGGY]    }  else  if  (tokenLen  ==  2)  {  rule  =  TwoDigitMonthField.INSTANCE;  }  else  {  rule  =  UnpaddedMonthField.INSTANCE;  }  break;  case  'd':  //  day  in  month  (number)  rule  =  selectNumberRule(Calendar.DAY_OF_MONTH,  tokenLen);  break;  case  'h':  //  hour  in  am/pm  (number,  1..12)  rule  =  new  TwelveHourField(selectNumberRule(Calendar.HOUR,  tokenLen));  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  parsePattern  [RETURN_TYPE]  List  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  int[]  indexRef  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  sub  token  value  String[]  AmPmStrings  ERAs  mValues  months  shortMonths  shortWeekdays  values  weekdays  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  dateStyle  field  i  len  length  mField  mMaxLengthEstimate  mSize  mStyle  size  style  timeStyle  tokenLen  Rule[]  mRules  TimeZone  mTimeZone  timeZone  tz  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  c  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  key  mObj1  mObj2  obj1  obj2  DateFormatSymbols  symbols  List  rules  Rule  rule  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.30151134457776363	620	620	1	replace	rule  =  new  TwelveHourField(selectNumberRule(Calendar.MONTH,  monthLen));	      rule    =    new    TwelveHourField(selectNumberRule(Calendar.MONTH,    tokenLen));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
