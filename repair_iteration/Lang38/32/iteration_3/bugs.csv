bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale!=  null?  Locale.getDefault()  :  locale);	  Locale    locale    =(locale    ==    null?    Locale.getDefault()    :    locale);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
2	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mStandard))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mStandard))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern.equals(mStandard))  {	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.equals(mValue))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  pattern.equals(mValue))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  pattern.equals(mValue))  {	  if(pattern    ==    null    ||    pattern.equals(mValue))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  +  1];  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  +  1];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Locale.getDefault()  +  1];	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
5	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  pattern;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  pattern;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Locale.getDefault()  ],  pattern;	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
6	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  *  2];  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  *  2];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Locale.getDefault()  *  2];	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
7	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  Locale  locale  =  locale.getDefaultLocale();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  locale.getDefaultLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  locale.getDefaultLocale();	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
9	[BUG]  [BUGGY]  mRule  =  TimeZoneNumberRule.getInstance();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNumberRule.getInstance();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNumberRule.getInstance();	  mRule    =    TimeZoneNumberRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
10	[BUG]  [BUGGY]  mRule  =  TimeZoneNumberRule.getInstance(locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNumberRule.getInstance(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNumberRule.getInstance(locale);	  mRule    =    TimeZoneNumberRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
11	[BUG]  [BUGGY]  mRule  =  TimeZoneNumberRule.newInstance();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNumberRule.newInstance();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNumberRule.newInstance();	  mRule    =    TimeZoneNumberRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
12	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  locale,  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  locale,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  locale,  null);	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
15	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(locale.getDefault());	  mPattern    =    pattern.trim().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
16	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.getDefault()  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.getDefault()  +  1);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(Locale.getDefault()  +  1);	  mPattern    =    pattern.trim().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
17	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(timeZone.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(timeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(timeZone.getDefault());	  mPattern    =    pattern.trim().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
18	[BUG]  [BUGGY]  mRules  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =(locale  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =(locale  ==  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
19	[BUG]  [BUGGY]  mRules  =(locator  ==  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =(locator  ==  null)?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =(locator  ==  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
20	[BUG]  [BUGGY]  mRules  =  pattern;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  pattern;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  pattern;	  mRules    =    locale;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
21	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.valueOf(timeZone)];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.valueOf(timeZone)];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.valueOf(timeZone)];	  mRules    =    locale;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
22	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.MIN_VALUE];  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.MIN_VALUE];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.MIN_VALUE];	  mRules    =    locale;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
23	[BUG]  [BUGGY]  mRule  =  TimeZone.getRawRule();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getRawRule();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getRawRule();	  mRule    =    TimeZone.getNumberRule();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  mPattern  =  pattern.getPattern();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.getPattern();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.getPattern();	  mPattern    =    timeZone.getPattern();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
25	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getPattern());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getPattern());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getPattern());	  mPattern    =    timeZone.getPattern();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
26	[BUG]  [BUGGY]  mPattern  =  pattern.getString();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.getString();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.getString();	  mPattern    =    timeZone.getPattern();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
27	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getLocale());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getLocale());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getLocale());	  mPattern    =    timeZone.getPattern();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
28	[BUG]  [BUGGY]  mRule  =  pattern.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  pattern.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  pattern.getDefault();	  mRule    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
29	[BUG]  [BUGGY]  mRule  =  pattern.get();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  pattern.get();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  pattern.get();	  mRule    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
30	[BUG]  [BUGGY]  mRule  =  pattern.getValue();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  pattern.getValue();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  pattern.getValue();	  mRule    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
31	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(mValue),  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(mValue),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(mValue),  locale);	  mRules    =    new    Rule[Long.parseLong(mValue)];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
32	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(mValue)+  1];  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(mValue)+  1];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(mValue)+  1];	  mRules    =    new    Rule[Long.parseLong(mValue)];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
33	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
34	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
35	[BUG]  [BUGGY]  mRules  =  pattern.getDefault();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  pattern.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  pattern.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
36	[BUG]  [BUGGY]  mRules  =  locale.get();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  locale.get();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  locale.get();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
37	[BUG]  [BUGGY]  mRules  =  locale.getValue();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  locale.getValue();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  locale.getValue();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
38	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mDaylight);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mStandard);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale,  mStandard);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale,  mStandard);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getDefault(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getDefault(),  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone);	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  timeZone,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale,  timeZone);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale,  timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale,  timeZone);	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
45	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  locale;	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
46	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  locale;	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
47	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mColon);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mColon);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mColon);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mStyle);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale)/  1;	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
50	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  2;	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
51	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale)+  3;	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
52	[BUG]  [BUGGY]  mRule  =  TimeZone.getInstance(pattern);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getInstance(pattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getInstance(pattern);	  mRule    =    TimeZone.getInstance(locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  mRule  =  TimeZone.getInstance(pattern,  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getInstance(pattern,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getInstance(pattern,  locale);	  mRule    =    TimeZone.getInstance(locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
54	[BUG]  [BUGGY]  mRule  =  TimeZone.getInstance(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getInstance(pattern,  timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getInstance(pattern,  timeZone);	  mRule    =    TimeZone.getInstance(locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  mRule  =  TimeZone.getInstance(timeZone);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getInstance(timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getInstance(timeZone);	  mRule    =    TimeZone.getInstance(locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mDaylight))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern.equals(mDaylight))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern.equals(mDaylight))  {	  if(pattern    ==    null    ||    pattern.equals(mPattern))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
57	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  mLocale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  locale,  mLocale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
58	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(this,  timeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(this,  timeZone,  locale);	  mPattern    =    Pattern.compile(this,    timeZone);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
59	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this,  pattern);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(this,  pattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(this,  pattern);	  mPattern    =    Pattern.compile(this,    timeZone);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
60	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this,  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(this,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(this,  locale);	  mPattern    =    Pattern.compile(this,    timeZone);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
61	[BUG]  [BUGGY]  Locale  locale  =  getDefaultLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  getDefaultLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  getDefaultLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
62	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  getLocale()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null)?  getLocale()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null)?  getLocale()  :  locale;	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
63	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  locale.getLocale();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  locale.getLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null)?  null  :  locale.getLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
64	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toUpperCase();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toUpperCase();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toUpperCase();	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
65	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toLowerCase(Locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toLowerCase(Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toLowerCase(Locale.getDefault());	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
66	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toString();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toString();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).toString();	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
67	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)+  1];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(pattern)+  1];	  mRules    =    new    Rule[Long.parseLong(pattern)];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
68	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(pattern),  locale);	  mRules    =    new    Rule[Long.parseLong(pattern)];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
69	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)],  locale;  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(pattern)],  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(pattern)],  locale;	  mRules    =    new    Rule[Long.parseLong(pattern)];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
70	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  2);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
71	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale  +  3);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
72	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(locale.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(locale.getDefault());	  mPattern    =    pattern.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
73	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(timeZone.getDefault());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(timeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(timeZone.getDefault());	  mPattern    =    pattern.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
74	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.getDefault()  +  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.getDefault()  +  1);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(Locale.getDefault()  +  1);	  mPattern    =    pattern.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
75	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNameRule.getInstance();	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
76	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNameRule.getInstance(locale);	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
77	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.get();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNameRule.get();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNameRule.get();	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
78	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(timeZone);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(timeZone);	  mPattern    =    pattern.trim().toLowerCase(locale);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
79	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(timeZone,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(timeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(timeZone,  locale);	  mPattern    =    pattern.trim().toLowerCase(locale);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
80	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(mValue);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(mValue);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(mValue);	  mPattern    =    pattern.trim().toLowerCase(locale);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
81	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  pattern!=  null)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  pattern!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern  ==  null  ||  pattern!=  null)  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    pattern    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
82	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null  ||  pattern  ==  null)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern!=  null  ||  pattern  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern!=  null  ||  pattern  ==  null)  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    pattern    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
83	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  locale  ==  null)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  locale  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern  ==  null  ||  locale  ==  null)  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    pattern    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
84	[BUG]  [BUGGY]  mRules  =(timeZone!=  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =(timeZone!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =(timeZone!=  null)?  Locale.getDefault()  :  locale;	  mRules    =(timeZone    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
85	[BUG]  [BUGGY]  mPattern  =  pattern.getDefault();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.getDefault();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
86	[BUG]  [BUGGY]  mPattern  =  pattern.get();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.get();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.get();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
87	[BUG]  [BUGGY]  mPattern  =  pattern.getValue();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.getValue();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.getValue();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
88	[BUG]  [BUGGY]  mPattern  =  pattern.getTimeZone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.getTimeZone();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.getTimeZone();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
89	[BUG]  [BUGGY]  mPattern  =(pattern  ==  null)?  TimeZone.getDefault()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =(pattern  ==  null)?  TimeZone.getDefault()  :  null;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =(pattern  ==  null)?  TimeZone.getDefault()  :  null;	  mPattern    =(timeZone    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
90	[BUG]  [BUGGY]  mPattern  =(timeZone!=  null)?  TimeZone.getDefault()  :  null;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =(timeZone!=  null)?  TimeZone.getDefault()  :  null;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =(timeZone!=  null)?  TimeZone.getDefault()  :  null;	  mPattern    =(timeZone    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
91	[BUG]  [BUGGY]  mPattern  =(timeZone  ==  null)?  TimeZone.getLocale()  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =(timeZone  ==  null)?  TimeZone.getLocale()  :  null;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =(timeZone  ==  null)?  TimeZone.getLocale()  :  null;	  mPattern    =(timeZone    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
92	[BUG]  [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.substring(0,  pattern.length());	  mPattern    =    pattern.substring(0,    pattern.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length())+  1;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length())+  1;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.substring(0,  pattern.length())+  1;	  mPattern    =    pattern.substring(0,    pattern.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length()  +  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length()  +  1);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.substring(0,  pattern.length()  +  1);	  mPattern    =    pattern.substring(0,    pattern.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
95	[BUG]  [BUGGY]  Locale  locale  =  locale.toLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  locale.toLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  locale.toLocale();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
96	[BUG]  [BUGGY]  Locale  locale  =  locale.toLowerCase();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  locale.toLowerCase();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  locale.toLowerCase();	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
97	[BUG]  [BUGGY]  mPattern  =  Pattern.trim();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.trim();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.trim();	  mPattern    =    pattern.trim()    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
98	[BUG]  [BUGGY]  mPattern  =  pattern.toUpperCase(Locale.getDefault());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toUpperCase(Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toUpperCase(Locale.getDefault());	  mPattern    =    pattern.toUpperCase();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
99	[BUG]  [BUGGY]  mPattern  =  pattern.toUpperCase(locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toUpperCase(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toUpperCase(locale);	  mPattern    =    pattern.toUpperCase();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
100	[BUG]  [BUGGY]  if(pattern!=  null  ||  Pattern.isStandard(pattern))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  Pattern.isStandard(pattern))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  Pattern.isStandard(pattern))  {	  if(pattern    ==    null    ||    Pattern.isStandard(pattern))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
101	[BUG]  [BUGGY]  if(pattern  ==  null  ||  Pattern.isStandard(mPattern))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  Pattern.isStandard(mPattern))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  Pattern.isStandard(mPattern))  {	  if(pattern    ==    null    ||    Pattern.isStandard(pattern))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
102	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(locale);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
103	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.ENGLISH,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.ENGLISH,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(Locale.ENGLISH,  locale);	  mPattern    =    pattern.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
104	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.US);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.US);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(Locale.US);	  mPattern    =    pattern.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
105	[BUG]  [BUGGY]  mPattern  =  pattern.toUpperCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toUpperCase(Locale.ENGLISH);	  mPattern    =    pattern.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
106	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getDefault());  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getDefault());	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
107	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getValue());  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getValue());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getValue());	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
108	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getLocale());  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getLocale());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone.getLocale());	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
109	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  locale.getDefault())  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  timeZone  ==  locale.getDefault())  {	  if(pattern    ==    null    ||    timeZone    ==    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
110	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  locale.getLocale())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  locale.getLocale())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  timeZone  ==  locale.getLocale())  {	  if(pattern    ==    null    ||    timeZone    ==    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
111	[BUG]  [BUGGY]  mPattern  =  pattern  ==  null?  pattern.trim()  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern  ==  null?  pattern.trim()  :  null;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern  ==  null?  pattern.trim()  :  null;	  mPattern    =    pattern!=    null?    pattern.trim()    :    null;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
112	[BUG]  [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale!=  null)?  Locale.getDefault()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
113	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null)?  Locale.getLocale()  :  Locale.getDefault();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
114	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null)?  Locale.getDefault()  :  Locale.getLocale();	  Locale    locale    =(locale    ==    null)?    Locale.getDefault()    :    Locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
115	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
116	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
117	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  Locale.getDefault());	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
118	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH,  locale);	  mPattern    =    pattern.trim().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
119	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.US);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.US);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(Locale.US);	  mPattern    =    pattern.trim().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
120	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH)+  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH)+  1;	  mPattern    =    pattern.trim().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
121	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toUpperCase(locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toUpperCase(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toUpperCase(locale);	  mPattern    =    pattern.trim().toUpperCase();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
122	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toUpperCase(Locale.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toUpperCase(Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toUpperCase(Locale.getDefault());	  mPattern    =    pattern.trim().toUpperCase();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
123	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
124	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  null,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
125	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false,  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  false,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
126	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  true);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
127	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  null,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  null,  false);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
128	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null  ||  locale!=  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern!=  null  ||  locale!=  Locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern!=  null  ||  locale!=  Locale.getDefault())  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    locale!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
129	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  locale  ==  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  locale  ==  Locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern  ==  null  ||  locale  ==  Locale.getDefault())  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    locale!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
130	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern  ==  null  ||  locale!=  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  pattern  ==  null  ||  locale!=  Locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  pattern  ==  null  ||  locale!=  Locale.getDefault())  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    locale!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
131	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  mTimeZoneForced);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  timeZone,  mTimeZoneForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
132	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  locale.getDefault())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  timeZone!=  locale.getDefault())  {	  if(pattern    ==    null    ||    timeZone!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
133	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  locale.getLocale())  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  locale.getLocale())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  timeZone!=  locale.getLocale())  {	  if(pattern    ==    null    ||    timeZone!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
134	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getDefault());	  mPattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
135	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  locale);	  mPattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
136	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getValue());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getValue());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getValue());	  mPattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
137	[BUG]  [BUGGY]  mRule  =  TimeZone.get(timeZone);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.get(timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.get(timeZone);	  mRule    =    TimeZone.get();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
138	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  this);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  this);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  this);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
139	[BUG]  [BUGGY]  Locale  locale  =  getLocale(timeZone);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  getLocale(timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  getLocale(timeZone);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
140	[BUG]  [BUGGY]  Locale  locale  =  getLocale(locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  getLocale(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  getLocale(locale);	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
141	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone!=  TimeZone.getDefault())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  timeZone!=  TimeZone.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  timeZone!=  TimeZone.getDefault())  {	  if(pattern    ==    null    ||    timeZone!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
142	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(timeZone);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNameRule.getInstance(timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNameRule.getInstance(timeZone);	  mRule    =    TimeZoneNameRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
143	[BUG]  [BUGGY]  mRules  =(timeZone  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =(timeZone  ==  null)?  Locale.getDefault()  :  Locale.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =(timeZone  ==  null)?  Locale.getDefault()  :  Locale.getDefault();	  mRules    =(timeZone    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
144	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  TimeZone.getDefault());  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(mPattern,  TimeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(mPattern,  TimeZone.getDefault());	  Pattern    pattern    =    Pattern.compile(pattern,    TimeZone.getDefault());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
145	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(Locale.ENGLISH  +  1);	  mPattern    =    pattern.trim().toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
146	[BUG]  [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  locale)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  timeZone  ==  locale)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  timeZone  ==  locale)  {	  if(pattern    ==    null    ||    timeZone    ==    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
147	[BUG]  [BUGGY]  mPattern  =  pattern.substring(1,  pattern.length());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.substring(1,  pattern.length());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.substring(1,  pattern.length());	  mPattern    =    pattern.substring(0,    pattern.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
148	[BUG]  [BUGGY]  mRule  =  TimeZoneNumberRule.get();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNumberRule.get();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNumberRule.get();	  mRule    =    TimeZoneNumberRule.getDefault();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
149	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  *  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale  *  1);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale  *  1);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
150	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null?  Locale.getLocale()  :  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null?  Locale.getLocale()  :  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null?  Locale.getLocale()  :  locale);	  Locale    locale    =(locale    ==    null?    Locale.getDefault()    :    locale);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
151	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(this.locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(this.locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(this.locale);	  mPattern    =    pattern.trim().toLowerCase(locale);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
152	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(true);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(true);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(true);	  mPattern    =    pattern.trim().toLowerCase(locale);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
153	[BUG]  [BUGGY]  mPattern  =  pattern.getLocale();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.getLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.getLocale();	  mPattern    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
154	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getPattern(),  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone.getPattern(),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone.getPattern(),  locale);	  mPattern    =    timeZone.getPattern();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
155	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mPattern,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mPattern,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mPattern,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
156	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone,  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mTimeZone,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
157	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(TimeZone.getDefault());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(TimeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(TimeZone.getDefault());	  mPattern    =    pattern.trim().toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
158	[BUG]  [BUGGY]  mRule  =  timeZone.getRule();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  timeZone.getRule();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  timeZone.getRule();	  mRule    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
159	[BUG]  [BUGGY]  mRule  =  timeZone.getValue();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  timeZone.getValue();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  timeZone.getValue();	  mRule    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
160	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.MAX_VALUE];  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.MAX_VALUE];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.MAX_VALUE];	  mRules    =    locale;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
161	[BUG]  [BUGGY]  mRules  =  new  Rule[LONG];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[LONG];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[LONG];	  mRules    =    locale;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
162	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  locale,  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  locale,  null);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
163	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(this.timeZone,  pattern,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(this.timeZone,  pattern,  mTimeZoneForced);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(this.timeZone,  pattern,  mTimeZoneForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
164	[BUG]  [BUGGY]  mRules  =(rule!=  null)?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =(rule!=  null)?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =(rule!=  null)?  Locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
165	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getNumberRule();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNameRule.getNumberRule();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNameRule.getNumberRule();	  mRule    =    TimeZone.getNumberRule();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
166	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  null);	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
167	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.equals(mPattern))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  pattern.equals(mPattern))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  pattern.equals(mPattern))  {	  if(pattern    ==    null    ||    pattern.equals(mPattern))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
168	[BUG]  [BUGGY]  if(pattern  ==  null  ||  Pattern.isStandard(pattern)||  pattern.equals(locale))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  Pattern.isStandard(pattern)||  pattern.equals(locale))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  Pattern.isStandard(pattern)||  pattern.equals(locale))  {	  if(pattern    ==    null    ||    Pattern.isStandard(pattern))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
169	[BUG]  [BUGGY]  if(pattern  ==  null  ||  Pattern.isStandard(pattern)||  pattern.equals(mPattern))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  Pattern.isStandard(pattern)||  pattern.equals(mPattern))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  Pattern.isStandard(pattern)||  pattern.equals(mPattern))  {	  if(pattern    ==    null    ||    Pattern.isStandard(pattern))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
170	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  true,  false);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
171	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this.timeZone);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(this.timeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(this.timeZone);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
172	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this.timeZone,  pattern);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(this.timeZone,  pattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(this.timeZone,  pattern);	  mPattern    =    Pattern.compile(pattern);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
173	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(mValue,  locale)];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(mValue,  locale)];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(mValue,  locale)];	  mRules    =    new    Rule[Long.parseLong(mValue)];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
174	[BUG]  [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  locale!=  null?  Locale.getDefault()  :  locale;	  Locale    locale    =    locale.getLocale();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
175	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern!=  null  ||  locale  ==  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern!=  null  ||  locale  ==  Locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern!=  null  ||  locale  ==  Locale.getDefault())  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    locale!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
176	[BUG]  [BUGGY]  if(pattern  ==  null  ||  locale  ==  null  ||  pattern!=  null  ||  locale!=  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  locale  ==  null  ||  pattern!=  null  ||  locale!=  Locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  locale  ==  null  ||  pattern!=  null  ||  locale!=  Locale.getDefault())  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    locale!=    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
177	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.ENGLISH),  locale);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(Locale.ENGLISH),  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(Locale.ENGLISH),  locale);	  mPattern    =    pattern.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
178	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(locale);	  mPattern    =    pattern.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
179	[BUG]  [BUGGY]  mPattern  =  pattern.toLowerCase(TimeZone.getDefault());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toLowerCase(TimeZone.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toLowerCase(TimeZone.getDefault());	  mPattern    =    pattern.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
180	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toUpperCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toUpperCase(Locale.ENGLISH);	  mPattern    =    pattern.trim().toUpperCase();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
181	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  mLocale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  mLocale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  TimeZone.getDefault(),  mLocale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mLocale);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
182	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mStyle,  locale,  mLocale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
183	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZone);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
184	[BUG]  [BUGGY]  mRules  =  locale!=  null?  null  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  locale!=  null?  null  :  locale.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  locale!=  null?  null  :  locale.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
185	[BUG]  [BUGGY]  mRules  =  locale  ==  null?  null  :  locale.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  locale  ==  null?  null  :  locale.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  locale  ==  null?  null  :  locale.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
186	[BUG]  [BUGGY]  mRules  =  timeZone.getDefault();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  timeZone.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  timeZone.getDefault();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
187	[BUG]  [BUGGY]  mRules  =  locale!=  null?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  locale!=  null?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  locale!=  null?  Locale.getDefault()  :  locale;	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
188	[BUG]  [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  timeZone  ==  null)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  pattern  ==  null  ||  timeZone  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  pattern  ==  null  ||  timeZone  ==  null)  {	  if(pattern    ==    null    ||    pattern    ==    null    ||    pattern    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
189	[BUG]  [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =  locale  ==  null?  Locale.getDefault()  :  locale;	  Locale    locale    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
190	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(this,  pattern,  locale);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(this,  pattern,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(this,  pattern,  locale);	  mPattern    =    Pattern.compile(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
191	[BUG]  [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  locale);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Locale.getDefault()  ],  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Locale.getDefault()  ],  locale);	  mRules    =    new    Rule[Locale.getDefault()];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
192	[BUG]  [BUGGY]  mPattern  =(timeZone  ==  null)?  TimeZone.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =(timeZone  ==  null)?  TimeZone.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =(timeZone  ==  null)?  TimeZone.getDefault()  :  locale;	  mPattern    =(timeZone    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
193	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  true,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  true,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
194	[BUG]  [BUGGY]  mRule  =  TimeZone.get(pattern);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.get(pattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.get(pattern);	  mRule    =    TimeZone.get();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
195	[BUG]  [BUGGY]  mPattern  =  pattern.toString();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toString();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toString();	  mPattern    =    timeZone.getPattern();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
196	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocaleForced);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocaleForced);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocaleForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    mTimeZoneForced);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
197	[BUG]  [BUGGY]  mRule  =  this.timeZone.getDefault();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  this.timeZone.getDefault();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  this.timeZone.getDefault();	  mRule    =    timeZone.getDefault();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
198	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  pattern.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  pattern.length()  >=  0)  {	  if(pattern    ==    null    ||    pattern.length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
199	[BUG]  [BUGGY]  if(pattern!=  null  &&  locale  ==  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  &&  locale  ==  Locale.getDefault())  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  &&  locale  ==  Locale.getDefault())  {	  if(pattern!=    null    ||    locale    ==    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
200	[BUG]  [BUGGY]  mRules  =  new  Rule[Long.parseLong(mStyle)];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[Long.parseLong(mStyle)];  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[Long.parseLong(mStyle)];	  mRules    =    new    Rule[Long.parseLong(mValue)];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
201	[BUG]  [BUGGY]  mRule  =  TimeZone.getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getInstance(pattern,  timeZone,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getInstance(pattern,  timeZone,  locale);	  mRule    =    TimeZone.getInstance(locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
202	[BUG]  [BUGGY]  if(pattern  ==  null  ||  Pattern.isFunction(pattern))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null  ||  Pattern.isFunction(pattern))  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null  ||  Pattern.isFunction(pattern))  {	  if(pattern    ==    null    ||    Pattern.isStandard(pattern))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
203	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  0);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  0);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale,  0);	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale,    null);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
204	[BUG]  [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone,  null);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone,  null);  }  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone,  null);  }	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
205	[BUG]  [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  }  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern  ==  null)  {  mPattern  =  Pattern.compile(pattern,  timeZone,  locale);  }	  mPattern    =    Pattern.compile(pattern,    timeZone,    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
206	[BUG]  [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length()).trim();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.substring(0,  pattern.length()).trim();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.substring(0,  pattern.length()).trim();	  mPattern    =    pattern.substring(0,    pattern.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
207	[BUG]  [BUGGY]  if(pattern!=  null  &&  pattern.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  &&  pattern.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  &&  pattern.length()  ==  0)  {	  if(pattern!=    null    ||    pattern.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
208	[BUG]  [BUGGY]  mRules  =(rule  ==  null)?  locale.getDefault()  :  locale;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =(rule  ==  null)?  locale.getDefault()  :  locale;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =(rule  ==  null)?  locale.getDefault()  :  locale;	  mRules    =(rule    ==    null)?    Locale.getDefault()    :    locale;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
209	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale,  false);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale,  false);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mLocale,  false);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
210	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toUpperCase()  +  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toUpperCase()  +  1;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toUpperCase()  +  1;	  mPattern    =    pattern.trim().toUpperCase();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
211	[BUG]  [BUGGY]  mRules  =  locale.getRules();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  locale.getRules();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  locale.getRules();	  mRules    =    locale.getDefault();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
212	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  mDaylight,  locale);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mStandard);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
213	[BUG]  [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).append('n');  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  Pattern.compile(pattern,  timeZone,  locale).append('n');  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  Pattern.compile(pattern,  timeZone,  locale).append('n');	  mPattern    =    Pattern.compile(pattern,    timeZone,    locale).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
214	[BUG]  [BUGGY]  mPattern  =  pattern.trim().toLowerCase(locale,  locale);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.trim().toLowerCase(locale,  locale);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.trim().toLowerCase(locale,  locale);	  mPattern    =    pattern.trim().toLowerCase(locale);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
215	[BUG]  [BUGGY]  mRule  =  TimeZone.getRule(pattern);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getRule(pattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getRule(pattern);	  mRule    =    TimeZone.getNumberRule();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
216	[BUG]  [BUGGY]  mRule  =  TimeZone.getRule();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZone.getRule();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZone.getRule();	  mRule    =    TimeZone.getNumberRule();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
217	[BUG]  [BUGGY]  mRule  =  TimeZoneNameRule.getRule(pattern);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRule  =  TimeZoneNameRule.getRule(pattern);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRule  =  TimeZoneNameRule.getRule(pattern);	  mRule    =    TimeZone.getNumberRule();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
218	[BUG]  [BUGGY]  mRules  =  new  Rule[LONG],  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mRules  =  new  Rule[LONG],  Locale.getDefault());  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mRules  =  new  Rule[LONG],  Locale.getDefault());	  mRules    =    locale;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
219	[BUG]  [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  getLocale();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Locale  locale  =(locale  ==  null)?  null  :  getLocale();  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Locale  locale  =(locale  ==  null)?  null  :  getLocale();	  Locale    locale    =    getLocale();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
220	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern  ==  null)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  pattern  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  pattern  ==  null)  {	  if(pattern    ==    null    ||    pattern!=    null)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
221	[BUG]  [BUGGY]  mPattern  =(timeZone  ==  null)?  TimeZone.getID()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =(timeZone  ==  null)?  TimeZone.getID()  :  null;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =(timeZone  ==  null)?  TimeZone.getID()  :  null;	  mPattern    =(timeZone    ==    null)?    TimeZone.getDefault()    :    null;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
222	[BUG]  [BUGGY]  mPattern  =  pattern!=  null?  pattern.toLowerCase()  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern!=  null?  pattern.toLowerCase()  :  null;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern!=  null?  pattern.toLowerCase()  :  null;	  mPattern    =    pattern!=    null?    pattern.trim()    :    null;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
223	[BUG]  [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZoneForced);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZoneForced);  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	Pattern  pattern  =  Pattern.compile(pattern,  timeZone,  locale,  mTimeZoneForced);	  Pattern    pattern    =    Pattern.compile(pattern,    timeZone,    locale,    mLocale);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
224	[BUG]  [BUGGY]  mPattern  =  pattern.toUpperCase()  +  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  mPattern  =  pattern.toUpperCase()  +  1;  [BUGGY]      if  (pattern  ==  null)  {  throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	mPattern  =  pattern.toUpperCase()  +  1;	  mPattern    =    pattern.toUpperCase();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
225	[BUG]  [BUGGY]  if(pattern!=  null  ||  pattern.length()!=  0)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      protected  FastDateFormat(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  super();      [BUGGY]  if(pattern!=  null  ||  pattern.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  pattern  must  not  be  null     ");  }  mPattern  =  pattern;  mTimeZoneForced  =  (timeZone  !=  null);  if  (timeZone  ==  null)  {  timeZone  =  TimeZone.getDefault();  }  mTimeZone  =  timeZone;  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  <init>  [RETURN_TYPE]  Locale)  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  String[]  mValues  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  mField  mMaxLengthEstimate  mSize  mStyle  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  mColon  mLocaleForced  mTimeZoneForced  NumberRule  mRule  char  mValue  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang38/src/java/org/apache/commons/lang3/time/FastDateFormat.java	0.2773500981126146	536	536	1	replace	if(pattern!=  null  ||  pattern.length()!=  0)  {	  if(pattern    ==    null    ||    pattern.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
