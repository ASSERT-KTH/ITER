bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
2	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ",  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ",  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ",  JsonToken.FIELD_NAME);	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
3	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_currToken  =  JsonToken.FIELD_NAME;	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
4	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken    >=    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	60	3	replace
5	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken    >=    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	60	3	replace
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
7	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
8	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	55	3	replace
9	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	55	3	replace
10	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	55	3	replace
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	55	3	replace
12	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
13	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
14	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
15	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
16	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
17	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value. ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value. ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value. ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    or    a    value   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
18	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
19	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
21	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
22	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	2	3	replace
23	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	2	3	replace
24	[BUG]  [BUGGY]  if(_tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
26	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
27	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
28	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
29	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	37	3	replace
30	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	37	3	replace
31	[BUG]  [BUGGY]  if(_tokenIncomplete)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
32	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_numTypesValid  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_numTypesValid  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	76	3	replace
33	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_numTypesValid  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_numTypesValid  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	76	3	replace
34	[BUG]  [BUGGY]  if(_nextAfterName())  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  incompatible  types  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_nextAfterName())  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_nextAfterName())  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  incompatible  types	76	None	replace
35	[BUG]  [BUGGY]  if(_nextToken()  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_nextToken()  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_nextToken()  ==  JsonToken.VALUE_STRING)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
36	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	1	replace
37	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	1	replace
38	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	99	3	replace
39	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	99	3	replace
40	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	99	3	replace
41	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	99	3	replace
42	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]                junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	26	3	replace
43	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]                junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	26	3	replace
44	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	24	3	replace
45	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	24	3	replace
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
47	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
48	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	11	3	replace
49	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	11	3	replace
50	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	11	3	replace
51	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	11	3	replace
52	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	34	3	replace
53	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	34	3	replace
54	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
55	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
56	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	1	3	replace
57	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	1	3	replace
58	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	83	3	replace
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	83	3	replace
60	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	83	3	replace
61	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	83	3	replace
62	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	83	3	replace
63	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	83	3	replace
64	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
65	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
66	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
67	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
68	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	3	replace
69	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	3	replace
70	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	97	3	replace
71	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	97	3	replace
72	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	79	3	replace
73	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	79	3	replace
74	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
75	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
76	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
77	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
78	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
79	[BUG]  [BUGGY]  _symbols.add(name,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(name,  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(name,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JSON_TYPE);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JSON_TYPE);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  JSON_TYPE);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
81	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name,  NR_UNKNOWN);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name,  NR_UNKNOWN);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  name,  NR_UNKNOWN);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	30	3	replace
83	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	30	3	replace
84	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	30	3	replace
85	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	30	3	replace
86	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	36	3	replace
87	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	36	3	replace
88	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	36	3	replace
89	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	36	3	replace
90	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
91	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
92	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
93	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
94	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FUNCTION_NAME)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FUNCTION_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FUNCTION_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
95	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	21	2	replace
96	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	21	2	replace
97	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value. ");  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value. ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value. ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
98	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  string  value ");  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  string  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
99	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
100	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
101	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
102	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
103	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	92	None	replace
104	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	19	3	replace
105	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	19	3	replace
106	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
107	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
108	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
109	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
110	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
111	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
112	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
113	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
114	[BUG]  [BUGGY]  _reportError();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError();	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
115	[BUG]  [BUGGY]  _throwInternal();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _throwInternal();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_throwInternal();	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
116	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	1	replace
117	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	1	replace
118	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	3	3	replace
119	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	3	3	replace
120	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	32	3	replace
121	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	32	3	replace
122	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
123	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
124	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
125	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  >=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
126	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||!_tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	81	3	replace
127	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||!_tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	81	3	replace
128	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
129	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_FULL  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
130	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
131	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken!=  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken!=  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    if(_currToken!=  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
132	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	38	3	replace
133	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	38	3	replace
134	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
135	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
136	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
137	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
138	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_N  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_N  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_N	  	non-compiled	[CE]  ')'  expected	84	None	add
139	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	69	3	replace
140	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	69	3	replace
141	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	73	3	replace
142	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	73	3	replace
143	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")expected  a  string  value ");  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")expected  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_nameStartOffset+ ")expected  a  string  value ");	  _reportError(   "Current    token(   "+_nameStartOffset+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
144	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  value. ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  value. ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  value. ");	  _reportError(   "Current    token(   "+_nameStartOffset+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
145	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
146	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
147	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
148	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
149	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
150	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
151	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
152	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
153	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [CE]  cannot  find  symbol  START_NAME  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_NAME	105	None	replace
154	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [CE]  cannot  find  symbol  START_NAME  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  START_NAME	105	None	replace
155	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  'void'  type  not  allowed  here  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  'void'  type  not  allowed  here	88	None	replace
156	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _skipWSOrEnd()  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _skipWSOrEnd()  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _skipWSOrEnd()  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	88	None	replace
157	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _skipString())  {  [CE]  'void'  type  not  allowed  here  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  'void'  type  not  allowed  here	88	None	replace
158	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	103	3	replace
159	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	103	3	replace
160	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	103	3	replace
161	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	103	3	replace
162	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	103	3	replace
163	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	103	3	replace
164	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
165	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
166	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
167	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_LONG)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_LONG)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_LONG)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
168	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
169	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
170	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FULL)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
171	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
172	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
173	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	39	3	replace
174	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	39	3	replace
175	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	85	3	replace
176	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	85	3	replace
177	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	85	3	replace
178	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	85	3	replace
179	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	85	3	replace
180	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	85	3	replace
181	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  name);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  name);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.VALUE_STRING,  name);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
182	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  String.valueOf(i));  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  String.valueOf(i));  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.VALUE_STRING,  String.valueOf(i));	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
183	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  null);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  null);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.VALUE_STRING,  null);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
184	[BUG]  [BUGGY]  if(_tokenIncomplete  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  incomparable  types:  boolean  and  JsonToken  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  JsonToken	87	None	replace
185	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	13	3	replace
186	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	13	3	replace
187	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	13	3	replace
188	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	13	3	replace
189	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
190	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
191	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
192	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
193	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	52	3	replace
194	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	52	3	replace
195	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
196	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken!=  JsonToken.VALUE_FULL)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken!=  JsonToken.VALUE_FULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken!=  JsonToken.VALUE_FULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
197	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken!=  JsonToken.VALUE_UNKNOWN)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken!=  JsonToken.VALUE_UNKNOWN)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken!=  JsonToken.VALUE_UNKNOWN)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
198	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER_FALSE)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
199	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {  [CE]  cannot  find  symbol  START_FUNCTION  [FE]                junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  START_FUNCTION	41	None	replace
200	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_FUNCTION)  {  [CE]  cannot  find  symbol  END_FUNCTION  [FE]                  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_FUNCTION)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_FUNCTION)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  END_FUNCTION	41	None	replace
201	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	65	3	replace
202	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	65	3	replace
203	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
204	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
205	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  >=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
206	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
207	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	101	3	replace
208	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	101	3	replace
209	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
210	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
211	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
212	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
213	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
214	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    if(_currToken!=  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
215	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    If(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
216	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_StrING  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_StrING  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_StrING  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
217	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  name);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  name);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.START_OBJECT,  name);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
218	[BUG]  [BUGGY]  _symbols.add(JsonToken.END_OBJECT);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.END_OBJECT);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.END_OBJECT);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
219	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  null);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  null);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.START_OBJECT,  null);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
220	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
221	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	96	2	replace
222	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	96	3	replace
223	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	96	3	replace
224	[BUG]  [BUGGY]  _reportError( "Unexpected  string  value: "  +  i);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Unexpected  string  value: "  +  i);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Unexpected  string  value: "  +  i);	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
225	[BUG]  [BUGGY]  _reportUnexpectedName(i, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportUnexpectedName(i, "was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportUnexpectedName(i, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
226	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	94	2	replace
227	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	94	2	replace
228	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
229	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
230	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
231	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
232	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
233	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
234	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
235	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
236	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	23	3	replace
237	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	23	3	replace
238	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
239	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.VALUE_FULL)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.VALUE_FULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.VALUE_FULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
240	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
241	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
242	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
243	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
244	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
245	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  null);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  null);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  null);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
246	[BUG]  [BUGGY]  _symbols.clear();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.clear();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.clear();	  _skipString();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
247	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
248	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
249	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
250	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
251	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	4	3	replace
252	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	4	3	replace
253	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
254	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
255	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
256	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  If(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  If(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    If(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  ';'  expected	86	None	add
257	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
258	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FALSE  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_FALSE  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	99	3	replace
259	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FALSE  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FALSE  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_FALSE  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	99	3	replace
260	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FUNCTION  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [CE]  cannot  find  symbol  VALUE_FUNCTION  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FUNCTION  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_FUNCTION  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_FUNCTION	99	None	replace
261	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
262	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
263	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	36	3	replace
264	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	36	3	replace
265	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	36	3	replace
266	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	36	3	replace
267	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	48	3	replace
268	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	48	3	replace
269	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
270	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
271	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  1);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  1);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.START_OBJECT,  1);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
272	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	68	None	add
273	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JSONToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JSONToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JSONToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
274	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_UNKNOWN)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_UNKNOWN)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_UNKNOWN)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
275	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
276	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
277	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  If(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  If(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    If(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  	non-compiled	[CE]  ';'  expected	98	None	add
278	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
279	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	85	3	replace
280	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	85	3	replace
281	[BUG]  [BUGGY]  _initBounds(JsonToken.FIELD_NAME,  _tokenIncomplete);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _initBounds(JsonToken.FIELD_NAME,  _tokenIncomplete);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_initBounds(JsonToken.FIELD_NAME,  _tokenIncomplete);	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
282	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ", ");  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ", ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ", ");	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
283	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	56	3	replace
284	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	56	3	replace
285	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    If(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
286	[BUG]  [BUGGY]  _reportInvalidEOF(i, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportInvalidEOF(i, "was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportInvalidEOF(i, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
287	[BUG]  [BUGGY]  _reportError( "Unexpected  string  value ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Unexpected  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Unexpected  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
288	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
289	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
290	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
291	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    If(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	72	None	add
292	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
293	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_ARRAY    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
294	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameStartOffset);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameStartOffset);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _nameStartOffset);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
295	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name  +  1);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name  +  1);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  name  +  1);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
296	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {  [CE]  cannot  find  symbol  START_FUNCTION  [FE]                junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  START_FUNCTION	41	None	replace
297	[BUG]  [BUGGY]  _finishString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _finishString();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_finishString();	  _skipString();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
298	[BUG]  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  closing  argument ");  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportUnexpectedChar(i, "was  expecting  closing  argument ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportUnexpectedChar(i, "was  expecting  closing  argument ");	  _skipString();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
299	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	13	3	replace
300	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	13	3	replace
301	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
302	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(_currToken);  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(_currToken);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(_currToken);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
303	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
304	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    If(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
305	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
306	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
307	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
308	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
309	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INTE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
310	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
311	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  JSON_TYPE);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  JSON_TYPE);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.VALUE_STRING,  JSON_TYPE);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
312	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  or  a  value ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  or  a  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  or  a  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    or    a    value   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
313	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||!_tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||!_tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
314	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
315	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
316	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
317	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
318	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_nameStartOffset  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_nameStartOffset  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	76	3	replace
319	[BUG]  [BUGGY]  if(_nameStartOffset  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_nameStartOffset  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_nameStartOffset  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	76	3	replace
320	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	73	3	replace
321	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	73	3	replace
322	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	96	3	replace
323	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	96	3	replace
324	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  'void'  type  not  allowed  here  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  'void'  type  not  allowed  here	88	None	replace
325	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _skipWSOrEnd())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _skipWSOrEnd())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _skipWSOrEnd())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	88	None	replace
326	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    If(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	66	None	add
327	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	67	3	replace
328	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	67	3	replace
329	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	30	3	replace
330	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	30	3	replace
331	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    If(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	62	None	add
332	[BUG]  [BUGGY]  _reportInvalidEOF();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportInvalidEOF();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportInvalidEOF();	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
333	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_FULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
334	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
335	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	43	3	replace
336	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	43	3	replace
337	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.VALUE_STRING);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  JsonToken.VALUE_STRING);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
338	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.START_OBJECT);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  JsonToken.START_OBJECT);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
339	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	73	3	replace
340	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	73	3	replace
341	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
342	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	99	3	replace
343	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	99	3	replace
344	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
345	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [CE]  cannot  find  symbol  _cfgPrettyPrinter  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _cfgPrettyPrinter!=  null)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	non-compiled	[CE]  cannot  find  symbol  _cfgPrettyPrinter	30	None	replace
346	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " "));  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " "));  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " "));	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  	80	None	replace
347	[BUG]  [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ". ");  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ". ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( ". ");	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException    e    =    new    ArrayIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
348	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	5	3	replace
349	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	5	3	replace
350	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	32	3	replace
351	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	32	3	replace
352	[BUG]  [BUGGY]  if(_skipWSOrEnd)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_skipWSOrEnd)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_skipWSOrEnd)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
353	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	85	3	replace
354	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	85	3	replace
355	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  an  IllegalArgumentException ");  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  an  IllegalArgumentException ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_nameStartOffset+ ")not  an  IllegalArgumentException ");	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
356	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  an  IllegalArgumentException. ");  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  an  IllegalArgumentException. ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_nameStartOffset+ ")not  an  IllegalArgumentException. ");	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
357	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
358	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_FALSE)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
359	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
360	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
361	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	4	3	replace
362	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	4	3	replace
363	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
364	[BUG]  [BUGGY]  _reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
365	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken    >=    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	60	3	replace
366	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken    >=    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	60	3	replace
367	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||!_currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||!_currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||!_currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
368	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  'void'  type  not  allowed  here  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  'void'  type  not  allowed  here	88	None	replace
369	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  'void'  type  not  allowed  here  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _skipString())    {    	non-compiled	[CE]  'void'  type  not  allowed  here	88	None	replace
370	[BUG]  [BUGGY]  _symbols.addLast(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.addLast(JsonToken.VALUE_STRING);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.addLast(JsonToken.VALUE_STRING);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
371	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
372	[BUG]  [BUGGY]  if(_nameLen  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  cannot  find  symbol  _nameLen  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_nameLen  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_nameLen  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  cannot  find  symbol  _nameLen	76	None	replace
373	[BUG]  [BUGGY]  if(_nextAfterName)  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  cannot  find  symbol  _nextAfterName  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_nextAfterName)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_nextAfterName)  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  cannot  find  symbol  _nextAfterName	76	None	replace
374	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    If(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	78	3	replace
375	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FALSE)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    If(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	78	3	replace
376	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_UNKNOWN  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
377	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	97	3	replace
378	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	97	3	replace
379	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_FALSE  [FE]                junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_FALSE	26	None	replace
380	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]                  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	26	3	replace
381	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]                  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	26	3	replace
382	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	17	3	replace
383	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	17	3	replace
384	[BUG]  [BUGGY]  _reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    or    a    value   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
385	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
386	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken!=  JsonToken.VALUE_NUMBER)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
387	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_bufferRecyclable  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_bufferRecyclable  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	28	3	replace
388	[BUG]  [BUGGY]  if(_bufferRecyclable  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_bufferRecyclable  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_bufferRecyclable  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	28	3	replace
389	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
390	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER  ||  _currToken  ==  JsonToken.VALUE_NUMBER)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
391	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
392	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
393	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
394	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_incomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_incomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_incomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
395	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	69	3	replace
396	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	69	3	replace
397	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
398	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	87	3	replace
399	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	87	3	replace
400	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||!_bufferRecyclable)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	87	3	replace
401	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||!_bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||!_bufferRecyclable)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	87	3	replace
402	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	101	3	replace
403	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	101	3	replace
404	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	101	3	replace
405	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	101	3	replace
406	[BUG]  [BUGGY]  _throwUnquotedSpace(i, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _throwUnquotedSpace(i, "was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_throwUnquotedSpace(i, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
407	[BUG]  [BUGGY]  _reportError( "Token  was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      {          [BUGGY]  _reportError( "Token  was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Token  was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	75	None	replace
408	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER)  {  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	92	None	replace
