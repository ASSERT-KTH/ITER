bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  ZCompressorFactory  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  decompressConcatenated))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  ZCompressorFactory	11	None	replace
2	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  pendingEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  pendingEOF))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	11	None	replace
3	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  ZCompressorFactory  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  DEFLATE))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  ZCompressorFactory	11	None	replace
4	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  0))  {  [CE]  cannot  find  symbol  ZCompressorFactory  [FE]                CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  0))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  ZCompressorFactory	11	None	replace
5	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  compressUntilEOF))  {  [CE]  cannot  find  symbol  compressUntilEOF  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  compressUntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  compressUntilEOF))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	11	None	replace
6	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  ZCompressorFactory  [FE]                    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  decompressUntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  decompressUntilEOF))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  ZCompressorFactory	11	None	replace
7	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (ZCompressorInputStream.matches(signature,    0))    {    if  (ZCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
8	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  If  (ZCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  If  (ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (ZCompressorInputStream.matches(signature,    0))    {    If  (ZCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
9	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCompressorInputStream.matches(Signature,  0))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCompressorInputStream.matches(Signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (ZCompressorInputStream.matches(signature,    0))    {    if  (ZCompressorInputStream.matches(Signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
10	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCompressorInputStream.matches(signature,  0,))  {  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCompressorInputStream.matches(signature,  0,))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (ZCompressorInputStream.matches(signature,    0))    {    if  (ZCompressorInputStream.matches(signature,  0,))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
11	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
12	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  LZMAUtils.isXZCompressionAvailable()))  {  [CE]  cannot  find  symbol  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  LZMAUtils.isXZCompressionAvailable()))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  LZMAUtils.isXZCompressionAvailable()))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  ZMAUtils.isXZCompressionAvailable()))  {  [CE]  cannot  find  symbol  ZMAUtils  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  ZMAUtils.isXZCompressionAvailable()))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  ZMAUtils.isXZCompressionAvailable()))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  ZMAUtils	1	None	replace
14	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  in))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
15	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  SIZ_COMPRESSION))  {  [CE]  cannot  find  symbol  SIZ_COMPRESSION  [FE]                CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  SIZ_COMPRESSION))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  SIZ_COMPRESSION))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  SIZ_COMPRESSION	1	None	replace
16	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  LZMAUtils))  {  [CE]  cannot  find  symbol  LZMAUtils  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  LZMAUtils))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  LZMAUtils))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  LZMAUtils	1	None	replace
17	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
18	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  'catch'  without  'try'  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
19	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
20	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
21	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  'catch'  without  'try'  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
22	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  null))  {  [CE]  'catch'  without  'try'  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  null))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  null))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
23	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  LZMAUtils.isXZCompressionAvailable()))  {  [CE]  'catch'  without  'try'  [FE]                CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  LZMAUtils.isXZCompressionAvailable()))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  LZMAUtils.isXZCompressionAvailable()))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
24	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
25	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  LZMA))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  LZMA))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE,  LZMA))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
26	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
27	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  DELETE))  {  [CE]  cannot  find  symbol  DELETE  [FE]                CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  DELETE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE,  DELETE))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DELETE	2	None	replace
28	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  SYNTHETIC))  {  [CE]  cannot  find  symbol  SYNTHETIC  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE,  SYNTHETIC))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE,  SYNTHETIC))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC	2	None	replace
29	[BUG]  [BUGGY]  if  (DFLATE.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  DFLATE  [FE]                    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (DFLATE.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (DFLATE.matches(signature,  DEFLATE))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DFLATE	2	None	replace
30	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  pendingEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	10	None	replace
31	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressUntilEOF))  {  [CE]  cannot  find  symbol  compressUntilEOF  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressUntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  compressUntilEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	10	None	replace
32	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  0.0))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
33	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signature,  0))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	6	2	replace
34	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signature,  0))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	6	2	replace
35	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  null))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  null))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  null))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
36	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  LZMA))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  LZMA))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  LZMA))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
37	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signatureLength))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  0)||  ZCompressorInputStream.matches(signatureLength))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
38	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if  (!FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	4	2	replace
39	[BUG]  [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	4	2	replace
40	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
41	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
42	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	4	2	replace
43	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	4	2	replace
44	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
45	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if  (!ZCompressorInputStream.matches(signature,  0))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	8	2	replace
46	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorInputStream.matches(signature,  0))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	8	2	replace
47	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
48	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	8	None	replace
49	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  LZMAUtils.isXZCompressionAvailable()))  {  [CE]  cannot  find  symbol  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  LZMAUtils.isXZCompressionAvailable()))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorInputStream.matches(signature,  LZMAUtils.isXZCompressionAvailable()))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
50	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
51	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  'catch'  without  'try'  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCompressorInputStream.matches(signature,  decompressConcatenated))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
52	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  SignatureLength))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  SignatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCompressorInputStream.matches(signature,  SignatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
53	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  If  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  If  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    If  (!ZCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
54	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  signLength))  {  [CE]  'catch'  without  'try'  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  signLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCompressorInputStream.matches(signature,  signLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
55	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  'catch'  without  'try'  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCompressorInputStream.matches(signature,  DEFLATE))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
56	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in);  [CE]  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in);	      	non-compiled	[CE]  	9	None	replace
57	[BUG]  [BUGGY]  InputStream  in  =  in.getInputStream();  [CE]  [FE]                    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  in.getInputStream();  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  in.getInputStream();	      	non-compiled	[CE]  	9	None	replace
58	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  [FE]                      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  getInputStream();	      	non-compiled	[CE]  	9	None	replace
59	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyInputStream(in);  [CE]  [FE]                        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  new  FramedSnappyInputStream(in);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  new  FramedSnappyInputStream(in);	      	non-compiled	[CE]  	9	None	replace
60	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(in);  [CE]  [FE]                          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZUtils.getInputStream(in);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZUtils.getInputStream(in);	      	non-compiled	[CE]  	9	None	replace
61	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(signature);  [CE]  [FE]                            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZUtils.getInputStream(signature);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZUtils.getInputStream(signature);	      	non-compiled	[CE]  	9	None	replace
62	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.getInputStream();  [CE]  [FE]                              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  FileInputStream.getInputStream();  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  FileInputStream.getInputStream();	      	non-compiled	[CE]  	9	None	replace
63	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  compressConcatenated))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  compressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  compressConcatenated))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	11	None	replace
64	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  UntilEOF)||  ZCompressorFactory.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  UntilEOF)||  ZCompressorFactory.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  UntilEOF)||  ZCompressorFactory.matches(signature,  UntilEOF))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	11	None	replace
65	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorOutputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCompressorOutputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCompressorOutputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
66	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	4	None	replace
67	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	4	None	replace
68	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if  (!FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	4	2	replace
69	[BUG]  [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	4	2	replace
70	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	4	None	replace
71	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (FramedCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	4	None	replace
72	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in);  [CE]  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  createCompressorInputStream(in);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  createCompressorInputStream(in);	      	non-compiled	[CE]  	9	None	replace
73	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE);  [CE]  [FE]                    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  createCompressorInputStream(in,  DEFLATE);	      	non-compiled	[CE]  	9	None	replace
74	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated);  [CE]  [FE]                      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZUtils.getInputStream(decompressConcatenated);	      	non-compiled	[CE]  	9	None	replace
75	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getCompressorInputStream(decompressConcatenated);  [CE]  [FE]                        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZUtils.getCompressorInputStream(decompressConcatenated);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZUtils.getCompressorInputStream(decompressConcatenated);	      	non-compiled	[CE]  	9	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getCompressorInputStream(in);  [CE]  [FE]                          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZUtils.getCompressorInputStream(in);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZUtils.getCompressorInputStream(in);	      	non-compiled	[CE]  	9	None	replace
77	[BUG]  [BUGGY]  InputStream  in  =  getCompressorInputStream(in);  [CE]  [FE]                            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  getCompressorInputStream(in);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  getCompressorInputStream(in);	      	non-compiled	[CE]  	9	None	replace
78	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressConcatenated))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  compressConcatenated))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	10	None	replace
79	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorInputStream.matches(signature,  pendingEOF))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	8	None	replace
80	[BUG]  [BUGGY]  if  (!ZCompressorFactory.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorFactory.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (!ZCompressorFactory.matches(signature,  UntilEOF))  {	  if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	8	None	replace
81	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&  XZUtils.isXZCompressionAvailable())  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if  (ZCompressorInputStream.matches(signature,  0)&&  XZUtils.isXZCompressionAvailable())  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	6	2	replace
82	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&  XZUtils.isXZCompressionAvailable())  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&  XZUtils.isXZCompressionAvailable())  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  0)&&  XZUtils.isXZCompressionAvailable())  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	6	2	replace
83	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&!LZMAUtils.isXZCompressionAvailable())  {  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&!LZMAUtils.isXZCompressionAvailable())  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  0)&&!LZMAUtils.isXZCompressionAvailable())  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
84	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  1))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	add	if  (ZCompressorInputStream.matches(signature,  1))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	6	2	replace
85	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  1))  {  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  1))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  1))  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	6	2	replace
86	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
87	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(deFLATE,  signature))  {  [CE]  cannot  find  symbol  deFLATE  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(deFLATE,  signature))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(deFLATE,  signature))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	2	None	replace
88	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  decompressConcatenated))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
89	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(DEFLATE,  signature))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(DEFLATE,  signature))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(DEFLATE,  signature))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
90	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  DEFLATE))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
91	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&!LZMAUtils.matches(signature,  signatureLength))  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
92	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated)  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated)  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated)  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
93	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
94	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(decompressConcatenated,  signature))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(decompressConcatenated,  signature))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
95	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(in,  decompressConcatenated))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(in,  decompressConcatenated))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(in,  decompressConcatenated))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
96	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [CE]  [FE]              CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  	1	None	replace
97	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
98	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
99	[BUG]  [BUGGY]  InputStream  in  =  XZ.createInputStream(decompressConcatenated);  [CE]  [FE]                  CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZ.createInputStream(decompressConcatenated);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZ.createInputStream(decompressConcatenated);	      	non-compiled	[CE]  	9	None	replace
100	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getCompressorInputStream(signature);  [CE]  [FE]                    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  XZUtils.getCompressorInputStream(signature);  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  XZUtils.getCompressorInputStream(signature);	      	non-compiled	[CE]  	9	None	replace
101	[BUG]  [BUGGY]  InputStream  in  =  getCompressorInputStream();  [CE]  [FE]                      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  InputStream  in  =  getCompressorInputStream();  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	InputStream  in  =  getCompressorInputStream();	      	non-compiled	[CE]  	9	None	replace
102	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCOMpressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!ZCOMpressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!ZCOMpressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
103	[BUG]  [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!XCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]      CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (!ZCompressorInputStream.matches(signature,  signatureLength))  {  if  (!XCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (!ZCompressorInputStream.matches(signature,    signatureLength))    {    if  (!XCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
104	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&  XZMAUtils.isXZCompressionAvailable())  {  [CE]  cannot  find  symbol  XZMAUtils  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0)&&  XZMAUtils.isXZCompressionAvailable())  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  0)&&  XZMAUtils.isXZCompressionAvailable())  {	  if    (ZCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  XZMAUtils	6	None	replace
105	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
106	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {	  if    (ZCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
107	[BUG]  [BUGGY]  if  (ZCompressorFactory.matches(signature,  UntilEOF)||  UntilEOF.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorFactory.matches(signature,  UntilEOF)||  UntilEOF.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorFactory.matches(signature,  UntilEOF)||  UntilEOF.matches(signature,  UntilEOF))  {	  if    (ZCompressorFactory.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	11	None	replace
108	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  UntilEOF)||  ZCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  UntilEOF)||  ZCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  UntilEOF)||  ZCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
109	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  UntilEOF)||  ZCompressorInputStream.matches(signatureLength,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  UntilEOF)||  ZCompressorInputStream.matches(signatureLength,  UntilEOF))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  UntilEOF)||  ZCompressorInputStream.matches(signatureLength,  UntilEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
110	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  XZUtils.isXZCompressionAvailable())  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  XZUtils.isXZCompressionAvailable())  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  XZUtils.isXZCompressionAvailable())  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
111	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [CE]  [FE]          CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE),  in)  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	2	None	replace
112	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {	  if    (ZCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
113	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCOMpressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  if  (ZCOMpressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  return  new  XZCompressorInputStream(in,  decompressConcatenated);  }  if  (LZMAUtils.matches(signature,  signatureLength)  &&  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	236	236	2	replace	if    (ZCompressorInputStream.matches(signature,    0))    {    if  (ZCOMpressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
