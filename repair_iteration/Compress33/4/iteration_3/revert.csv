projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[6];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=newbyte[12];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[6];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[16];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[4];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[10];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);byte[]signature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);}else{in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.flush();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.release();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=createInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);byte[]signature=in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=this.in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=createInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=createInputStream(in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(Signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes("UTF-8");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2InputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);byte[]signature=newbyte[12];in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){returnnewBZip2CompressorInputStream(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2InputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2CompressorInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2CompressorInputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=createInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2InputStream(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=newbyte[12];in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2InputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()||in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215(in.markSupported())){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamInputStream(in.markSupported());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readFully();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readUTF();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(BZIP_SIZE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[16];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[11];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[10];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[7];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[8];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);in.mark(Signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);InputStreamin.mark(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(Signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length,signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZi
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215StringsignatureLength=in.mark(signature.length+1);byte[]signature=in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,DEFLATE,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbytesignatureLength=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,BZIP2,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,INVALID);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);in.mark(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin.mark(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin=in.mark(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);in.mark(signature.length/12);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);byte[]signature=in.mark(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);in.mark(signature.length/12);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);in.mark(signature.length/12);this.decompressUntilEOF=IOUtils.readFully(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(IOUtils.readFully(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(IOUtils.readFully(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(IOUtils.readFully(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(!in.markSupported()){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(in.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);in.mark(Signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);InputStreamin.mark(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(Signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1));in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,12-signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,12L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,DEFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,DEFLATE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(deFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);byte[]signature=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);finalbyte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);byte[]signature=in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);in.mark(signature.length-6);returnnewCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);in.mark(signature.length-6);}else{in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);byte[]signature=newbyte[12];in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+11);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+6);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);in.mark(Signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+13);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+16);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(Signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signatureLength-2);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()||in.markSupported()){returnnewBZip2CompressorInputStream(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(!in.markSupported()){returnnewBZip2CompressorInputStream(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in.mark(signature.length+12));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length+12));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbytesignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(in,signature,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(Signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,8);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,signature.length,IOUtils.markSupported());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215scan(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,BZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);finalin.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbytesignatureLength=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);in.mark(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);in.mark(signature.length+11);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);in.mark(signature.length+11);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);in.mark(signature.length+11);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);in.mark(signature.length+11);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();byte[]signature=newbyte[12];in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();byte[]signature=in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();InputStreamin=newInputStreamInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();InputStreamin=newInputStreamInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();InputStreamin=newInputStreamInputStream(in.getBytes());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();InputStreamin=createInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215copy(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-1,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length,signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-1,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamInputStream(in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamInputStream(in.getBytes());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamReader(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamInputStream(in.getVersion());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(Signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=this.in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=this.in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signatureLength-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signatureLength>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signatureLength-1);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[11];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZ
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[7];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length,signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.read(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);}else{in.mark(signature.length-10);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);}else{in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);in.mark(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);in.mark(signature.length+6);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);in.mark(signature.length+6);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);in.mark(signature.length+6);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);in.mark(signature.length+6);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);in.mark(signature.length+6);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-1,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,12L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature,IOUtils.readFully(signature));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature,IOUtils.readFully(in));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);in.mark(signature.length-10);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=in.read(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)/1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+2;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+12;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+4;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+3;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)-1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215n.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);in.mark(signature.length+2);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalInputStreamin.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,sign.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signature.length,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12);in.mark(Signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);InputStreamin.mark(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(Signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-zwölf);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-6);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(IOUtils.readFully(in,signature)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);in.mark(signature.length+13);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbytesignatureLength=IOUtils.readFully(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readIn(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=_in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readIn(),in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,in.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,byteLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length-2);}else{in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);in.mark(signature.length-11);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.setLength(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-1,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signnature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(decompressConcatenated,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[12];in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];finalin.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];finalbyte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[10];in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);in.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);in.mark(signature.length-3);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);byte[]signature=in.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);in.mark(signature.length-3);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);in.mark(signature.length-3);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);in.mark(signature.length-3);returnnewCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in.mark(signature.length+1));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length+1));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in.mark(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}else{thrownewCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}else{thrownewCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-1+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length*12+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(Signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes(".UTF-8");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes(",UTF-8");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes("UTF-8","UTF-8");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes("US-ASCII");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes("UTF-8");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[4];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newbyte[0];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=createInputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[12];in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];finalin.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature.length,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.length,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(signature,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);finalbyte[]signature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+1);in.mark(Signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);InputStreamin.mark(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(Signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+1));in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(),in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getOutputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(in.getVersion());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(in.getCharset());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(in.markSupported());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(signature,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(false);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);byte[]signature=in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);in.mark(signature.length-4);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);in.mark(signature.length-4);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);in.mark(signature.length-4);this.decompressUntilEOF=IOUtils.readFully(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);in.mark(signature.length-4);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[16];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);byte[]signature=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);finalbyte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[10];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()||in.markSupported()){in.close();}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215while(in.markSupported()){in.close();}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-2,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);in.mark(signature.length+3);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,Integer.toHexString(in.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,in.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,in.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,Integer.toString(in.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);finalbyte[]signature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length,signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+12);}else{in.mark(signature.length+12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);}else{in.mark(signature.length+1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+12);}else{in.mark(signature.length+11);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+12);}else{in.mark(signature.length+1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()||in.markSupported()){in.close();}else{System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215System.arraycopy(signature,0,signature,0,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{System.arraycopy(signature,0,Signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.readFully();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.readUTF();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(in.getCharacterEncoding());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);in.mark(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);in.mark(signature.length*12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);in.mark(signature.length*12);if(BZip2CompressorInputStream.matches(signature.length*12)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);in.mark(signature.length*12);if(IOUtils.readFully(signature.length*12)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);in.mark(signature.length*12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);in.mark(signature.length*12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=IOUtils.read(signature,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[12];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];finalin.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[16];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalInputStreamin=newBZip2InputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();}elseif(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()||in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();}elseif(in.markSupported()||in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("".);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signatureLength-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}else{thrownewCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.flush();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin.flush();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=createInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=signature.setLength(in.setLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=sign.setLength(in.setLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=this.in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=SignatureUtils.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=file.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.read().setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature.length,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();}elseif(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();}elseif(!in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();}elseif(in.markSupported()||in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("Markisnotsupported..");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.reset();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setSupported(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setSupported(false);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setSupported(true);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215StringsignatureLength=in.mark(signature.length-1);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);finalbyte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(this.compressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in.mark(signature.length-2));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in.mark(signature.length-1));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-1));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamReader(in,DEFLATE).copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamReader(in,DEFLATE.copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=in.copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(!in.markSupported()){in.close();}else{System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){out.close();}else{System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin=createInputStream(in,signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signatureLength>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signatureLength>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signatureLength,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);}else{in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);}else{in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength*1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,file.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length*1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);in.mark(signature.length-12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);in.mark(signature.length-12);}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);in.mark(signature.length-1);}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(markSupported());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-12);out.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[6];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[4];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnew
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(Signature.length-1+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=this.in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);}else{in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}else{System.arraycopy(signature,0,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(!in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(!in.markSupported()){in.mark(signature.length);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(!in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(!in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){if(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+6;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=(byte[])in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[8];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);in.mark(signature.length+1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);in.mark(signature.length+1);}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);in.mark(signature.length+1);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);in.mark(signature.length+1);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnew
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,UntilEOF)){in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZ
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=IOUtils.readIn(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=IOUtils.readIn(signature,this.in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readFully();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=IOUtils.readIn(this.in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=createInputStream(in,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);byte[]signature=in.mark(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin.mark(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin=newBZip2CompressorInputStream(in,signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin=newBZip2InputStream(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin=newBZip2CompressorInputStream(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.set(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.mark(signature.length-1);out.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes("UTF-8").replace('n','r');
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes("UTF-8").replace('0','0');
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length,16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/8);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);byte[]signature=in.mark(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin.mark(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin=newBZip2CompressorInputStream(in,signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin=newBZip2CompressorInputStream(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);}else{in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=newInteger(Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamReader(in,DEFLATE).write(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamReader(InputStream.DEFLATE,signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=newBZip2CompressorInputStream(in,signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=newBZip2CompressorInputStream(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length);InputStreamin=createInputStream(in.mark(signature.length+12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+12);InputStreamin=createInputStream(in.mark(signature.length+12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){finalin.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){out.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);}else{in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,32);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,sign.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,GZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.set(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+1);byte.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream().getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);byte[]signature=in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2CompressorInputStream(in,signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);byte[]signature=in.mark(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin=newBZip2CompressorInputStream(in,signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin.mark(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin=newBZip2InputStream(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=in.copy(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215scan(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-12);InputStreamin=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(deFLATE,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(DEFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);out.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature,in.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signatureLength==0){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signatureLength==0){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signatureLength>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=INVALID_SIZE.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=SIZE_LENGTH.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=signature.setLength(in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+12);}else{in.mark(signature.length+12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+1);}else{in.mark(signature.length+1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+1);in.mark(signature.length+1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature,0,signature.length);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();byte[]in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();InputStreamin=getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();byte[]signature=newbyte[6];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);}else{returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-12);in.mark(signature.length-12);}else{returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-12);}else{in.mark(signature.length-12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-12);in.mark(signature.length-12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2InputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);byte[]signature=in.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=newBZip2CompressorInputStream(in,signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=newBZip2CompressorInputStream(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(0);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length-1);in.mark(signature.length-1);}else{returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length-1);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);}else{in.reset();returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=newbyte[4];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);}else{in.mark(signature.length-2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length-2);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length-2);}else{in.mark(signature.length-2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2CompressorInputStream(in,signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2CompressorInputStream(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,32);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin=newBZip2CompressorInputStream(in,signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin=newBZip2InputStream(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin=newBZip2CompressorInputStream(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2InputStream(signature,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){if(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){if(in.markSupported()){in.close();}while(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){if(in.markSupported()){in.close();}else{thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);byte[]signature=in.mark(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin.mark(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin=newBZip2InputStream(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin=newBZip2CompressorInputStream(in,signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin=newBZip2CompressorInputStream(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,32);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.read(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStreamReader(in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(SignatureUtils.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(decompressUntilEOF.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signal.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2));}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){finalin.close();}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{thrownewCompressorException(".");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=createInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in=newBZip2CompressorInputStream(signature,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=IOUtils.readFully(signature,this.in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(compressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(false);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(64);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);byte[]signature=in.mark(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin.mark(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin=newBZip2CompressorInputStream(in,signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin=newBZip2CompressorInputStream(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin=newBZip2InputStream(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[5];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(false);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature==null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenation)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.set(signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=createInputStream(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.decompress(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=createInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,decompressConcatenated)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=decompressConcatenated.mark(signature.length-1);InputStreamin=newBZip2InputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=decompressConcatenated.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);}else{in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature!=null){in.mark(signature.length-1);in.mark(signature.length-1);returnnewCompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);byte[]signature=in.mark(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin.mark(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin=newBZip2CompressorInputStream(in,signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin=newBZip2InputStream(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin=newBZip2CompressorInputStream(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(decompressConcatenated,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=decompressConcatenated.mark(in,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.write(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.set(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-11);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);in.mark(signature.length-16);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);InputStreamin=newBZip2Compressor(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readLine();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2InputStream(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.setLength(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZIPInputStream(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newFileInputStream(decompressConcatenated,signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newFileInputStream(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newFileInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZIPInputStream(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read(BZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readLine();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);InputStreamin=newBZip2Compressor(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length-1);}else{returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length-12);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(signature.getBytes());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[0];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2CompressorInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.mark(signature.length-1);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-1,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=signature.length-1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215while(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.read(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(strategy);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZ
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);InputStreamin=newBZip2InputStream(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readOut();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()||in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(!in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,decompressConcatenated,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=decompressConcatenated.mark(signature.length,in.mark(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=decompressConcatenated.mark(signature.length,in.markSupported());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);InputStreamin=newBZip2InputStream(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in,decompressConcatenated,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()||in.markSupported()){in.close();}elseif(in.markSupported()){returnnewBZip2CompressorInputStream(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()||in.markSupported()){returnnewBZip2CompressorInputStream(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[5];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.write(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.skip(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);in.mark(signature.length+2);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);InputStreamin=newBZip2Compressor(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2InputStream(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);InputStreamin=newBZip2CompressorInputStream(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);byte[]signature=newbyte[12];in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();byte[]signature=newbyte[6];in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2InputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=signnature.setLength(in.setLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=SignatureFactory.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=this.signature.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1+16);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+1);}else{in.mark(signature.length+2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+1);}else{in.mark(signature.length+2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signage.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signnature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZ
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZi
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=in.mark(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);}else{in.mark(signature.length-2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);in.mark(signature.length-2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);in.mark(signature.length-2);}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature,in.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=newbyte[16];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,BZIP1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length,in.length);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,Integer.parseInt(in.getLength()));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,Integer.parseInt(in.getBytes()));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);this.decompressUntilEOF=IOUtils.readFully(signature,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);byte[]signature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);InputStreamin.mark(signature.length-12);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);InputStreamin.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-12);InputStreamin.mark(signature.length-12);}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215while(in.markSupported()){in.close();}else{System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=12){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=12){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=12){in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZIPInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZIPInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newFileInputStream(in.getPath());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZIPInputStream(in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[16];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=createInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newbyte[16];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(in,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.write(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);in.skip(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=newBZip2InputStream(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);InputStreamin=in.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated,in.getCharacterIndex());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated,in.available());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);InputStreamin=newBZip2CompressorInputStream(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);byte[]signature=newbyte[6];in.mark(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.close();}elseif(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){if(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){if(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){if(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.write(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.set(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);in.mark(signature.length-1);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+12);}else{in.mark(signature.length+11);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length!=0){in.mark(signature.length+12);}else{in.mark(signature.length+13);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZIPInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=createInputStream(in,decompressConcatenated,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);}else{in.mark(signature.length-2);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-1);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>12){in.mark(signature.length-2);}else{in.mark(signature.length-1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin=newBZip2InputStream(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin=newBZip2CompressorInputStream(in,signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);InputStreamin=newBZip2CompressorInputStream(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);byte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);in.mark(signature.length-1);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length>0){in.mark(signature.length-1);in.mark(signature.length-1);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,in.readUTF());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,in.readCharacters());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated,in.getCharacters());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newCompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);finalin.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2InputStream(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);byte[]signature=newbyte[12];in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);in.mark(signature.length-4);}else{in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);InputStreamin=newBZip2InputStream(in,signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2CompressorInputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2CompressorInputStream(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copyOf(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=createInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,de
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(signature.length==0){in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);InputStreamin=newBZip2InputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.readLine();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read(BZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[12];in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);finalbyte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.mark(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);in.write(signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=newBZip2InputStream(signature,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=this.in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.length();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-2,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-4,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[6];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[4];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[2];
