projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[6];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalintsignatureLength=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);returnnewCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);in.mark(signature.length-1);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);byte[]signature=newbyte[12];in.mark(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215IntegersignatureLength=in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);in.mark(signature.length+12);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);in.mark(signature.length-12);}elseif(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[6];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[16];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[4];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215finalbyte[]signature=newbyte[1];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[10];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length/12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);byte[]signature=in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);this.decompressUntilEOF=IOUtils.readFully(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);in.mark(signature.length-2);}else{in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.markSupported();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.flush();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.release();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-6);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-11);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length)+1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=createInputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);byte[]signature=in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=this.in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in,signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in.mark(signature.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);InputStreamin=createInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-1+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature,0,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.copy(signature,0,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in,signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length*12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=createInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=createInputStream(in.mark(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);byte[]signature=newbyte[12];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=getInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=newbyte[2];
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215Integersignature=in.setLength(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(Signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.getBytes("UTF-8");
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=createInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+13);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215intsignatureLength=in.read(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.write(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);InputStreamin=newBZip2InputStream(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-2);byte[]signature=newbyte[12];in.mark(signature.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{thrownewCompressorException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){returnnewBZip2CompressorInputStream(in,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}elseif(in.markSupported()){thrownewCompressorException("Markisnotsupported.");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215if(in.markSupported()){in.close();}else{System.arraycopy(signature,0,signature,0,in.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(IOUtils.readFully(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+1);in.mark(signature.length+1);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2InputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2CompressorInputStream(in,signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length+12);InputStreamin=newBZip2CompressorInputStream(signature.length+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215InputStreamin=this.in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.setLength(signature,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=createInputStream(signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-1);InputStreamin=newBZip2InputStream(in,signature.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2InputStream(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);byte[]signature=newbyte[12];in.mark(signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215in.mark(signature.length-12);InputStreamin=newBZip2InputStream(in,signature.length-12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java215byte[]signature=in.mark(signature.length-1);
