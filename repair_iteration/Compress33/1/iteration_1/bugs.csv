bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	add	if  (in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
2	[BUG]  [BUGGY]  if  (in!=  null)  {  [FE]  IllegalArgumentException  [FE]    CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
3	[BUG]  [BUGGY]  if  (in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]      CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	if  (in  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	1	None	replace
4	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in.markSupported())  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	add	if  (in  ==  null  ||  in.markSupported())  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
5	[BUG]  [BUGGY]  if  (in  ==  null  ||  in.markSupported())  {  [FE]  IllegalArgumentException  [FE]        CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in.markSupported())  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in  ==  null  ||  in.markSupported())  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
6	[BUG]  [BUGGY]  if  (in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]          CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in  ==  null  ||  in.isEnabled(Feature.QUOTE_FIELD_NAME))  {	if  (in  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	1	None	replace
7	[BUG]  [BUGGY]  if  (in  ==  null  ||  in.getType()  ==  Token.GETPROP)  {  [CE]  cannot  find  symbol  [FE]            CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in.getType()  ==  Token.GETPROP)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in  ==  null  ||  in.getType()  ==  Token.GETPROP)  {	if  (in  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	  	if  (in  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	add	if  (in  ==  null  ||  in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
10	[BUG]  [BUGGY]  if  (in  ==  null  ||  in!=  null)  {  [FE]  IllegalArgumentException  [FE]    CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in!=  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in  ==  null  ||  in!=  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  IllegalArgumentException  	1	2	replace
11	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	add	if  (in  ==  null  ||  in  ==  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  CompressorException  	1	2	replace
12	[BUG]  [BUGGY]  if  (in  ==  null  ||  in  ==  null)  {  [FE]  CompressorException  [FE]      CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if  (in  ==  null  ||  in  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if  (in  ==  null  ||  in  ==  null)  {	if  (in  ==  null)  {  	compilable	  [FE]  CompressorException  	1	2	replace
13	[BUG]  [BUGGY]  if(in  ==  null  ||  in.getClass()!=  getClass())  {  [CE]  incomparable  types:  Class<CAP#1>  and  Class<CAP#2>  [FE]    CompressorException  [CONTEXT]  throws  CompressorException  {  [BUGGY]  if(in  ==  null  ||  in.getClass()!=  getClass())  {  [BUGGY]  throw  new  IllegalArgumentException( "Stream  must  not  be  null. ");  }  if  (!in.markSupported())  {  throw  new  IllegalArgumentException( "Mark  is  not  supported. ");  }  final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	206	206	2	replace	if(in  ==  null  ||  in.getClass()!=  getClass())  {	if  (in  ==  null)  {  	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  Class<CAP#2>	1	None	replace
