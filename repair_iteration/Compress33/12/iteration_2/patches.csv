bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	40	None	replace
2	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.isEnabled()  ||  decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.isEnabled()  ||  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.isEnabled()  ||  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	40	None	replace
3	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)||  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	40	None	replace
4	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in.isEnabled())  {  [CE]  ')'  expected  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  ')'  expected	40	None	replace
5	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	72	None	replace
6	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	72	None	replace
7	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	72	None	replace
8	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	69	None	replace
9	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  decompressConcatenated))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	69	None	replace
10	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in,  signatureLength))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	69	None	replace
11	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE,  decompressConcatenated))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	69	None	replace
12	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	26	None	replace
13	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  frame.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  frame  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  frame.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  frame.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  frame	26	None	replace
14	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
15	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	26	None	replace
16	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  frames.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  frames  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  frames.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  frames.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  frames	26	None	replace
17	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(signatureLength);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(signatureLength);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(signatureLength);	  in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	21	None	replace
18	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressUntilEOF);  [CE]  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(decompressUntilEOF);	  in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	21	None	replace
19	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
20	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
21	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  framedSnappyCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  framedSnappyCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  framedSnappyCompressorInputStream.matches(signature,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
22	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
23	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
24	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  1.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  1.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  1.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
25	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  0.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  0.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
26	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
27	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
28	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
29	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  1))  {  [FE]  CompressorException  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
30	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if  (ZCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
31	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (ZCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
32	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	11	None	replace
33	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	11	None	replace
34	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
35	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_FRAMED))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_FRAMED))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_FRAMED))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
36	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	42	None	replace
37	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  false))  {  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  false))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  false))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	42	None	replace
38	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  true))  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  true))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  true))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	42	None	replace
39	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  null))  {  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  null))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  null))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	42	None	replace
40	[BUG]  [BUGGY]  InputStream  in  =  FramedSnappyCompressorInputStream.matches(signature,  0);  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  FramedSnappyCompressorInputStream.matches(signature,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  FramedSnappyCompressorInputStream.matches(signature,  0);	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  	42	None	replace
41	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
42	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(in,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(in,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
43	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
44	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
45	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
46	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
47	[BUG]  [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in,  decompressConcatenated);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedCompressorInputStream(in,  decompressConcatenated);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in);    	non-compiled	[CE]  	15	None	replace
48	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in);    	non-compiled	[CE]  	15	None	replace
49	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.length)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  length  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.length)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in.length)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
50	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.length))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
51	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
52	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length,  DEFLATE))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
53	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length),  in.length)  {  [CE]  ')'  expected  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length),  in.length)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length),  in.length)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  ')'  expected	4	None	replace
54	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
55	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  decompressUntilEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	84	None	replace
56	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
57	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	73	None	replace
58	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	73	None	replace
59	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	58	None	replace
60	[BUG]  [BUGGY]  if  (FramedCompressorStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramedCompressorStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorStream	58	None	replace
61	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  DEFLATE))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	58	None	replace
62	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	58	None	replace
63	[BUG]  [BUGGY]  if  (FramedCompressorStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedCompressorStream  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorStream	58	None	replace
64	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	33	None	replace
65	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
66	[BUG]  [BUGGY]  if  (framedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  framedSnappyCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (framedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (framedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  framedSnappyCompressorInputStream	33	None	replace
67	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  new  FramedSnappyCompressorInputStream(in)))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  new  FramedSnappyCompressorInputStream(in)))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  new  FramedSnappyCompressorInputStream(in)))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	105	None	replace
68	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  new  FramedSnappyCompressorInputStream()))  {  [CE]  constructor  FramedSnappyCompressorInputStream  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  new  FramedSnappyCompressorInputStream()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  new  FramedSnappyCompressorInputStream()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  constructor  FramedSnappyCompressorInputStream  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	105	None	replace
69	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
70	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  DEFLATE);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  DEFLATE);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
71	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  decompressUntilEOF);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
72	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  BZIP2);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  BZIP2);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  BZIP2);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
73	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompress))  {  [CE]  cannot  find  symbol  decompress  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompress))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompress))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    compressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	81	None	replace
74	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressCenated))  {  [CE]  cannot  find  symbol  decompressCenated  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressCenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressCenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    compressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompressCenated	81	None	replace
75	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	104	None	replace
76	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	104	None	replace
77	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	104	None	replace
78	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated,  signatureLength))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	104	None	replace
79	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	104	None	replace
80	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
81	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
82	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF  &&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF  &&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF  &&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
83	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated.canAssignTo(in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated.canAssignTo(in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated.canAssignTo(in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
84	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated,  SHORT_DESCRIPTION))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated,  SHORT_DESCRIPTION))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated,  SHORT_DESCRIPTION))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
85	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	87	None	replace
86	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	87	None	replace
87	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	87	None	replace
88	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  null))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  null))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  null))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	87	None	replace
89	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(in);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(in);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
90	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(this.decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(this.decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(this.decompressConcatenated);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
91	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressUntilEOF);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(decompressUntilEOF);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
92	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(signatureLength);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(signatureLength);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(signatureLength);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
93	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(signature);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(signature);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(signature);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
94	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(compiler);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(compiler);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(compiler);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
95	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(DEFLATE);  [CE]  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(DEFLATE);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
96	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
97	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
98	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  framedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  framedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  framedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
99	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	2	None	replace
100	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	83	None	replace
101	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressUntilEOF)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
102	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
103	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
104	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
105	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0),  0)  {  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0),  0)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0),  0)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
106	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	47	None	replace
107	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	47	None	replace
108	[BUG]  [BUGGY]  InputStream  in  =  this.getInputStream();  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  this.getInputStream();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  this.getInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
109	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(),  in);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(),  in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(),  in);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
110	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(FramedSnappyCompressorInputStream.class);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(FramedSnappyCompressorInputStream.class);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(FramedSnappyCompressorInputStream.class);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
111	[BUG]  [BUGGY]  InputStream  in  =  getOutputStream();  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getOutputStream();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getOutputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
112	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(FramedSnappyCompressor.class);  [CE]  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(FramedSnappyCompressor.class);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(FramedSnappyCompressor.class);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
113	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(),  decompressConcatenated);  [CE]  [FE]                                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(),  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(),  decompressConcatenated);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
114	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	56	None	replace
115	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	56	None	replace
116	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	55	None	replace
117	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  	55	None	replace
118	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	55	None	replace
119	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Z,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Z,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  Z,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
120	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  Z))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  Z))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  Z))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
121	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
122	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  SNAPPY_RAW))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  SNAPPY_RAW))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
123	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Z))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Z))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  Z))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
124	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
125	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  Z))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  Z))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  Z))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
126	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	53	None	replace
127	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	53	None	replace
128	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  	53	None	replace
129	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	22	None	add
130	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  ';'  expected	22	None	add
131	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	22	None	add
132	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&|  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&|  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&|  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
133	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  FRAMED))  {  [CE]  cannot  find  symbol  FRAMED  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  FRAMED))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  FRAMED))  {	  if    (FramedSnappyCompressorInputStream.matches(deFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  FRAMED	67	None	replace
134	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
135	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	86	None	replace
136	[BUG]  [BUGGY]  if  (InputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (InputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (InputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
137	[BUG]  [BUGGY]  if  (FramedSnappyInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedSnappyInputStream  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyInputStream	86	None	replace
138	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isSnappy())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
139	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
140	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
141	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  null))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  null))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  null))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
142	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  this.decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  this.decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  this.decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
143	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
144	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressConcatenated);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(signature,  decompressConcatenated);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
145	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  0);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  0);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
146	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(signatureLength,  decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(signatureLength,  decompressConcatenated);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
147	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)&&  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)&&  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)&&  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
148	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)||  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)||  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)||  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
149	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE)||  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE)||  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE)||  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
150	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  in.isInterface())  {  [CE]  ')'  expected  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  ')'  expected	39	None	replace
151	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DEFLATE)||  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DEFLATE)||  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DEFLATE)||  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
152	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressUntilEOF);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
153	[BUG]  [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedCompressorInputStream(in);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
154	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
155	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	44	None	add
156	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    If  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  ';'  expected	44	None	add
157	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(Signature,  0))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(Signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(Signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	44	None	add
158	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0,))  {  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0,))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0,))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
159	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
160	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	32	None	replace
161	[BUG]  [BUGGY]  if  (framedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  framedSnappyCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (framedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (framedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  framedSnappyCompressorInputStream	32	None	replace
162	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	32	None	replace
163	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.decompressUntilEOF)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
164	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)  &&  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)  &&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)  &&  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.decompressUntilEOF)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
165	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF  ||  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF  ||  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF  ||  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.decompressUntilEOF)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
166	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.decompressUntilEOF)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
167	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.decompressUntilEOF)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
168	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled()  &&  decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled()  &&  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled()  &&  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
169	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
170	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
171	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
172	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
173	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
174	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DECOMPRESSED)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DECOMPRESSED)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DECOMPRESSED)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	82	None	replace
175	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
176	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	compilable	  [FE]  CompressorException  	82	2	replace
177	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [FE]  CompressorException  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	compilable	  [FE]  CompressorException  	82	2	replace
178	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  0,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  0,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  0,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
179	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  null))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  null))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  null))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
180	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
181	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	63	None	replace
182	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	63	None	replace
183	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	63	None	replace
184	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DECOMPRESSION))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DECOMPRESSION))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DECOMPRESSION))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	63	None	replace
185	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	36	None	replace
186	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  	36	None	replace
187	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature,  DEFLATE))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	36	None	replace
188	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	36	None	replace
189	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
190	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in!=  null)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in!=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
191	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  instanceof  FramedSnappyCompressorInputStream)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  instanceof  FramedSnappyCompressorInputStream)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  instanceof  FramedSnappyCompressorInputStream)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
192	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in!=  null)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in!=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
193	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in!=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	compilable	  [FE]  CompressorException  	77	2	replace
194	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in!=  null)  {  [FE]  CompressorException  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in!=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	compilable	  [FE]  CompressorException  	77	2	replace
195	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressConcatenated);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressConcatenated);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
196	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength,  decompressConcatenated);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength,  decompressConcatenated);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
197	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  0);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  0);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
198	[BUG]  [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedCompressorInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
199	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  this.decompressUntilEOF);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  this.decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  this.decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
200	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
201	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
202	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
203	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine(),  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine(),  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine(),  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
204	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
205	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
206	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	7	None	replace
207	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE,  DEFLATE))  {  [CE]  cannot  find  symbol  DFLATE  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DFLATE	7	None	replace
208	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  DELETE))  {  [CE]  cannot  find  symbol  DELETE  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  DELETE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  DELETE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DELETE	7	None	replace
209	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
210	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	25	None	replace
211	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompress))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	38	None	replace
212	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompress))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
213	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompress))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	38	None	replace
214	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	8	None	replace
215	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	8	None	replace
216	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	48	None	replace
217	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
218	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated,  in)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated,  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated,  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  	71	None	replace
219	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
220	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
221	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
222	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
223	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(Signature,  0))  {  [CE]  cannot  find  symbol  Signature  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(Signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(Signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(Signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Signature	43	None	replace
224	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(Signature,  0))  {  [CE]  cannot  find  symbol  Signature  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(Signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(Signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(Signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Signature	43	None	replace
225	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(!FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if(!FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(Signature,    0))    {    	compilable	  [FE]  CompressorException  	43	2	replace
226	[BUG]  [BUGGY]  if(!FramedSnappyCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(!FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(!FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(Signature,    0))    {    	compilable	  [FE]  CompressorException  	43	2	replace
227	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DELETE))  {  [CE]  cannot  find  symbol  DELETE  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DELETE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DELETE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DELETE))    {    	non-compiled	[CE]  cannot  find  symbol  DELETE	37	None	replace
228	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
229	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
230	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
231	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  ';'  expected	24	None	add
232	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
233	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]          CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
234	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  SignatureLength))  {  [CE]  'catch'  without  'try'  [FE]            CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  SignatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  SignatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
235	[BUG]  [BUGGY]  InputStream  in  =  this.in.readIn();  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  this.in.readIn();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  this.in.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
236	[BUG]  [BUGGY]  InputStream  in  =  in.read();  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  in.read();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  in.read();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
237	[BUG]  [BUGGY]  InputStream  in  =  frame.readIn();  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  frame.readIn();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  frame.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
238	[BUG]  [BUGGY]  InputStream  in  =  in.readFully();  [CE]  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  in.readFully();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  in.readFully();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
239	[BUG]  [BUGGY]  InputStream  in  =  in.readUTF();  [CE]  [FE]                                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  in.readUTF();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  in.readUTF();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
240	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  false)||  FramedSnappyCompressorInputStream.matches(signature,  false))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  false)||  FramedSnappyCompressorInputStream.matches(signature,  false))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  false)||  FramedSnappyCompressorInputStream.matches(signature,  false))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	45	None	replace
241	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in.length)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  length  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in.length)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in.length)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
242	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
243	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
244	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  cannot  find  symbol  length  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
245	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
246	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
247	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
248	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  SnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  SnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  SnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
249	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
250	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  SnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  SnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  SnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
251	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)  {  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  ')'  expected	97	None	replace
252	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	97	None	replace
253	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)  {  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  ')'  expected	97	None	replace
254	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressConcatenated)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  	97	None	replace
255	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  	97	None	replace
256	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	61	None	replace
257	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	61	None	replace
258	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in),  decompressConcatenated)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  	61	None	replace
259	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	28	None	replace
260	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	64	None	replace
261	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	64	None	replace
262	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)||  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)||  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)||  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	64	None	replace
263	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF,  DEFLATE))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	64	None	replace
264	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  framedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  framedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  pendingEOF)&&  framedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	64	None	replace
265	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	64	None	replace
266	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	64	None	replace
267	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    in)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
268	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    in)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	96	None	replace
269	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in)  {  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    in)    {    	non-compiled	[CE]  ')'  expected	96	None	replace
270	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    in)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
271	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	3	None	replace
272	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	3	None	replace
273	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  null)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  null)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  null)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	3	None	replace
274	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
275	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.readLine()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  in.readLine()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
276	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
277	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()),  in.readLine())  {  [CE]  ')'  expected  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()),  in.readLine())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()),  in.readLine())  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  ')'  expected	6	None	replace
278	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
279	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
280	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  Z))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  Z))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  Z))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
281	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  FIELD_COMPRESSION))  {  [CE]  cannot  find  symbol  FIELD_COMPRESSION  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  FIELD_COMPRESSION))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  FIELD_COMPRESSION))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_COMPRESSION	27	None	replace
282	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  SIZ_COMPRESSION))  {  [CE]  cannot  find  symbol  SIZ_COMPRESSION  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  SIZ_COMPRESSION))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  SIZ_COMPRESSION))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  SIZ_COMPRESSION	27	None	replace
283	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressUntilEOF);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(signature,  decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signature);    	non-compiled	[CE]  	19	None	replace
284	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	75	None	replace
285	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	75	None	replace
286	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
287	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
288	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
289	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
290	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
291	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
292	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
293	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressConcatenated)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressConcatenated)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  	1	None	replace
294	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	29	None	replace
295	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	29	None	replace
296	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	74	None	replace
297	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  BZIP2))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  BZIP2))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  BZIP2))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	74	None	replace
298	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in!=  null)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in!=  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	85	None	replace
299	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in!=  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	85	None	replace
300	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  in,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  in,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	103	None	replace
301	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	103	None	replace
302	[BUG]  [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramesSnappyCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesSnappyCompressorInputStream	59	None	replace
303	[BUG]  [BUGGY]  if  (FramesCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramesCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesCompressorInputStream	59	None	replace
304	[BUG]  [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  FramesSnappyCompressorInputStream  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesSnappyCompressorInputStream	59	None	replace
305	[BUG]  [BUGGY]  if  (FramesCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramesCompressorInputStream  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesCompressorInputStream	59	None	replace
306	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	35	None	replace
307	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	35	None	replace
308	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	35	None	replace
309	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(signatureLength);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
310	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressUntilEOF);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(decompressUntilEOF);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
311	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressUntilEOF);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressUntilEOF);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
312	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(this.decompressConcatenated);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(this.decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(this.decompressConcatenated);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
313	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(compressConcatenated,  decompressUntilEOF);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(compressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(compressConcatenated,  decompressUntilEOF);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
314	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(compiler);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(compiler);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(compiler);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
315	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {	  	non-compiled	[CE]  'catch'  without  'try'	106	None	add
316	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    If  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {	  	non-compiled	[CE]  ';'  expected	106	None	add
317	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  if  (FramedSnappyCompressorInputStream.matches(Signature,  -1))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1))  {  if  (FramedSnappyCompressorInputStream.matches(Signature,  -1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    if  (FramedSnappyCompressorInputStream.matches(Signature,  -1))  {	  	non-compiled	[CE]  'catch'  without  'try'	106	None	add
318	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  enum))  {  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  enum))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  enum))  {	  if    (FramedCompressorInputStream.matches(signature,    enum))    {    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	108	None	replace
319	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  enumLength))  {  [CE]  cannot  find  symbol  enumLength  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  enumLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  enumLength))  {	  if    (FramedCompressorInputStream.matches(signature,    enum))    {    	non-compiled	[CE]  cannot  find  symbol  enumLength	108	None	replace
320	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(enum,  signature))  {  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(enum,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(enum,  signature))  {	  if    (FramedCompressorInputStream.matches(signature,    enum))    {    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	108	None	replace
321	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
322	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
323	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
324	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	76	None	replace
325	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(pack200);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(pack200);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(pack200);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signatureLength);    	non-compiled	[CE]  	18	None	replace
326	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength  +  1);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength  +  1);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength  +  1);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signatureLength);    	non-compiled	[CE]  	18	None	replace
327	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompress))  {  [CE]  cannot  find  symbol  decompress  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompress))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompress))  {	  if    (FramedCompressorInputStream.matches(signature,    compressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	34	None	replace
328	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)&&  FramedSnappyCompressorInputStream.matches(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
329	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	compilable	  [FE]  CompressorException  	46	2	replace
330	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	compilable	  [FE]  CompressorException  	46	2	replace
331	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
332	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
333	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
334	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
335	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
336	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
337	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  DEFLATE);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
338	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  BZIP2);  [CE]  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  BZIP2);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  BZIP2);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
339	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [CE]  [FE]                                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
340	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  DEFLATE);  [CE]  [FE]                                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
341	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
342	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
343	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled()  ||  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled()  ||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled()  ||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
344	[BUG]  [BUGGY]  if  (FramedCompressor.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramedCompressor  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressor.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressor.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressor	13	None	replace
345	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	13	None	replace
346	[BUG]  [BUGGY]  if  (FramedCompressor.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedCompressor  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressor.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressor.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressor	13	None	replace
347	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	68	None	replace
348	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	68	None	replace
349	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(deflate,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	70	None	replace
350	[BUG]  [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FrameSnappyCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FrameSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameSnappyCompressorInputStream	57	None	replace
351	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  SNAPPY_RAW))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	62	None	replace
352	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  SNAPPY_RAW))  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	62	None	replace
353	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  SNAPPY_RAW))  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
354	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  SNAPPY_RAW))  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	62	None	replace
355	[BUG]  [BUGGY]  if  (JSCompressorInputStream.matches(signature,  SNAPPY_RAW))  {  [CE]  cannot  find  symbol  JSCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (JSCompressorInputStream.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (JSCompressorInputStream.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol  JSCompressorInputStream	62	None	replace
356	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	78	None	replace
357	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
358	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	78	None	replace
359	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
360	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    FIELD_COMPRESSION))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
361	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	66	None	replace
362	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	66	None	replace
363	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	66	None	replace
364	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	31	None	replace
365	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  null))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  null))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  null))  {	  if    (FramedCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	31	None	replace
366	[BUG]  [BUGGY]  If  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  ';'  expected	31	None	replace
367	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  decompressUntilEOF,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  decompressUntilEOF,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  decompressUntilEOF,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	30	None	replace
368	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	65	None	replace
369	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	65	None	replace
370	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	65	None	replace
371	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  descompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  descompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	65	None	replace
372	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated),  in)  {  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated),  in)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  	65	None	replace
373	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
374	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DELETE))  {  [CE]  cannot  find  symbol  DELETE  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DELETE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DELETE))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DELETE	60	None	replace
375	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DFLATE))  {  [CE]  cannot  find  symbol  DFLATE  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  DFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DFLATE	60	None	replace
376	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  in,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	28	None	replace
377	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	28	None	replace
378	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
379	[BUG]  [BUGGY]  if  (FramedCompressorStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	58	None	replace
380	[BUG]  [BUGGY]  if  (FramesCompressorStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramesCompressorStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesCompressorStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesCompressorStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesCompressorStream	58	None	replace
381	[BUG]  [BUGGY]  if  (FramedCompressorStream.matches(decompressConcatenated,  signature))  {  [CE]  cannot  find  symbol  FramedCompressorStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorStream.matches(decompressConcatenated,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorStream.matches(decompressConcatenated,  signature))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorStream	58	None	replace
382	[BUG]  [BUGGY]  if  (FrameworkCompressorStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FrameworkCompressorStream  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameworkCompressorStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameworkCompressorStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameworkCompressorStream	58	None	replace
383	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  untilEOF))  {  [CE]  cannot  find  symbol  untilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  untilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  untilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  untilEOF	48	None	replace
384	[BUG]  [BUGGY]  in  =  new  FramedCompressorInputStream(in);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedCompressorInputStream(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedCompressorInputStream(in);	  in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	21	None	replace
385	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  in);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  in);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
386	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  UntilEOF);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  UntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  UntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
387	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(DEFLATE);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(DEFLATE);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
388	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(decompressConcatenated);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(decompressConcatenated);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
389	[BUG]  [BUGGY]  InputStream  in  =  getCompressorInputStream();  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getCompressorInputStream();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getCompressorInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
390	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(in);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  getInputStream(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  getInputStream(in);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
391	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	22	None	add
392	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  framedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	22	None	add
393	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(enum,  signature))  {  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(enum,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(enum,  signature))  {	  if    (FramedCompressorInputStream.matches(signature,    enum))    {    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	108	None	replace
394	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.length)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  cannot  find  symbol  length  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.length)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in.length)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
395	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.length))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
396	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
397	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
398	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  signature,  DEFLATE))  {  [CE]  cannot  find  symbol  decompress  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompress,  signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	7	None	replace
399	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
400	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
401	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	27	None	replace
402	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
403	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  deFLATE  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	99	None	replace
404	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  deFLATE  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	99	None	replace
405	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
406	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
407	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
408	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
409	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
410	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in,  signature))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  in,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	69	None	replace
411	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  in,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  in,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  in,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(DEFLATE,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
412	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedCompressorInputStream.matches(signature,  signatureLength)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
413	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DELETE))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	37	None	replace
414	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DELETE))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	37	None	replace
415	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	8	None	replace
416	[BUG]  [BUGGY]  in  =  new  FramedCompressorInputStream(in,  decompressConcatenated);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedCompressorInputStream(in,  decompressConcatenated);	  in    =    new    FramedSnappyCompressorInputStream(in);    	non-compiled	[CE]  	16	None	replace
417	[BUG]  [BUGGY]  in  =  new  FramedCompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedCompressorInputStream(in,  decompressUntilEOF);	  in    =    new    FramedSnappyCompressorInputStream(in);    	non-compiled	[CE]  	16	None	replace
418	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if    (FramedCompressorInputStream.matches(signature,    compressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	34	None	replace
419	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  SnappyCompressorInputStream.DEFLATE))  {  [CE]  cannot  find  symbol  DEFLATE  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  SnappyCompressorInputStream.DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  SnappyCompressorInputStream.DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    compressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  DEFLATE	34	None	replace
420	[BUG]  [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(decompressConcatenated);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedCompressorInputStream(decompressConcatenated);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signature);    	non-compiled	[CE]  	19	None	replace
421	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(pack200CompressorInputStream);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(pack200CompressorInputStream);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(pack200CompressorInputStream);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signature);    	non-compiled	[CE]  	19	None	replace
422	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signature);    	non-compiled	[CE]  	19	None	replace
423	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(decompressConcatenated,  signature))  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(decompressConcatenated,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(decompressConcatenated,  signature))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	13	None	replace
424	[BUG]  [BUGGY]  if  (FramedCompressor.matches(decompressConcatenated,  signature))  {  [CE]  cannot  find  symbol  FramedCompressor  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressor.matches(decompressConcatenated,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressor.matches(decompressConcatenated,  signature))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressor	13	None	replace
425	[BUG]  [BUGGY]  if  (FrameSnappyCompressor.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FrameSnappyCompressor  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameSnappyCompressor.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameSnappyCompressor.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameSnappyCompressor	13	None	replace
426	[BUG]  [BUGGY]  if  (FramesCompressor.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramesCompressor  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesCompressor.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesCompressor.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesCompressor	13	None	replace
427	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signatureLength,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signatureLength,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signatureLength,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	103	None	replace
428	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  FramedSnappyCompressorInputStream.matches(signature,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	103	None	replace
429	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Integer.toString(in)))  {  [CE]  no  suitable  method  found  for  toString(InputStream)  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Integer.toString(in)))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  Integer.toString(in)))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    in))    {    	non-compiled	[CE]  no  suitable  method  found  for  toString(InputStream)	103	None	replace
430	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	64	None	replace
431	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  pendingEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  pendingEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	64	None	replace
432	[BUG]  [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  FrameSnappyCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FrameSnappyCompressorInputStream	33	None	replace
433	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signatureLength,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signatureLength,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signatureLength,  pendingEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	31	None	replace
434	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  finallyEOF))  {  [CE]  cannot  find  symbol  finallyEOF  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  finallyEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  finallyEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  finallyEOF	31	None	replace
435	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    in)    {    	non-compiled	[CE]  	96	None	replace
436	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    in)    {    	non-compiled	[CE]  	96	None	replace
437	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  1))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	42	None	replace
438	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  decompress))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  decompress))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  decompress))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompress))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	38	None	replace
439	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompress))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	38	None	replace
440	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
441	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in.length)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [CE]  cannot  find  symbol  length  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in.length)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in.length)||  FramedSnappyCompressorInputStream.matches(signature,  in.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
442	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.readLine()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(in,  in.readLine()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
443	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  compressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  compressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  compressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	25	None	replace
444	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
445	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  decompressConcatenated);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
446	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
447	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  1))  {  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	41	2	replace
448	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	53	None	replace
449	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	53	None	replace
450	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
451	[BUG]  [BUGGY]  if  (JSCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  JSCompressorInputStream  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (JSCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (JSCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  JSCompressorInputStream	56	None	replace
452	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature)||  in.isEnabled())  {  [CE]  cannot  find  symbol  deFLATE  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature)||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature)||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	40	None	replace
453	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength)||  in.isEnabled())  {  [CE]  cannot  find  symbol  deFLATE  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength)||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signatureLength)||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	40	None	replace
454	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	73	None	replace
455	[BUG]  [BUGGY]  InputStream  in  =  framedSnappyCompressorInputStream.readIn();  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  framedSnappyCompressorInputStream.readIn();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  framedSnappyCompressorInputStream.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
456	[BUG]  [BUGGY]  InputStream  in  =  framedSnappyInputStream.readIn();  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  framedSnappyInputStream.readIn();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  framedSnappyInputStream.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
457	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressAfterEOF))  {  [CE]  cannot  find  symbol  decompressAfterEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressAfterEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressAfterEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    compressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompressAfterEOF	81	None	replace
458	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  FIELD_COMPRESSION))  {  [CE]  cannot  find  symbol  FIELD_COMPRESSION  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  FIELD_COMPRESSION))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  FIELD_COMPRESSION))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    FIELD_COMPRESSION))    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_COMPRESSION	10	None	replace
459	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  Integer.MAX_VALUE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  Integer.MAX_VALUE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  Integer.MAX_VALUE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
460	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  Integer.MIN_VALUE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  Integer.MIN_VALUE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  Integer.MIN_VALUE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	102	None	replace
461	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	87	None	replace
462	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	87	None	replace
463	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE)&&  in.isInterface())  {  [CE]  cannot  find  symbol  deFLATE  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE)&&  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE)&&  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	39	None	replace
464	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE)||  in.isInterface())  {  [CE]  cannot  find  symbol  deFLATE  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE)||  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  DEFLATE)||  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	39	None	replace
465	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
466	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	105	None	replace
467	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  uncompressConcatenated))  {  [CE]  cannot  find  symbol  uncompressConcatenated  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  uncompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  uncompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  uncompressConcatenated	105	None	replace
468	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  signature!=  null)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  signature!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  signature!=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
469	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in!=  null)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in!=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
470	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	72	None	replace
471	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  pendingEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	72	None	replace
472	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	14	None	replace
473	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(decompressConcatenated,  signature))  {  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(decompressConcatenated,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(decompressConcatenated,  signature))  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
474	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	36	None	replace
475	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(DEFLATE,  signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	36	None	replace
476	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  UntilEOF);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  UntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  UntilEOF);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
477	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  in);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  in);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
478	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
479	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
480	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in)&&  FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
481	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(pack200CompressorInputStream);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(pack200CompressorInputStream);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(pack200CompressorInputStream);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
482	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  SNAPPY_RAW);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  SNAPPY_RAW);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  SNAPPY_RAW);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
483	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  DEFLATE);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  DEFLATE);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
484	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	85	None	replace
485	[BUG]  [BUGGY]  byte[]  signature  =  decompressUntilEOF.getBytes(in);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  decompressUntilEOF.getBytes(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  decompressUntilEOF.getBytes(in);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
486	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(compressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(compressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(compressConcatenated);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
487	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  0);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  0);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
488	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  Z))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  Z))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  Z))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
489	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
490	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
491	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
492	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength),  decompressConcatenated)  {  [CE]  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signatureLength),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  	46	None	replace
493	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(in,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
494	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
495	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
496	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)||  FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)||  FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)||  FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
497	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  null))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  null))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  null))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	47	None	replace
498	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	47	None	replace
499	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null),  decompressConcatenated)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  	47	None	replace
500	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  XZUtils.isXZCompressionAvailable())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  XZUtils.isXZCompressionAvailable())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  XZUtils.isXZCompressionAvailable())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	47	None	replace
501	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	86	None	replace
502	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	86	None	replace
503	[BUG]  [BUGGY]  if  (in.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (in.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (in.matches(signature,  decompressConcatenated)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
504	[BUG]  [BUGGY]  if  (JSCompressorFactory.matches(signature,  SNAPPY_RAW))  {  [CE]  cannot  find  symbol  JSCompressorFactory  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (JSCompressorFactory.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (JSCompressorFactory.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol  JSCompressorFactory	62	None	replace
505	[BUG]  [BUGGY]  if  (JSFormat.matches(signature,  SNAPPY_RAW))  {  [CE]  cannot  find  symbol  JSFormat  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (JSFormat.matches(signature,  SNAPPY_RAW))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (JSFormat.matches(signature,  SNAPPY_RAW))  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol  JSFormat	62	None	replace
506	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.readLine()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.readLine()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(in,  in.readLine()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
507	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.readLine())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.readLine())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.readLine())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
508	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
509	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
510	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  cannot  find  symbol  decompress  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	98	None	replace
511	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
512	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.canAssignTo(decompressConcatenate))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.canAssignTo(decompressConcatenate))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.canAssignTo(decompressConcatenate))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	98	None	replace
513	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF,  in,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    in,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	30	None	replace
514	[BUG]  [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in,  DEFLATE);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(in,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedCompressorInputStream(in,  DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in);    	non-compiled	[CE]  	15	None	replace
515	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  framedCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  framedCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  framedCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  framedCompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  framedCompressorInputStream	26	None	replace
516	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  decompressUntilEOF.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  decompressUntilEOF.matches(signature,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  decompressUntilEOF.matches(signature,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)&&    framedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
517	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  signatureLength)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  signatureLength)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  signatureLength)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
518	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  DEFLATE)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  DEFLATE)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  DEFLATE)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
519	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
520	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE)&&  signatureLength)  {  [CE]  cannot  find  symbol  decompress  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE)&&  signatureLength)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE)&&  signatureLength)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  cannot  find  symbol  decompress	71	None	replace
521	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	29	None	replace
522	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	29	None	replace
523	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0),  decompressConcatenated)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  	50	None	replace
524	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
525	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  0.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  0.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
526	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
527	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DECOMPRESSION,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DECOMPRESSION,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  DECOMPRESSION,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
528	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  UntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  UntilEOF))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	63	None	replace
529	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	74	None	replace
530	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  INVALID))  {  [CE]  cannot  find  symbol  INVALID  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  INVALID))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  INVALID))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  INVALID	74	None	replace
531	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	74	None	replace
532	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  signature)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  signature)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  signature)  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  	68	None	replace
533	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.decompressUntilEOF)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
534	[BUG]  [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FrameSnappyCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FrameSnappyCompressorInputStream	32	None	replace
535	[BUG]  [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramesSnappyCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramesSnappyCompressorInputStream	32	None	replace
536	[BUG]  [BUGGY]  if  (FramesCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramesCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramesCompressorInputStream	32	None	replace
537	[BUG]  [BUGGY]  if  (JSCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  JSCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (JSCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (JSCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  JSCompressorInputStream	32	None	replace
538	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0,)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0,)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  0,)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
539	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0,  1))  {  [CE]  'catch'  without  'try'  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0,  1))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0,  1))  {	  	non-compiled	[CE]  'catch'  without  'try'	44	None	add
540	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(Pack200CompressorInputStream.class);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(Pack200CompressorInputStream.class);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(Pack200CompressorInputStream.class);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signatureLength);    	non-compiled	[CE]  	18	None	replace
541	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(Pack200CompressorInputStream.DEFLATE);  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(Pack200CompressorInputStream.DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(Pack200CompressorInputStream.DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signatureLength);    	non-compiled	[CE]  	18	None	replace
542	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in),  decompressUntilEOF)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  	61	None	replace
543	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Integer.toHexString(in)))  {  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  Integer.toHexString(in)))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  Integer.toHexString(in)))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	61	None	replace
544	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	61	None	replace
545	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
546	[BUG]  [BUGGY]  if  (FrameworkCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FrameworkCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameworkCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameworkCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameworkCompressorInputStream	59	None	replace
547	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  deFLATE  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	35	None	replace
548	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE,  signature))  {  [CE]  cannot  find  symbol  decompress  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	35	None	replace
549	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE,  signatureLength))  {  [CE]  cannot  find  symbol  decompress  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompress,  DEFLATE,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	35	None	replace
550	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	107	None	replace
551	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signature,  -2))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signature,  -2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    	compilable	  [FE]  CompressorException  	107	2	replace
552	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signature,  -2))  {  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signature,  -2))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  FramedSnappyCompressorInputStream.matches(signature,  -2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    	compilable	  [FE]  CompressorException  	107	2	replace
553	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	104	None	replace
554	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	104	None	replace
555	[BUG]  [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(decompressUntilEOF);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedCompressorInputStream(decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedCompressorInputStream(decompressUntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
556	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(false);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(false);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(false);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
557	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	65	None	replace
558	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	65	None	replace
559	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  descompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  descompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(in,  descompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    descompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	65	None	replace
560	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	75	None	replace
561	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  LZMA))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
562	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
563	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  DEFLATE),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(in,    DEFLATE))    {    	non-compiled	[CE]  	60	None	replace
564	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  SNAPPY_RAW)&&  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  SNAPPY_RAW)&&  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  SNAPPY_RAW)&&  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    SNAPPY_RAW))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	62	None	replace
565	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.available())&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  in.available())&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	compilable	  [FE]  CompressorException  	82	2	replace
566	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.available())&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  in.available())&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  in.available())&&  FramedSnappyCompressorInputStream.matches(signature,  in.available()))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.available()))    {    	compilable	  [FE]  CompressorException  	82	2	replace
567	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	85	None	replace
568	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in!=  null)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in!=  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	85	None	replace
569	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)&&  in!=  null)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  DEFLATE)&&  in!=  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	85	None	replace
570	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  >=  null)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  >=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  >=  null)  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	85	None	replace
571	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
572	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  DEFLATE);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  DEFLATE);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
573	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  decompressUntilEOF);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  decompressUntilEOF);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
574	[BUG]  [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  BZIP2);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  BZIP2);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  XZUtils.getInputStream(decompressConcatenated,  BZIP2);	  InputStream    in    =    XZUtils.getInputStream(decompressConcatenated);    	non-compiled	[CE]  	80	None	replace
575	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  UntilEOF);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
576	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  0);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  0);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
577	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
578	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	79	None	replace
579	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()),  decompressUntilEOF)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.readLine()),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.readLine()))    {    	non-compiled	[CE]  	6	None	replace
580	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_FNRAMED))  {  [CE]  cannot  find  symbol  SNAPPY_FNRAMED  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_FNRAMED))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_FNRAMED))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    FIELD))    {    	non-compiled	[CE]  cannot  find  symbol  SNAPPY_FNRAMED	12	None	replace
581	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated),  in)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  	27	None	replace
582	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  XZ))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  XZ))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  XZ))  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
583	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	58	None	replace
584	[BUG]  [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [CE]  cannot  find  symbol  FramedSnappyCompressorStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {	  if    (FramedSnappyCompressorStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressorStream	58	None	replace
585	[BUG]  [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [CE]  cannot  find  symbol  FrameSnappyCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {	  if    (FrameSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameSnappyCompressorInputStream	57	None	replace
586	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  decompressConcatenated))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompress))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	38	None	replace
587	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
588	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressConcatenated)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressConcatenated)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  	4	None	replace
589	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)&&  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)&&  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)&&  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE)||    in.isInterface())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
590	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	86	None	replace
591	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy()  ||  in.isSnappy())  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy()  ||  in.isSnappy())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isSnappy()  ||  in.isSnappy())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	86	None	replace
592	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF())  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF())  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isSnappy())    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	86	None	replace
593	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signatureLength),  in)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signatureLength),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signatureLength),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(in,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  	28	None	replace
594	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
595	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  decompressUntilEOF)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    decompressUntilEOF))    {    	non-compiled	[CE]  	73	None	replace
596	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  in,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  decompress  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompress,  in,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompress,  in,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	73	None	replace
597	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
598	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressUntilEOF)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  decompressUntilEOF)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength),    decompressUntilEOF)    {    	non-compiled	[CE]  	83	None	replace
599	[BUG]  [BUGGY]  InputStream  in  =  in.readIO();  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  in.readIO();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  in.readIO();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
600	[BUG]  [BUGGY]  InputStream  in  =  out.readIn();  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  out.readIn();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  out.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  	95	None	replace
601	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	29	None	replace
602	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated)&&  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	29	None	replace
603	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    	non-compiled	[CE]  	29	None	replace
604	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  	63	None	replace
605	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  DEFLATE);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  DEFLATE);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
606	[BUG]  [BUGGY]  byte[]  signature  =  decompressConcatenated.getBytes(in);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  decompressConcatenated.getBytes(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  decompressConcatenated.getBytes(in);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
607	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressConcatenated);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressConcatenated);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressConcatenated);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
608	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated).toByteArray();  [CE]  [FE]                              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated).toByteArray();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated).toByteArray();	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	92	None	replace
609	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	23	None	replace
610	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenation))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenation))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenation))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	55	None	replace
611	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  this)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  this)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  this)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  	90	None	replace
612	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated,  in.available()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated,  in.available()))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated,  in.available()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
613	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  new  FramedSnappyCompressorInputStream(in);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  new  FramedSnappyCompressorInputStream(in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  new  FramedSnappyCompressorInputStream(in);	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  	90	None	replace
614	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  2)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  2)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.canAssignTo(decompressConcatenated),  2)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  	90	None	replace
615	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  UntilEOF);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
616	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  DEFLATE);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
617	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  0);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated,  0);	  in    =    new    FramedSnappyCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	91	None	replace
618	[BUG]  [BUGGY]  InputStream  in  =  createInputStream();  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  createInputStream();  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  createInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  	94	None	replace
619	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(Signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  if  (FramedSnappyCompressorInputStream.matches(Signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    if  (FramedSnappyCompressorInputStream.matches(Signature,  0)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	44	None	add
620	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signatureLength,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signatureLength,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  FramedSnappyCompressorInputStream.matches(signatureLength,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	46	None	replace
621	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0,  signatureLength)||  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0)||    FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	45	None	replace
622	[BUG]  [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [CE]  cannot  find  symbol  FramesSnappyCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in!=  null)  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesSnappyCompressorInputStream	59	None	replace
623	[BUG]  [BUGGY]  if  (FrameworkCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FrameworkCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FrameworkCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FrameworkCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameworkCompressorInputStream	59	None	replace
624	[BUG]  [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [CE]  cannot  find  symbol  FramesSnappyCompressorInputStream  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramesSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramesSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  ==  null)  {	  if    (FramesSnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramesSnappyCompressorInputStream	59	None	replace
625	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  	36	None	replace
626	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	36	None	replace
627	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  in),  decompressConcatenated)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signatureLength,  in),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signatureLength,  in),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signatureLength,    in))    {    	non-compiled	[CE]  	103	None	replace
628	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  IFIELD_COMPRESSION))  {  [CE]  cannot  find  symbol  IFIELD_COMPRESSION  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  IFIELD_COMPRESSION))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  IFIELD_COMPRESSION))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    FIELD_COMPRESSION))    {    	non-compiled	[CE]  cannot  find  symbol  IFIELD_COMPRESSION	10	None	replace
629	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	87	None	replace
630	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.MAX_VALUE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.MAX_VALUE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.MAX_VALUE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	87	None	replace
631	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  DEFLATE);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
632	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  0);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  0);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  0);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	17	None	replace
633	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	13	None	replace
634	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	13	None	replace
635	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.canInit())  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.canInit())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressor.matches(signature,  decompressConcatenated)&&  in.canInit())  {	  if    (FramedSnappyCompressor.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	13	None	replace
636	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated),  decompressUntilEOF)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  	98	None	replace
637	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated),  in)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.canAssignTo(decompressConcatenated),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.canAssignTo(decompressConcatenated))    {    	non-compiled	[CE]  	98	None	replace
638	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(deFLATE,  in);  [CE]  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(deFLATE,  in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(deFLATE,  in);	  in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	93	None	replace
639	[BUG]  [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (SnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressUntilEOF)  {	  if    (SnappyCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
640	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(enum,  signatureLength))  {  [CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(enum,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(enum,  signatureLength))  {	  if    (FramedCompressorInputStream.matches(signature,    enum))    {    	non-compiled	[CE]  as  of  release  5,  'enum'  is  a  keyword,  and  may  not  be  used  as  an  identifier	108	None	replace
641	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  INVALID))  {  [CE]  cannot  find  symbol  INVALID  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  INVALID))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  INVALID))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  cannot  find  symbol  INVALID	61	None	replace
642	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  in.canAssignTo(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  in.canAssignTo(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in)||  in.canAssignTo(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	61	None	replace
643	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  FramedSnappyCompressorInputStream.matches(signature,  signatureLength,  decompressConcatenated))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
644	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressconcatenated))  {  [CE]  cannot  find  symbol  decompressconcatenated  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressconcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressconcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    compressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompressconcatenated	49	None	replace
645	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressConcatenated)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  	54	None	replace
646	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
647	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressUntilEOF)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressUntilEOF)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  in.length),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    in.length))    {    	non-compiled	[CE]  	54	None	replace
648	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0),  in)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  	50	None	replace
649	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  in.isInterface())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  in.isInterface())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0)||  in.isInterface())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
650	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(deFLATE,  in);  [CE]  [FE]                                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(deFLATE,  in);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(deFLATE,  in);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
651	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  signatureLength);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  signatureLength);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(DEFLATE,  signatureLength);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	20	None	replace
652	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE),  in)  {  [CE]  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  	7	None	replace
653	[BUG]  [BUGGY]  if(!DecompressConcatenated  &&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  DecompressConcatenated  [FE]        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(!DecompressConcatenated  &&  FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(!DecompressConcatenated  &&  FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  DecompressConcatenated	41	None	replace
654	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null),  in)  {  [CE]  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  	47	None	replace
655	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  null)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	47	None	replace
656	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressconcatenated))  {  [CE]  cannot  find  symbol  decompressconcatenated  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressconcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressconcatenated))  {	  if    (FramedCompressorInputStream.matches(signature,    compressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompressconcatenated	34	None	replace
657	[BUG]  [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength  -  1);  [CE]  [FE]                            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength  -  1);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	InputStream  in  =  new  FramedSnappyCompressorInputStream(signatureLength  -  1);	  InputStream    in    =    new    FramedSnappyCompressorInputStream(signatureLength);    	non-compiled	[CE]  	18	None	replace
658	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  DEFLATE)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  DEFLATE)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in),  DEFLATE)  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  	74	None	replace
659	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	74	None	replace
660	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.isEnabled(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.isEnabled(decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.isEnabled(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	40	None	replace
661	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	9	None	replace
662	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z),  in)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  	9	None	replace
663	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  XZ))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  XZ))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  Z,  XZ))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Z))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
664	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	8	None	replace
665	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	52	None	replace
666	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  decompressConcatenated)  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	97	None	replace
667	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  >=  null)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  >=  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  >=  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
668	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  [Delete]  null)  {  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  [Delete]  null)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in  [Delete]  null)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in!=    null)    {    	non-compiled	[CE]  ')'  expected	77	None	replace
669	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [CE]  [FE]                                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  decompressUntilEOF);	  in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	21	None	replace
670	[BUG]  [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  DEFLATE);  [CE]  [FE]                                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	in  =  new  FramedSnappyCompressorInputStream(decompressConcatenated,  DEFLATE);	  in    =    new    FramedSnappyCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	21	None	replace
671	[BUG]  [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  If  (FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	If  (FramedSnappyCompressorInputStream.matches(signature,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    If    (FramedSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	42	None	replace
672	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
673	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  decompressConcatenated))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	35	None	replace
674	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  	35	None	replace
675	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signature))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	35	None	replace
676	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  	78	None	replace
677	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressConcatenated)  {  [CE]  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  FramedSnappyCompressorInputStream.matches(signature,  signatureLength),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)||    FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  	51	None	replace
678	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  signatureLength))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  framedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  signatureLength))  {	  if(FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
679	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  UntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	75	None	replace
680	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  -decompressUntilEOF))  {  [CE]  bad  operand  type  Boolean  for  unary  operator  '-'  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  -decompressUntilEOF))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  -decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  bad  operand  type  Boolean  for  unary  operator  '-'	11	None	replace
681	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled()  ||  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled()  ||  in.isEnabled())  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled()  ||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
682	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    	compilable	  [FE]  CompressorException  	107	2	replace
683	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  decompressConcatenated)  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  decompressConcatenated)  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  -1)||  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    -1))    {    	compilable	  [FE]  CompressorException  	107	2	replace
684	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }      [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  if  (XZUtils.matches(signature,  signatureLength)  &&  XZUtils.isXZCompressionAvailable())  {  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	232	232	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
