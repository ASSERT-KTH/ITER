projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}If(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,signature)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=in.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readOut();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DECOMPRESSED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated,in);
