projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}If(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,signature)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=in.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readOut();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DECOMPRESSED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(deFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,IOUtils.readFully(signature));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,Boolean.valueOf);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(decompressUntilEOF,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,PACK200,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,decompressConcatenated,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,PACK200,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,0)){returnnewBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(deFLATE,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(Signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt(signatureLength,BZip2CompressorInputStream.DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=JOUtils.readInt(signatureLength,IOUtils.readInt(signature));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt(signatureLength,BZip2CompressorInputStream.class);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){newBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);returnnewBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2Compressor.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=in,decompressConcatenated.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=DECOMPRESSED_CONCATENATOR.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=this.in.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=DECOMPRESSION.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=out.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=in.denominationConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,decompressUntilEOF,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewPack2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewPack2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.matches(signature,signatureLength)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.matches(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221nisip.matches(signature,signatureLength)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}If(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(Signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signatureLength,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221If(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.get(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,decompressUntilEOF,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221nisip=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221nisip=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInput(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signatureLength,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,1);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,DEFLATE)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=this.in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in.readInt());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readUTF();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,LZMA)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signatureLength);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signatureLength);if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in.mark(signatureLength),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(deFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signatureLength,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompress,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.matches(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in.mark(signatureLength),0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);in=newBZip2CompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in.mark(signatureLength,decompressConcatenated));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength,decompressConcatenated));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in.mark(signature,decompressConcatenated));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated.mark(signature,signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.matches(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.matches(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2InputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressCase);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}If(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221If(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(deFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(deFLATE,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=this.in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readFully(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.read(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt(signature,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.createBZip2CompressorInputStream(signature,decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}BZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signatureLength,BZip2CompressorInputStream);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readFully(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=this.in.read(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInt(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,PACK200,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP2,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength>12){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength>12){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==2){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==2){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2Compressor.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated,BZip2CompressorInputStream);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.DEFLATE));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.DEFAULT_COMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength+12));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.DEFAULT_SIZE));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.create(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.create(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION+signatureLength;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION,signatureLength;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:InputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.BZIP_DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressConcatenated=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=this.in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readIn(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature,decompressUntilEOF);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signatureLength,in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,DEFLATE);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}BZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,0);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP2,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,DEFLATE,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.matches(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){newBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){newBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,0
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readIn(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in.readIn());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<T>){returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated{returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(signature,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,DEFLATE)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,0)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,pendingEOF)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,32);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==BZip2CompressorInputStream.length){returnnewBZip2CompressorInputStream(decompressConcatenated,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==BZip2CompressorInputStream.length){returnnewBZip2CompressorInputStream(decompressConcatenated,signature);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==BZip2CompressorInputStream.length){returnnewBZip2CompressorInputStream(decompressConcatenated,signature);}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);BZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,DECOMPRESSED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,DECOMPRESSING);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,DECOMPRESSATION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2Compressor.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(deFLATE,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,10);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=this.in.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=JOUtils.readInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInput(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,LZMA,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221If(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(decompressConcatenated,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221ensureConcatenated(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressUntilEOF){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,DEFLATE){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,0){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(compressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}If(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(descompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSING);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenate);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated,signatureLength)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,LZMA)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZi
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0.0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,10)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in.intValue:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION+signatureLength;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:InputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION,signatureLength;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.BZIP_DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.DEFAULT);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.BZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.set(signatureLength,BZip2CompressorInputStream.BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStreamin=newBZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221nisip.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)==0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)!=0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)==0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)!=0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}else{thrownewIllegalArgumentException("");}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)==0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)!=0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength))
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(sig
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZ
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signatureLength);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in.mark(signatureLength),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(DEFLATE,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength+1));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength-1));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in.mark(signatureLength+2));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L),signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,LZMA)){if(BZip2CompressorInputStream.matches(signature,LZMA)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip1CompressorInputStream.matches(signature,signatureLength)){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decom
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,Integer.MAX_VALUE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(deFLATE,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signatureLength,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,DEFLATE){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221ensureConcatenated(in,decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,0){returnnewBZip2CompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,DEFLATE){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(signatureLength,2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signature.length,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(signatureLength,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.newInstance(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZIP2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZIP2.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.decompressConcatenated(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.decompress(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.seek(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength)+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressConcatenated=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSED
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESS
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalBZip2CompressorInputStreamin=newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalGZIP2CompressorInputStreamin=newGZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221finalGZIP2CompressorInputStreamin=newGZip2CompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(deFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(deflate,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(DEFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompress,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(deFLATE,in,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,LZMA,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,pendingEOF){returnnewMutableCompressorInputStream(in,pendingEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?DEFLATE:BZip2CompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=BZip2CompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=DEFLATE?in:BZip2CompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressUntilEOF));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZIP2CompressorInputStream.matches(signature,signatureLength)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(deFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIP2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in=newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE);byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,DEFLATE);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressUntilEOF,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(bZIP2,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signature!=null){returnnewBZip2CompressorInputStream(decompressConcatenated,signature);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,40);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221CompressorInputStreamin=newCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStreamin=newMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInput
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(decompressConcatenated,signature)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BOZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221SafeInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readInput(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=GZip2CompressorInputStream.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInput(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2Compressor.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeCompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221RecompressUntilEOF=BZip2CompressorInputStream.matches(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeCompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readFully(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressConcatenated,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0.0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcat
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,de
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signature,decompressConcatenated)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(decompressConcatenated,signature)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,GZIP,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,UntilEOF){returnnewBZip2CompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2Compressor
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInput
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF,in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF){returnnewBZip2CompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSION
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESS
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DeservedCompressorInputStreamin=newDeservedCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221CompressorInputStreamin=createCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221CompressorInputStreamin=newCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,GZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);in=newBZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DFLATE.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DECOMPRESSED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,decompressConcatenated,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,LZMA,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip0CompressorInputStream.matches(signature,signatureLength)){returnnewBZip0CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?DEFLATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.BZIP;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=GZip2CompressorInputStream.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readInt(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?DEFLATE:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?DEFLATE:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=DEFLATE?in:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?IN:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(deFLATE,signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(DEFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,GZIP,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readIn(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=this.in.readOut();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readOut(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readOut(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(DEFLATE,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompress,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(decompressConcatenated,signature)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_FRAMED,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(signature,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip1CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip2CompressedorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.decompressConcatenated=Boolean.valueOf(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.decompress(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.decompressConcatenated(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(BZip2CompressorInputStream.DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(BZip2CompressorInputStream.class);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(UntilEOF){BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221UntilEOF.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressUntilEOF,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE,signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(signature,decompressUntilEOF,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.read(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.read(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.read(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=DEFLATE.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=decompressUntilEOF.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=Integer.toString(in.decompressConcatenated());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.read(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readFully(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?DEFLATE:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?IN:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DEFLATE);newBZip2CompressorInputStream(in,DECOMPRESSIONEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,decompressUntilEOF);newBZip2CompressorInputStream(in,DECOMPRESSIONEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in!=null){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in==null){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(signature,decompressConcatenated,in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,signature,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(signature,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,SNAPPY_RAW,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(decompressConcatenated,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength+1),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength),in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength-1),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(out,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}if(decompressConcatenated){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,DEFLATE);if(BZip2CompressorInputStream.matches(signature,0)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnew
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signatureLength,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,newBZip2CompressorInputStream(in)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(IN,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(IN,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=JOUtils.readInt(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]in=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DeservedCompressorInputStreamin=newDeservedCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DeservedCompressorInputStreamin=newDeservedCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?DEFLATE:newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(IN,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readIn(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readIn(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=GZip2CompressorInputStream.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,0,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221result=newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStreamin=newBZip2CompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIPCompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readIn(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readFully();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signatureLength,DEFLATE)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.matches(signature,signatureLength)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewPack2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221&&BZip2CompressorInputStream.matches(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!in.isEmpty()){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.isEnabled()){if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2Compress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(delimpressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deflate,signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip2COMpressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}if(BZip2ConpressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,descompressConcatenated)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,GZIP2,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated>0){returnnewBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==0){newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==0){newBZip2CompressorInputStream(in);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in);}else{returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,newBZip2CompressorInputStream(in))){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,null)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenation);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip1CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DecompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)||BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_RAW,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221ReturnnewBZip2CompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF);InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=decompressUntilEOF.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF,in);InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes();InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221}elseif(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIP2CompressorInputStream(in,decompressUntilEOF);in.mark(signatureLength){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,DEFLATE,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,GZIP,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.setLength(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength+12);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signature.length));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signatureLength,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated),decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(Integer.matches(signature,signatureLength)){returnnewIntegerCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(in.mark(signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signature,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)&&in.mark(signatureLength)){returnnewBZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)>0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)==0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(signatureLength==2){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=IOUtils.readFully(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,PACK200,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:newBZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.write(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(decompressConcatenated,signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,DEFLATE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(deFLATE,signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221SafeInputStreamin=safeInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressConcatenated,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,LZMA,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressUntilEOF=decompressUntilEOF?in:newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressUntilEOF=decompressUntilEOF?in:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221safeInputStream(in,decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in!=null){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in!=null){returnnewBZip2CompressorInputStream(in,DEFLATE);InputStreamin=newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in=newBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);byte[]signature=in.read(BZip2CompressorInputStream.DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);InputStreamin=newBZip2CompressorInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,pending)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readIO();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readInt()-1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.readIOF();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,pendingEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in!=null){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in!=null){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in!=null){returnnewBZip2CompressorInputStream(in,DEFLATE);in=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signatureLength,decompressConcatenated,decompressUntilEOF,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressConcatenated,in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}decompressUntilEOF;if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2ConpressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2InputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=newBZip2CompressorInputStream(signature.length,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature),decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2CompressorInputStream.matches(signature,null)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in);if(BZip2InputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(GZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,descompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newGZIP2CompressorInputStream(in,decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in.mark(signature,decompressConcatenated),in.limit());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,decompressUntilEOF,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated,signatureLength,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in.mark(signatureLength),DECOMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signatureLength,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)>0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(in.mark(signatureLength)>0){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signatureLength,DEFLATE)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGZip2CompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(deFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);byte[]signature=in.readBytes(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewGZip2CompressorInputStream(in,decompressCONcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in=BZip2CompressorInputStream.create(decompressConcatenated,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE.equals(signature)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE.equals(signature)){returnnewBZip2CompressorInputStream(in,DEFLATE);}else{returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(DEFLATE.equals(signature)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=BZip2CompressorInputStream.readInput(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=JOUtils.readInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,decompressUntilEOF,decompressBlock);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.create(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,DEFLATE);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,DEFLATE);}else{in.write(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,DEFLATE);}else{in.release();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressConcatenated);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressConcatenated);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,pendingEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221MutableCompressorInputStream.matches(signature,DEFLATE)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,signatureLength,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,PACK200,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,DEFLATE,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.write(BZip2_CompressorInputStream.toByteArray());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF);InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF);returnnewBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF);returnnewBZip2CompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF);returnnewBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221byte[]signature=in.readBytes(decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221newBZip2CompressorInputStream(in,decompressConcatenated);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){newBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{InputStreamin=newBZip2CompressorInputStream(in.mark(signatureLength),decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=decompressUntilEOF?in.decompressConcatenated():in.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated<N>decompressConcatenated=this.decompressConcatenated.decompressConcatenated();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressConcatenated||in.mark(signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenated=decompressConcatenated?in:newBZip2CompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221in.mark(signatureLength){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,0L),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,LZMA)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(GZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(in,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,DEFLATE)){newBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(!decompressUntilEOF){if(decompressConcatenated){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(decompressUntilEOF){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{returnnewBZip2CompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221returnnewBZip2CompressorInputStream(decompressConcatenated,in,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signatureLength,BZip2CompressorInputStream.DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=in.read(signatureLength,BZip2CompressorInputStream.class);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(in,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221||in.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DecompressConcatenator<Object>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221InputStreamin=newBZip2CompressorInputStream(decompressUntilEOF);if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?in:BZip2CompressorInputStream.DECOMPRESSION,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?signatureLength:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java221DesecompressConcatenator<?>in=decompressConcatenated?DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
