bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	94	None	replace
2	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  [CE]  cannot  find  symbol  SignatureLength  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip2CompressorInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	17	None	replace
3	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  BZIP2);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  BZIP2);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
4	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  GZIP2);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  GZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  GZIP2);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
5	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  0);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  0);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
6	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(signature,  DEFLATE);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(signature,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(signature,  DEFLATE);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
7	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
8	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  GZIP);  [CE]  [FE]                                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  GZIP);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  GZIP);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
9	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  0);  [CE]  [FE]                                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  0);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
10	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(signatureLength);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(signatureLength);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
11	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  decompressConcatenated);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(in,  decompressConcatenated);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
12	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  DEFLATE);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(in,  DEFLATE);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
13	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  0);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(in,  0);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
14	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(decompressConcatenated);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(decompressConcatenated);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
15	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
16	[BUG]  [BUGGY]  if  (FramedGzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedGzipCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedGzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedGzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedGzipCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedGzipCompressorInputStream	46	None	replace
17	[BUG]  [BUGGY]  if  (FramedGzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  FramedGzipCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedGzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedGzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FramedGzipCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedGzipCompressorInputStream	46	None	replace
18	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressUntilEOF)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	92	None	replace
19	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signature.length))  {  [CE]  'void'  type  not  allowed  here  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signature.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  'void'  type  not  allowed  here	92	None	replace
20	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
21	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  1))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
22	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
23	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signature.length))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signature.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
24	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
25	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	68	None	replace
26	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	68	None	replace
27	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	68	None	replace
28	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	68	None	replace
29	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  if  (BZip2CompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  if  (BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (BZip2CompressorInputStream.matches(signature,    0))    {    if  (BZip2CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
30	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  If  (BZip2CompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  If  (BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (BZip2CompressorInputStream.matches(signature,    0))    {    If  (BZip2CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
31	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  if  (BZip2CompressorInputStream.matches(Signature,  0))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  if  (BZip2CompressorInputStream.matches(Signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (BZip2CompressorInputStream.matches(signature,    0))    {    if  (BZip2CompressorInputStream.matches(Signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
32	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
33	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
34	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
35	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP))  {  [CE]  cannot  find  symbol  BZIP  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  BZIP	51	None	replace
36	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE))  {  [CE]  cannot  find  symbol  DFLATE  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  DFLATE	51	None	replace
37	[BUG]  [BUGGY]  if  (GZIPCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZIPCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZIPCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	51	None	replace
38	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressUntilEOF);  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressUntilEOF);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
39	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes();  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes();  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes();	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
40	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength,  decompressConcatenated);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
41	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressUntilEOF);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(decompressUntilEOF);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
42	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
43	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
44	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
45	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
46	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
47	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
48	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
49	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  GZIP2))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	39	None	replace
50	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  PACK200))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  PACK200))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  PACK200))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
51	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  BZIP2))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  BZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  BZIP2))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
52	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated,  in))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
53	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
54	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
55	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
56	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated,  decompressUntilEOF)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated,  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated,  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  	58	None	replace
57	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated  ||  decompressUntilEOF)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated  ||  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated  ||  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
58	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
59	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
60	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
61	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
62	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
63	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
64	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  12)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (GzipCompressorInputStream.matches(signature,  12)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
65	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  12)||  GzipCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  12)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  12)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	71	2	replace
66	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressUntilEOF)  {  [CE]  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	100	None	replace
67	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
68	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signature.length))  {  [CE]  'void'  type  not  allowed  here  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signature.length))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  'void'  type  not  allowed  here	100	None	replace
69	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  1))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  1))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
70	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
71	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
72	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
73	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(decompressConcatenated,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
74	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(decompressConcatenated,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(decompressConcatenated,  signature))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
75	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signatureLength,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signatureLength,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	84	None	replace
76	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signatureLength,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	84	None	replace
77	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signatureLength,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	84	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  DEFLATE);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
79	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  DEFLATE);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  BZIP2);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  BZIP2);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
81	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
82	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  0);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  0);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
83	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  DEFLATE);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
84	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [CE]  [FE]                                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
85	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	36	None	replace
86	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	36	None	replace
87	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	36	None	replace
88	[BUG]  [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	36	None	replace
89	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	36	None	replace
90	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
91	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
92	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	30	None	replace
93	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength);	  InputStream    in    =    new    GzipCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	98	None	replace
94	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);	  InputStream    in    =    new    GzipCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	98	None	replace
95	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressUntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	98	None	replace
96	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  decompressUntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	98	None	replace
97	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature);	  InputStream    in    =    new    GzipCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	98	None	replace
98	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  0);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  0);	  InputStream    in    =    new    GzipCompressorInputStream(decompressConcatenated);    	non-compiled	[CE]  	98	None	replace
99	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	81	None	replace
100	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	81	None	replace
101	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	81	None	replace
102	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  descompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	81	None	replace
103	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.',  signatureLength)  >=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.',  signatureLength)  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.',  signatureLength)  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
104	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.indexOf('.')  >=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.indexOf('.')  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.indexOf('.')  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
105	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.indexOf('.')  >=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.indexOf('.')  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.indexOf('.')  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
106	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.indexOf('.')  >=  0)  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.indexOf('.')  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.indexOf('.')  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
107	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.'),  signatureLength  >=  0)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.'),  signatureLength  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.'),  signatureLength  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  	101	None	replace
108	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.',  signatureLength)!=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.',  signatureLength)!=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.',  signatureLength)!=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
109	[BUG]  [BUGGY]  if  (FramedGzipCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedGzipCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedGzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedGzipCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedGzipCompressorInputStream	74	None	replace
110	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	74	2	replace
111	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	74	2	replace
112	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
113	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
114	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
115	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
116	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
117	[BUG]  [BUGGY]  byte[]  signature  =  in.read();  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read();  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read();	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
118	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signatureLength,  decompressConcatenated);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read(signatureLength,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read(signatureLength,  decompressConcatenated);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
119	[BUG]  [BUGGY]  byte[]  signature  =  in.readFully(signatureLength);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readFully(signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readFully(signatureLength);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
120	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signatureLength,  BZIP2);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read(signatureLength,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read(signatureLength,  BZIP2);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
121	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signatureLength,  decompressUntilEOF);  [CE]  [FE]                                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read(signatureLength,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read(signatureLength,  decompressUntilEOF);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
122	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signatureLength,  4);  [CE]  [FE]                                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read(signatureLength,  4);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read(signatureLength,  4);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
123	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
124	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  If  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  If  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    If  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  ';'  expected	6	None	add
125	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(Signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(Signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(Signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
126	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signatureLength,  decompressConcatenated);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(signatureLength,  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
127	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signature,  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signature,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(signature,  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
128	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
129	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  signatureLength);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
130	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  DEFLATE);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  DEFLATE);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
131	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
132	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
133	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.matches(signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
134	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
135	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
136	[BUG]  [BUGGY]  if  (in.matches(signature,  DEFLATE)||  in.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (in.matches(signature,  DEFLATE)||  in.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (in.matches(signature,  DEFLATE)||  in.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
137	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
138	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
139	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
140	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
141	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
142	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  	42	None	replace
143	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
144	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
145	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
146	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
147	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
148	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
149	[BUG]  [BUGGY]  if  (BZip2Compressor.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  BZip2Compressor  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2Compressor.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2Compressor.matches(signature,  signatureLength))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	31	None	replace
150	[BUG]  [BUGGY]  if  (GzipCompressor.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  GzipCompressor  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressor.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressor.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  GzipCompressor	31	None	replace
151	[BUG]  [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressor.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressor.matches(signature,  signatureLength))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	31	None	replace
152	[BUG]  [BUGGY]  if  (FramedCompressor.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  FramedCompressor  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressor.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressor.matches(signature,  signatureLength))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressor	31	None	replace
153	[BUG]  [BUGGY]  if  (GzipCompressor.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  GzipCompressor  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressor.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressor.matches(signature,  DEFLATE))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  GzipCompressor	31	None	replace
154	[BUG]  [BUGGY]  if  (BZipCompressor.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  BZipCompressor  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZipCompressor.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZipCompressor.matches(signature,  signatureLength))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  BZipCompressor	31	None	replace
155	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
156	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  BZIP2))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  BZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  BZIP2))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
157	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
158	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
159	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
160	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	14	None	replace
161	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  in))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
162	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  BZIP2);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  BZIP2);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
163	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  0);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  0);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
164	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  GZIP2);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  GZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  GZIP2);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
165	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
166	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(signature,  DEFLATE);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(signature,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(signature,  DEFLATE);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
167	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
168	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  DELETE);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  DELETE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  DELETE);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
169	[BUG]  [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  decompressConcatenated);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readBytes(signatureLength,  decompressConcatenated);	  byte[]    signature    =    in.readBytes(signatureLength);    	non-compiled	[CE]  	62	None	replace
170	[BUG]  [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  BZIP2);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readBytes(signatureLength,  BZIP2);	  byte[]    signature    =    in.readBytes(signatureLength);    	non-compiled	[CE]  	62	None	replace
171	[BUG]  [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  4);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  4);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readBytes(signatureLength,  4);	  byte[]    signature    =    in.readBytes(signatureLength);    	non-compiled	[CE]  	62	None	replace
172	[BUG]  [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  decompressUntilEOF);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readBytes(signatureLength,  decompressUntilEOF);	  byte[]    signature    =    in.readBytes(signatureLength);    	non-compiled	[CE]  	62	None	replace
173	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompress))  {  [CE]  cannot  find  symbol  decompress  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompress))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompress))  {	  if    (GzipCompressorInputStream.matches(signature,    compressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	85	None	replace
174	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
175	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	69	None	replace
176	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
177	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	32	None	replace
178	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	32	None	replace
179	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	32	None	replace
180	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP1))  {  [CE]  cannot  find  symbol  GZIP1  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP1	32	None	replace
181	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  GZIP))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  GZIP))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	32	None	replace
182	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
183	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
184	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
185	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF,  in))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
186	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
187	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressUntilEOF);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressUntilEOF);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
188	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  IOUtils.readFully(in),  signatureLength);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  IOUtils.readFully(in),  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  IOUtils.readFully(in),  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
189	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
190	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressConcatenated);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  IOUtils.readFully(signatureLength),  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
191	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
192	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }	  in.close();    	non-compiled	[CE]  	97	None	replace
193	[BUG]  [BUGGY]  in.flush();  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  in.flush();  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	in.flush();	  in.close();    	non-compiled	[CE]  	97	None	replace
194	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  0,  signatureLength);  }  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  0,  signatureLength);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  0,  signatureLength);  }	  in.close();    	non-compiled	[CE]  	97	None	replace
195	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  try  {  in.close();  }  catch(IOException  e)  {  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if(in!=  null)  {  in.close();  }  else  {  try  {  in.close();  }  catch(IOException  e)  {  }	  in.close();    	compilable	  [FE]  CompressorException  	97	2	replace
196	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  try  {  in.close();  }  catch(IOException  e)  {  }  [FE]  CompressorException  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  try  {  in.close();  }  catch(IOException  e)  {  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  try  {  in.close();  }  catch(IOException  e)  {  }	  in.close();    	compilable	  [FE]  CompressorException  	97	2	replace
197	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  in.close();  }  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  in.close();  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  in.close();  }	  in.close();    	non-compiled	[CE]  	97	None	replace
198	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  GZIP,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  GZIP,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  GZIP,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
199	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
200	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
201	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
202	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
203	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  HZIP))  {  [CE]  cannot  find  symbol  HZIP  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  HZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  HZIP))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  cannot  find  symbol  HZIP	38	None	replace
204	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GzipCompressorInputStream))  {  [CE]  cannot  find  symbol  GzipCompressorInputStream  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GzipCompressorInputStream))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GzipCompressorInputStream))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  GzipCompressorInputStream	34	None	replace
205	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  in,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	34	None	replace
206	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GzipCompressorInputStream.class))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GzipCompressorInputStream.class))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GzipCompressorInputStream.class))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	34	None	replace
207	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
208	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	8	None	replace
209	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  GZIP))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
210	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
211	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
212	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  decompressUntilEOF);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  decompressUntilEOF);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressUntilEOF);    	non-compiled	[CE]  	28	None	replace
213	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  DEFLATE);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signatureLength),  DEFLATE);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressUntilEOF);    	non-compiled	[CE]  	28	None	replace
214	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
215	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {  [CE]  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  	90	None	replace
216	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
217	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength  +  1);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength  +  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength  +  1);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
218	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  DEFLATE);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength,  DEFLATE);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
219	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  4);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  4);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength,  4);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
220	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  1);  [CE]  [FE]                                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength,  1);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
221	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  BZIP2);  [CE]  [FE]                                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength,  BZIP2);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
222	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF,  in))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF,  in))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	44	None	replace
223	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	44	None	replace
224	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	44	None	replace
225	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	44	None	replace
226	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	33	None	replace
227	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
228	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
229	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE,  GZIP2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	33	None	replace
230	[BUG]  [BUGGY]  (GzipCompressorInputStream.matches(signature,  0))  {  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  (GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	(GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
231	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0);  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  0);	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  	4	None	replace
232	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
233	[BUG]  [BUGGY]  CompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
234	[BUG]  [BUGGY]  (GzipCompressorInputStream.matches(signature,  false))  {  [CE]  not  a  statement  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  (GzipCompressorInputStream.matches(signature,  false))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	(GzipCompressorInputStream.matches(signature,  false))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
235	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	12	None	replace
236	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  BZIP2))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  BZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE,  BZIP2))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
237	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
238	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  BZIP2,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  BZIP2,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  BZIP2,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
239	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE))  {  [CE]  cannot  find  symbol  DFLATE  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  DFLATE	12	None	replace
240	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	55	None	replace
241	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  pendingEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  pendingEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	55	None	replace
242	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	55	None	replace
243	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  null))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  null))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  null))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    SIZ_COMPRESSION))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	55	None	replace
244	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
245	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP2))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP2))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
246	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  DELETE))  {  [CE]  cannot  find  symbol  DELETE  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  DELETE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  DELETE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  DELETE	50	None	replace
247	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  MISSING))  {  [CE]  cannot  find  symbol  MISSING  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  MISSING))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  MISSING))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  MISSING	50	None	replace
248	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  MISSING_COMPRESSION))  {  [CE]  cannot  find  symbol  MISSING_COMPRESSION  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  MISSING_COMPRESSION))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  MISSING_COMPRESSION))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  MISSING_COMPRESSION	50	None	replace
249	[BUG]  [BUGGY]  if  (DeFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  DeFLATE  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (DeFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (DeFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  DeFLATE	78	None	replace
250	[BUG]  [BUGGY]  if  (DEFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  String  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (DEFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (DEFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  String  cannot  be  applied  to  given  types;	78	None	replace
251	[BUG]  [BUGGY]  if  (decompressConcatenated.matches(signature,  BZip2CompressorInputStream)||  DEFLATE.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  BZip2CompressorInputStream  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (decompressConcatenated.matches(signature,  BZip2CompressorInputStream)||  DEFLATE.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (decompressConcatenated.matches(signature,  BZip2CompressorInputStream)||  DEFLATE.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  BZip2CompressorInputStream	78	None	replace
252	[BUG]  [BUGGY]  if  (DFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  DFLATE  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (DFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (DFLATE.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  DFLATE	78	None	replace
253	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  DEFLATE.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  DEFLATE.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  DEFLATE.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
254	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
255	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressConcatenated,  PACK200))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressConcatenated,  PACK200))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressConcatenated,  PACK200))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
256	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
257	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  12))  {  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  12))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  12))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
258	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  false))  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  false))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  false))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
259	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  2))  {  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  2))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
260	[BUG]  [BUGGY]  If  (BZip2CompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (BZip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
261	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  null))  {  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  null))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  null))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
262	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated,  in)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated,  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressConcatenated,  in)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  	57	None	replace
263	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	57	None	replace
264	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	57	None	replace
265	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	57	None	replace
266	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  1))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
267	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  false))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  false))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  false))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
268	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  2))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
269	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  12))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  12))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  12))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
270	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  0,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  0,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  0,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
271	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  true))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  true))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  true))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
272	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  null))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  null))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  null))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
273	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	48	None	add
274	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    If  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  ';'  expected	48	None	add
275	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(signature,  SignatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	48	None	add
276	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(Signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]          CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedSnappyCompressorInputStream.matches(Signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedSnappyCompressorInputStream.matches(Signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	48	None	add
277	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]            CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  if  (FramedCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (FramedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    if  (FramedCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	48	None	add
278	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  HZ))  {  [CE]  cannot  find  symbol  HZ  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  HZ))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  HZ))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Gzip))    {    	non-compiled	[CE]  cannot  find  symbol  HZ	35	None	replace
279	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP))  {  [CE]  cannot  find  symbol  BZIP  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  BZIP))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Gzip))    {    	non-compiled	[CE]  cannot  find  symbol  BZIP	35	None	replace
280	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
281	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0),  decompressConcatenated)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  	86	None	replace
282	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
283	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  0.0))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
284	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
285	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
286	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  1.0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  1.0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  1.0))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
287	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
288	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
289	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signature.length))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
290	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressUntilEOF)  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	96	None	replace
291	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
292	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	96	None	replace
293	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  GZIP))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  GZIP))  {	  if    (GzipCompressorInputStream.matches(deFLATE,    signature))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	59	None	replace
294	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  GZIP2))  {	  if    (GzipCompressorInputStream.matches(deFLATE,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	59	None	replace
295	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(!BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if(!BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip2CompressorInputStream.matches(Signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	18	2	replace
296	[BUG]  [BUGGY]  if(!BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(!BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(!BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip2CompressorInputStream.matches(Signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	18	2	replace
297	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	47	None	replace
298	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	47	None	replace
299	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	47	None	replace
300	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  Gzip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Gzip2CompressorInputStream	72	None	replace
301	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  Gzip2CompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)&&  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Gzip2CompressorInputStream	72	None	replace
302	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	72	None	replace
303	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	72	None	replace
304	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  Gzip1CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  Gzip1CompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  Gzip1CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  Gzip1CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Gzip1CompressorInputStream	72	None	replace
305	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	43	None	replace
306	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	43	None	replace
307	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA),  decompressConcatenated)  {  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  	43	None	replace
308	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	43	None	replace
309	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	43	None	replace
310	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(in),  signatureLength);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(in),  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(in),  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
311	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  DEFLATE);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature),  DEFLATE);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
312	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  DEFLATE);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  DEFLATE);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
313	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
314	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
315	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.read()))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.read()))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.read()))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
316	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.readLine()))  {  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.readLine()))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.readLine()))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
317	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isEnabled())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
318	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
319	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.isEnabled())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
320	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.isEnabled())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
321	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
322	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)&&  GzipSnappyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
323	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	73	None	replace
324	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
325	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	73	None	replace
326	[BUG]  [BUGGY]  if  (GzipSnappyCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipSnappyCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipSnappyCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
327	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	83	None	replace
328	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	83	None	replace
329	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (!BZip2CompressorInputStream.matches(signature,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	20	2	replace
330	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	20	2	replace
331	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signatureLength,  0))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signatureLength,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signatureLength,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	20	None	replace
332	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	45	None	replace
333	[BUG]  [BUGGY]  if(!BZip1CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  BZip1CompressorInputStream  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(!BZip1CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(!BZip1CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip1CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  BZip1CompressorInputStream	79	None	replace
334	[BUG]  [BUGGY]  if(Gzip1CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  Gzip1CompressorInputStream  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(Gzip1CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(Gzip1CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip1CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  Gzip1CompressorInputStream	79	None	replace
335	[BUG]  [BUGGY]  if(BZip1CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  BZip1CompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(BZip1CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(BZip1CompressorInputStream.matches(signature,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip1CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  BZip1CompressorInputStream	79	None	replace
336	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	70	None	add
337	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  If  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  If  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    If  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  ';'  expected	70	None	add
338	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(Signature,  0))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(Signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(Signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	70	None	add
339	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  	67	None	replace
340	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated);  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength);    	non-compiled	[CE]  	23	None	replace
341	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signatureLength  +  1);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signatureLength  +  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(signatureLength  +  1);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength);    	non-compiled	[CE]  	23	None	replace
342	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signatureLength  -  1);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signatureLength  -  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(signatureLength  -  1);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength);    	non-compiled	[CE]  	23	None	replace
343	[BUG]  [BUGGY]  InputStream  in  =  new  Gzip2CompressorInputStream(signatureLength);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  Gzip2CompressorInputStream(signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  Gzip2CompressorInputStream(signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength);    	non-compiled	[CE]  	23	None	replace
344	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
345	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
346	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  2)  {  in.mark(signatureLength);  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
347	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
348	[BUG]  [BUGGY]  in.mark(signatureLength  -  1);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  in.mark(signatureLength  -  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	in.mark(signatureLength  -  1);	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
349	[BUG]  [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  2)  {  in.mark(signatureLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
350	[BUG]  [BUGGY]  if  (in.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.mark(signatureLength))  {  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (in.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (in.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.mark(signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
351	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	95	None	replace
352	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
353	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP1))  {  [CE]  cannot  find  symbol  GZIP1  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  GZIP1))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP1	10	None	replace
354	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  GZIP))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE,  GZIP))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
355	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
356	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
357	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	89	None	replace
358	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  LZMA))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  LZMA))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  LZMA))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	89	None	replace
359	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(GZipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    if    (GZipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	87	None	replace
360	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	13	None	replace
361	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	13	None	replace
362	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	41	None	replace
363	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  	41	None	replace
364	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	41	None	replace
365	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	41	None	replace
366	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
367	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
368	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated  ||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated  ||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated  ||  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
369	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated,  in)  {  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated,  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated,  in)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    decompressConcatenated)    {    	non-compiled	[CE]  	56	None	replace
370	[BUG]  [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  FrameCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FrameCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (FrameCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameCompressorInputStream	75	None	replace
371	[BUG]  [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  FrameCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FrameCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (FrameCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameCompressorInputStream	75	None	replace
372	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
373	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
374	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
375	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
376	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    If    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  ';'  expected	16	None	replace
377	[BUG]  [BUGGY]  If  (GZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    If    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  ';'  expected	16	None	replace
378	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    If    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  ';'  expected	16	None	replace
379	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated)  {  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
380	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated)  {  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
381	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
382	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
383	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
384	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (GzipCompressorInputStream.matches(signature,  0)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
385	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)&&  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
386	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
387	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
388	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
389	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
390	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
391	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
392	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF),  in)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	53	None	replace
393	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [CE]  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  UntilEOF),  in)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  	53	None	replace
394	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  GZIP);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  GZIP);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  GZIP);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
395	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  PACK200);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  PACK200);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  PACK200);	  CompressorInputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	63	None	replace
396	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipSnappyCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipSnappyCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipSnappyCompressorInputStream.matches(signature,  0.0))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
397	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signatureLength,  0.0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signatureLength,  0.0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signatureLength,  0.0))  {	  if    (GzipCompressorInputStream.matches(signature,    0.0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
398	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	100	None	replace
399	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signature.length))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  in.mark(signature.length))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
400	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  2))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  2))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
401	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in);  [CE]  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in);	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	100	None	replace
402	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.MAX_VALUE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.MAX_VALUE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.MAX_VALUE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
403	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  long))  {  [CE]  '.class'  expected  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  long))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  long))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  '.class'  expected	52	None	replace
404	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.toHexString(in)))  {  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.toHexString(in)))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  Integer.toHexString(in)))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	52	None	replace
405	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {  [CE]  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	69	None	replace
406	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
407	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	69	None	replace
408	[BUG]  [BUGGY]  if  (Gzip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  Gzip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (Gzip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (Gzip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Gzip2CompressorInputStream	72	None	replace
409	[BUG]  [BUGGY]  if  (GZIPCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GZIPCompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZIPCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZIPCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GZIPCompressorInputStream	72	None	replace
410	[BUG]  [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZipCompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	72	None	replace
411	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	47	None	replace
412	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated)  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	47	None	replace
413	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF),  decompressConcatenated)  {  [CE]  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  UntilEOF),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  	40	None	replace
414	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	40	None	replace
415	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	40	None	replace
416	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	40	None	replace
417	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  DEFLATE),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE),    decompressConcatenated)    {    	non-compiled	[CE]  	40	None	replace
418	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signature))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  signature))  {	  if    (GzipCompressorInputStream.matches(deFLATE,    signature))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	59	None	replace
419	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
420	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZIP))  {  [CE]  cannot  find  symbol  LZIP  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZIP))  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  cannot  find  symbol  LZIP	43	None	replace
421	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
422	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  DEFLATE.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
423	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  DEFLATE.matches(signature,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    DEFLATE.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	78	None	replace
424	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  signatureLength))  {  [CE]  cannot  find  symbol  decompress  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	44	None	replace
425	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(deFLATE,  signature,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(deFLATE,  signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(deFLATE,  signature,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	44	None	replace
426	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	44	None	replace
427	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  decompressUntilEOF))  {  [CE]  cannot  find  symbol  decompress  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	44	None	replace
428	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	50	None	replace
429	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signatureLength,  DEFLATE);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read(signatureLength,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read(signatureLength,  DEFLATE);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
430	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  in))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
431	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
432	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	82	None	replace
433	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  descompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  descompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	82	None	replace
434	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	34	None	replace
435	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  long))  {  [CE]  '.class'  expected  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  long))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  long))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  '.class'  expected	34	None	replace
436	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(in,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	34	None	replace
437	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	34	None	replace
438	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);  [CE]  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  	90	None	replace
439	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	90	None	replace
440	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  in.decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  in.decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
441	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  in.decompressConcatenate)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  in.decompressConcatenate)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  in.decompressConcatenate)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
442	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressUntilEOF)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  decompressUntilEOF)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
443	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(in,  DEFLATE)||  in.decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(in,  DEFLATE)||  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(in,  DEFLATE)||  in.decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
444	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null),  decompressConcatenated)  {  [CE]  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  	5	None	replace
445	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)&&  decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)&&  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null)&&  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
446	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	41	None	replace
447	[BUG]  [BUGGY]  InputStream  in  =  new  GZip2CompressorInputStream(signatureLength);  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZip2CompressorInputStream(signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZip2CompressorInputStream(signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength);    	non-compiled	[CE]  	23	None	replace
448	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  in);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  in);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
449	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  	27	None	replace
450	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	96	None	replace
451	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  IOUtils.readFully(in),  signatureLength);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  IOUtils.readFully(in),  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  IOUtils.readFully(in),  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
452	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  IOUtils.readFully(in));  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  IOUtils.readFully(in));  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(deFLATE,  IOUtils.readFully(signatureLength),  IOUtils.readFully(in));	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
453	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(DEFLATE,  IOUtils.readFully(in),  signatureLength);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(DEFLATE,  IOUtils.readFully(in),  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(DEFLATE,  IOUtils.readFully(in),  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
454	[BUG]  [BUGGY]  InputStream  in  =  new  GZIPCompressorInputStream(in);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIPCompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIPCompressorInputStream(in);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  	67	None	replace
455	[BUG]  [BUGGY]  InputStream  in  =  new  BZIP2CompressorInputStream(in);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZIP2CompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZIP2CompressorInputStream(in);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
456	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(deFLATE);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(deFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(deFLATE);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
457	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
458	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
459	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
460	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
461	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	add	if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
462	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	compilable	  [FE]  CompressorException  	7	2	replace
463	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
464	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SZ))  {  [CE]  cannot  find  symbol  SZ  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SZ))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SZ))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Gzip))    {    	non-compiled	[CE]  cannot  find  symbol  SZ	35	None	replace
465	[BUG]  [BUGGY]  byte[]  signature  =  decompressUntilEOF.getBytes(in);  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  decompressUntilEOF.getBytes(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  decompressUntilEOF.getBytes(in);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
466	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(compressConcatenated);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(compressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(compressConcatenated);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
467	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  DEFLATE);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  DEFLATE);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
468	[BUG]  [BUGGY]  if  (BZipCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  BZipCompressorInputStream  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    if    (GZipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  BZipCompressorInputStream	87	None	replace
469	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  if  (GZipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  if  (GZipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if  (GZipCompressorInputStream.matches(signature,  0)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	6	None	add
470	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	71	None	replace
471	[BUG]  [BUGGY]  if(BZip0CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  BZip0CompressorInputStream  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(BZip0CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(BZip0CompressorInputStream.matches(signature,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  BZip0CompressorInputStream	15	None	replace
472	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signature,  BZIP2))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signature,  BZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signature,  BZIP2))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
473	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  BZIP2))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  BZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  BZIP2))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
474	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  decompressConcatenated)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)||  decompressConcatenated)  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	74	None	replace
475	[BUG]  [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  FrameCompressorInputStream  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FrameCompressorInputStream.matches(signature,  0))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FrameCompressorInputStream	74	None	replace
476	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)&&  decompressConcatenated)  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)&&  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)&&  decompressConcatenated)  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	74	None	replace
477	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  if  (BZip1CompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  if  (BZip1CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (BZip2CompressorInputStream.matches(signature,    0))    {    if  (BZip1CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
478	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	32	None	replace
479	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signatureLength,  pendingEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signatureLength,  pendingEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	21	None	replace
480	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  UntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
481	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompress,  signature,  DEFLATE))  {  [CE]  cannot  find  symbol  decompress  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompress,  signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompress,  signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	10	None	replace
482	[BUG]  [BUGGY]  CompressorInputStream  in  =  GzipCompressorInputStream.matches(signature,  0);  [CE]  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  CompressorInputStream  in  =  GzipCompressorInputStream.matches(signature,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	CompressorInputStream  in  =  GzipCompressorInputStream.matches(signature,  0);	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  	4	None	replace
483	[BUG]  [BUGGY]  LazyCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  LazyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	LazyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
484	[BUG]  [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  1))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GzipCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GzipCompressorInputStream.matches(signature,  1))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
485	[BUG]  [BUGGY]  If  (FramedCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (FramedCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (FramedCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
486	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  0)  {  in.mark(signatureLength);  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
487	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
488	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  in.close();  }  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  in.close();  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  in.close();  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
489	[BUG]  [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  in.reset();  }  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  in.reset();  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(signatureLength!=  0)  {  in.mark(signatureLength);  }  else  {  in.reset();  }	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
490	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
491	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  BZIP2);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  BZIP2);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  BZIP2);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
492	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  PACK200);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  PACK200);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  PACK200);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
493	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  0);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  0);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  0);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
494	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature))  {  [CE]  cannot  find  symbol  deFLATE  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(deFLATE,  signature))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	33	None	replace
495	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
496	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
497	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressUntilEOF)  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
498	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
499	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
500	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength  +  12);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength  +  12);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength  +  12);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
501	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength  -  1);  [CE]  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength  -  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength  -  1);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
502	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  decompressUntilEOF);  [CE]  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(signatureLength,  decompressUntilEOF);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(signatureLength,  decompressUntilEOF);	  byte[]    signature    =    in.getBytes(signatureLength);    	non-compiled	[CE]  	29	None	replace
503	[BUG]  [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  DEFLATE);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength,  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readBytes(signatureLength,  DEFLATE);	  byte[]    signature    =    in.readBytes(signatureLength);    	non-compiled	[CE]  	62	None	replace
504	[BUG]  [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength  +  12);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.readBytes(signatureLength  +  12);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.readBytes(signatureLength  +  12);	  byte[]    signature    =    in.readBytes(signatureLength);    	non-compiled	[CE]  	62	None	replace
505	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  PACK200);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  PACK200);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  PACK200);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
506	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  10,  signatureLength);  }  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  10,  signatureLength);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  10,  signatureLength);  }	  in.close();    	non-compiled	[CE]  	97	None	replace
507	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  decompressUntilEOF  =  false;  }  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  decompressUntilEOF  =  false;  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  decompressUntilEOF  =  false;  }	  in.close();    	non-compiled	[CE]  	97	None	replace
508	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  in))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  in))  {	  if    (GzipCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
509	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
510	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in);  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  return  new  GzipCompressorInputStream(in);	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	92	None	replace
511	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  2))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  2))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
512	[BUG]  [BUGGY]  if  (GZipCompressor.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  GZipCompressor  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZipCompressor.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZipCompressor.matches(signature,  signatureLength))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressor	31	None	replace
513	[BUG]  [BUGGY]  if  (GZIPCompressor.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  GZIPCompressor  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZIPCompressor.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZIPCompressor.matches(signature,  signatureLength))  {	  if    (GzipCompressor.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  GZIPCompressor	31	None	replace
514	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.matches(signature,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)||  in.matches(signature,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
515	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE)&&  decompressUntilEOF.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
516	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  	95	None	replace
517	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	95	None	replace
518	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	95	None	replace
519	[BUG]  [BUGGY]  If  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    If    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  ';'  expected	16	None	replace
520	[BUG]  [BUGGY]  If  (BZip2CompressorInputStream.matches(signature,  0.0))  {  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (BZip2CompressorInputStream.matches(signature,  0.0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (BZip2CompressorInputStream.matches(signature,  0.0))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    If    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  ';'  expected	16	None	replace
521	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);  [CE]  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  return  new  GzipCompressorInputStream(in);	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  	54	None	replace
522	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature));  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature));  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(signature));	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressUntilEOF);    	non-compiled	[CE]  	28	None	replace
523	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressUntilEOF,  IOUtils.readFully(in),  signatureLength);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressUntilEOF,  IOUtils.readFully(in),  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressUntilEOF,  IOUtils.readFully(in),  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressUntilEOF);    	non-compiled	[CE]  	28	None	replace
524	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  GZIP))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature,  GZIP))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
525	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
526	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP),  in)  {  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  	38	None	replace
527	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  signature))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  signature))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
528	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  signature))  {  [CE]  cannot  find  symbol  decompress  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompress,  DEFLATE,  signature))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	39	None	replace
529	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
530	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signatureLength,  0))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signatureLength,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signatureLength,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
531	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
532	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
533	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
534	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.')  ==  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.')  ==  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.')  ==  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
535	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.')!=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.')!=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.')!=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
536	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.lastIndexOf('.')  >=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.lastIndexOf('.')  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.lastIndexOf('.')  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
537	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.length()  >=  0)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.length()  >=  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.length()  >=  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
538	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  32))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  32))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  32))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    0))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	37	None	replace
539	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressUntilEOF)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	83	None	replace
540	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	83	None	replace
541	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  IOUtils.readFully(signature),  signatureLength);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  IOUtils.readFully(signature),  signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(decompressConcatenated,  IOUtils.readFully(signature),  signatureLength);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
542	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  if  (GZipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  if  (GZipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    if  (GZipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	70	None	add
543	[BUG]  [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP2))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	51	None	replace
544	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  GZIP2))  {  [CE]  cannot  find  symbol  GZIP2  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  GZIP2))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  GZIP2	51	None	replace
545	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  SNAPPY_RAW))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
546	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
547	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
548	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  in))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  in))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  in))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
549	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(decompressConcatenated,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(decompressConcatenated,    signature))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	76	None	replace
550	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)&&  signatureLength)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)&&  signatureLength)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  DEFLATE)&&  signatureLength)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)&&    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	57	None	replace
551	[BUG]  [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FrameCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FrameCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	75	None	replace
552	[BUG]  [BUGGY]  if  (BZip2Compressor.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  BZip2Compressor  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2Compressor.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2Compressor.matches(signature,  decompressConcatenated))  {	  if    (FrameCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	75	None	replace
553	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressUntilEOF)||  BZip2CompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	77	None	replace
554	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(deFLATE,  signature))  {  [CE]  cannot  find  symbol  deFLATE  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(deFLATE,  signature))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(deFLATE,  signature))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  deFLATE	8	None	replace
555	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2SnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2SnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2SnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
556	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE)||  BZip2CompressorInputStream.matches(signatureLength,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	8	None	replace
557	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature)||  DEFLATE)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature)||  DEFLATE)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature)||  DEFLATE)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
558	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature)||  decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature)||  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(decompressConcatenated,  signature)||  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
559	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.isEnabled())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.isEnabled())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(decompressConcatenated,  signature)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
560	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	91	None	replace
561	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.getParent())  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.getParent())  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.getParent())  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
562	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  createCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  InputStream    in    =    createCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	65	None	replace
563	[BUG]  [BUGGY]  if  (GZip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZip2CompressorInputStream.matches(signature,  0)||  Gzip2CompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    Gzip2CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	72	None	replace
564	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {  [CE]  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  	90	None	replace
565	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated),  in)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated),  in)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  	39	None	replace
566	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
567	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)&&  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  decompressConcatenated)&&  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	39	None	replace
568	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  1,  in.length);  }  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  1,  in.length);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  1,  in.length);  }	  in.close();    	non-compiled	[CE]  	97	None	replace
569	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  10,  signatureLength);  return  new  GzipCompressorInputStream(in);  }  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  10,  signatureLength);  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(signature,  0,  signature,  10,  signatureLength);  return  new  GzipCompressorInputStream(in);  }	  in.close();    	non-compiled	[CE]  	97	None	replace
570	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  LZMA))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
571	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  PACK200))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
572	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	74	None	replace
573	[BUG]  [BUGGY]  if  (GzipSnappyCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipSnappyCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipSnappyCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
574	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  1))  {  [CE]  cannot  find  symbol  GzipSnappyCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0)||  GzipSnappyCompressorInputStream.matches(signature,  1))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipSnappyCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GzipSnappyCompressorInputStream	73	None	replace
575	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressConcatenated)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	92	None	replace
576	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  -  1))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  -  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  -  1))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
577	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  12))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  12))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  12))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	92	None	replace
578	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  null)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  null)||  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    null))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
579	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  descompressConcatenated))  {  [CE]  cannot  find  symbol  descompressConcatenated  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  descompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  descompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  descompressConcatenated	77	None	replace
580	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompress))  {  [CE]  cannot  find  symbol  decompress  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompress))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompress))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	77	None	replace
581	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {  [CE]  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	69	None	replace
582	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	69	None	replace
583	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {  [CE]  'void'  type  not  allowed  here  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  'void'  type  not  allowed  here	69	None	replace
584	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressconcatenated))  {  [CE]  cannot  find  symbol  decompressconcatenated  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressconcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressconcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompressconcatenated	68	None	replace
585	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    BZip2CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	7	None	replace
586	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
587	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressConcatenation))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressConcatenation))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressConcatenation))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
588	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.isEnabled(decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.isEnabled())    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	91	None	replace
589	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  DEFLATE)||  in.mark(signatureLength))  {	  if    (FramedCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	47	None	replace
590	[BUG]  [BUGGY]  if  (FramedGzCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedGzCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedGzCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedGzCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedGzipCompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  FramedGzCompressorInputStream	46	None	replace
591	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressConcatenated)  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.decompressConcatenated)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
592	[BUG]  [BUGGY]  in.mark(signature.length);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  in.mark(signature.length);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	in.mark(signature.length);	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
593	[BUG]  [BUGGY]  in.setLength(signatureLength);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  in.setLength(signatureLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	in.setLength(signatureLength);	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
594	[BUG]  [BUGGY]  in.write('n');  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  in.write('n');  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	in.write('n');	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
595	[BUG]  [BUGGY]  in.mark(signatureLength  +  1);  [CE]  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  in.mark(signatureLength  +  1);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	in.mark(signatureLength  +  1);	  in.mark(signatureLength);    	non-compiled	[CE]  	26	None	replace
596	[BUG]  [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FrameCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FrameCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FrameCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameCompressorInputStream	75	None	replace
597	[BUG]  [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  [CE]  cannot  find  symbol  FrameCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FrameCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FrameCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {	  if    (FrameCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FrameCompressorInputStream	75	None	replace
598	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(in),  DEFLATE);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(in),  DEFLATE);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(in),  DEFLATE);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    DEFLATE);    	non-compiled	[CE]  	24	None	replace
599	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
600	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength  +  1))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	54	None	replace
601	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signature.length);  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(signature.length);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(signature.length);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength);    	non-compiled	[CE]  	23	None	replace
602	[BUG]  [BUGGY]  if  (BZip1CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  BZip1CompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip1CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip1CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    compressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  BZip1CompressorInputStream	22	None	replace
603	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength),  decompressConcatenated)  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  	95	None	replace
604	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.mark(signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.mark(signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signatureLength))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	95	None	replace
605	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  LZMA)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    LZMA))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	43	None	replace
606	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  LZMA))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  LZMA))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP,  LZMA))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	38	None	replace
607	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip2CompressorInputStream.matches(signature,    SignatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	17	None	replace
608	[BUG]  [BUGGY]  If  (GipCompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  If  (GipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	If  (GipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    If    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	2	None	replace
609	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(IOUtils.readFully(in),  decompressConcatenated);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(IOUtils.readFully(in),  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(IOUtils.readFully(in),  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressUntilEOF);    	non-compiled	[CE]  	28	None	replace
610	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	83	None	replace
611	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {  [CE]  'void'  type  not  allowed  here  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  'void'  type  not  allowed  here	83	None	replace
612	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength),  decompressConcatenated)  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  	96	None	replace
613	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {  [CE]  'void'  type  not  allowed  here  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    in.mark(signatureLength))    {    	non-compiled	[CE]  'void'  type  not  allowed  here	96	None	replace
614	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
615	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  in);  [CE]  [FE]                              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  in);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GzipCompressorInputStream(deFLATE,  in);	  InputStream    in    =    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  	64	None	replace
616	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0)||  in.matches(signature,  0))  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0)||  in.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  0)||  in.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    (GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
617	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    signatureLength))    {    if    (BZip1CompressorInputStream.matches(signature,    signatureLength))    {    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	79	None	replace
618	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {  [CE]  cannot  find  symbol  length  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  length	52	None	replace
619	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	52	None	replace
620	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.getBytes()))  {  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.getBytes()))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  in.getBytes()))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
621	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.charAt(signatureLength  -  1)!=  '.')  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.charAt(signatureLength  -  1)!=  '.')  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.charAt(signatureLength  -  1)!=  '.')  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
622	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.'),  decompressConcatenated  >  0)  {  [CE]  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.'),  decompressConcatenated  >  0)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.indexOf('.'),  decompressConcatenated  >  0)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.indexOf('.')    >=    0)    {    	non-compiled	[CE]  	101	None	replace
623	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenation))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenation))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  BZip2CompressorInputStream.matches(signature,  decompressConcatenation))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated)||    BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
624	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    in.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	88	None	replace
625	[BUG]  [BUGGY]  byte[]  signature  =  in.read(signatureLength,  3);  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.read(signatureLength,  3);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.read(signatureLength,  3);	  byte[]    signature    =    in.read(signatureLength);    	non-compiled	[CE]  	66	None	replace
626	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DELETE))  {  [CE]  cannot  find  symbol  DELETE  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DELETE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated,  DELETE))  {	  if    (BZip2CompressorInputStream.matches(signature,    decompressConcatenated,    BZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  DELETE	12	None	replace
627	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.readLine()))  {  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.readLine()))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.readLine()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
628	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.read()))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.read()))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.read()))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	34	None	replace
629	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in,  decompressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	34	None	replace
630	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {  [CE]  cannot  find  symbol  length  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  in.length))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    in))    {    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
631	[BUG]  [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(signature);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  GZIP2CompressorInputStream(signature);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  GZIP2CompressorInputStream(signature);	  InputStream    in    =    new    GZIP2CompressorInputStream(in);    	non-compiled	[CE]  	99	None	replace
632	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  0,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	71	None	replace
633	[BUG]  [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(in),  decompressConcatenated);  [CE]  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(in),  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	InputStream  in  =  new  BZip2CompressorInputStream(in,  IOUtils.readFully(in),  decompressConcatenated);	  InputStream    in    =    new    BZip2CompressorInputStream(signatureLength,    IOUtils.readFully(in),    decompressConcatenated);    	non-compiled	[CE]  	25	None	replace
634	[BUG]  [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  GZIP))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	51	None	replace
635	[BUG]  [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GZipCompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated,    GZIP2))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	51	None	replace
636	[BUG]  [BUGGY]  if  (!GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated),    in)    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	53	None	replace
637	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	42	None	replace
638	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SIZIP))  {  [CE]  cannot  find  symbol  SIZIP  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SIZIP))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated,  SIZIP))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    decompressConcatenated,    Gzip))    {    	non-compiled	[CE]  cannot  find  symbol  SIZIP	35	None	replace
639	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [CE]  [FE]                                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated),  in)  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  	14	None	replace
640	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
641	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
642	[BUG]  [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.startsWith(GZIP2))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.startsWith(GZIP2))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (!BZip2CompressorInputStream.matches(signature,  decompressConcatenated)&&  in.startsWith(GZIP2))  {	  if    (!BZip2CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
643	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	45	None	replace
644	[BUG]  [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {	  if    (FramedCompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	45	None	replace
645	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [CE]  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE),  in)  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  	33	None	replace
646	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.matches(signature,  decompressConcatenated))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  DEFLATE)||  in.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	33	None	replace
647	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0)||  GZipCompressorInputStream.matches(signature,  0))  {  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0)||  GZipCompressorInputStream.matches(signature,  0))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(GZipCompressorInputStream.matches(signature,  0)||  GZipCompressorInputStream.matches(signature,  0))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    if    (GZipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	87	None	replace
648	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0)||  GZipCompressorInputStream.matches(signature,  1))  {  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0)||  GZipCompressorInputStream.matches(signature,  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if(GZipCompressorInputStream.matches(signature,  0)||  GZipCompressorInputStream.matches(signature,  1))  {	  if    (GzipCompressorInputStream.matches(signature,    0))    {    if    (GZipCompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	87	None	replace
649	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressConcatenated);  [CE]  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressConcatenated);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated,  decompressConcatenated);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
650	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(denominationLength);  [CE]  [FE]                        CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  byte[]  signature  =  in.getBytes(denominationLength);  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	byte[]  signature  =  in.getBytes(denominationLength);	  byte[]    signature    =    in.getBytes(decompressConcatenated);    	non-compiled	[CE]  	61	None	replace
651	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.mark(signatureLength))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.mark(signatureLength))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.mark(signatureLength))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	41	None	replace
652	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  DEFLATE,  DEFLATE)||  in.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    DEFLATE))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	41	None	replace
653	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressConcatenated)  {  [CE]  [FE]            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressConcatenated)  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length),  decompressConcatenated)  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  	100	None	replace
654	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  12))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  12))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  +  12))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
655	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  -  1))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  -  1))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signature.length  -  1))  {	  if    (GzipCompressorInputStream.matches(signature,    decompressConcatenated)&&    in.mark(signature.length))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	100	None	replace
656	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  decompressUntilEOF))  {  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  decompressUntilEOF))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressConcatenated,  decompressUntilEOF))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	44	None	replace
657	[BUG]  [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompress))  {  [CE]  cannot  find  symbol  decompress  [FE]                            CompressorException      [CONTEXT]      final  byte[]  signature  =  new  byte[12];  in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }      [BUGGY]  if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompress))  {  [BUGGY]      return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	224	224	2	replace	if  (GzipCompressorInputStream.matches(signature,  decompressUntilEOF,  decompress))  {	  if    (GzipCompressorInputStream.matches(signature,    DEFLATE,    decompressUntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  decompress	44	None	replace
